{"remainingRequest":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\product\\backup\\src\\Analysis\\TrendAnalysisOpPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\src\\Analysis\\TrendAnalysisOpPage.vue","mtime":1626742026499},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TrendAnalysisOpPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA","file":"TrendAnalysisOpPage.vue","sourceRoot":"src/Analysis","sourcesContent":["<template>\n  <div>\n    <el-container class=\"trend-analysis-op-page\">\n      <el-header style=\"height: 60px\">\n        <label class=\"options\">操作页</label>\n      </el-header>\n      <el-main style=\"padding: 2px;margin-left: 10px; margin-right: 10px\">\n        <el-form ref=\"ruleForm\" label-width=\"80px\" class=\"demo-ruleForm\" size=\"mini\">\n          <el-form-item label=\"设备名称:\">{{getequName}}</el-form-item>\n    <!--    <TrendAnalysisTree  @firstdo=\"defaultdo\"\n                            @getPointFeatureTree2Data=\"getmytree\">\n        </TrendAnalysisTree>-->\n          <trend-analysis-point-tree\n            @firstdo=\"defaultdo\"\n            @getPointFeatureTree2Data=\"getmytree\"></trend-analysis-point-tree>\n          <div>\n            <RtHisTimeSelect ref='timeset' @radiostatus='changestatus'></RtHisTimeSelect>\n          </div>\n          <el-form-item>\n            <el-button v-if=\"nowstatus == 2\" @click=\"FreshHistoryGraph\">刷新</el-button>\n            <el-button v-if='nowstatus == 1 &&freshstatus == 0' @click='startinterval'>刷新</el-button>\n            <el-button v-if=\"nowstatus == 1 &&freshstatus == 1\" @click='stopinterval'>停止</el-button>\n          </el-form-item>\n        </el-form>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport RtHisTimeSelect from \"../components/RtHisTimeSelect.vue\";\nimport TrendAnalysisPointTree from \"../Analysis/TrendAnalysisPointTree\";\n// import TrendAnalysisTree from \"./TrendAnalysisTree\";\n// import TrendAnalysisPointTree from \"../PumpImpactDiagnosis/PumpImpactDiagnosisPointFeatureTree\";\n\nexport default {\n  name: \"TrendAnalysisOpPage\",\n  components: {\n\n    TrendAnalysisPointTree,\n    RtHisTimeSelect,\n  },\n  data() {\n    return {\n      checkList: ['',''],\n      //单通道相关数据\n      mypointid: null,\n      myinterval: null,\n      freshstatus: 1,\n      nowstatus: 1,\n      msg: '',\n      EquName: '',\n      isnontree: false,\n      mytrees: null,\n      mytime: null,\n      lasttree: null,\n      type:0,\n    };\n  },\n  // created(){\n  //   startinterval\n  // },\n  mounted() {\n    //接收A组件的数据\n    //this.getPoint(this.msg);\n    this.$parent.dataloading();\n  },\n  computed: {\n    nodeData() {\n      return this.$store.state.nodeData;\n    },\n    equid() {\n      return this.$store.state.equid;\n    },\n    nodeNum() {\n      return this.$store.state.nodeNum;\n    },\n    getequName() {\n      return this.$store.state.equName;\n    }\n  },\n\n  watch: {\n    equid(){\n\n      // console.log('here is not use ')\n      // if(this.myinterval) {\n      //     var CancelToken = this.$axios.CancelToken;\n      //     clearInterval(this.myinterval)\n      // }\n      // if (typeof this.cancel == 'function') {\n      //     this.cancel()\n      // }\n\n    }\n\n  },\n\n  beforeDestroy() {\n    if(this.myinterval) {\n      clearInterval(this.myinterval)\n    }\n  },\n\n\n  methods: {\n    isequaltree(tree1, tree2) {\n      var len1 = tree1.length;\n      var len2 = tree2.length;\n      if (len1 != len2) {\n        return false\n      } else {\n        for (var i = 0; i < len1; ++i) {\n          if (tree1[i].id != tree2[i].id) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n\n    getmytree(mytreedata) { //用于接收测点树的数据\n        console.log('---------------getmytree-------------------');\n        console.log(mytreedata);\n        this.mytrees = mytreedata;\n        console.log(this.mytrees,'tree sheding ')\n        // console.log(this.mytrees.checkedNodes[0].id)\n        if (this.nowstatus == 1) {\n          this.startinterval();\n        } else {\n          if(this.myinterval) {\n            var CancelToken = this.$axios.CancelToken;\n            clearInterval(this.myinterval)\n          }\n          if (typeof this.cancel == 'function') {\n            this.cancel()\n          }\n          this.FreshHistoryGraph();\n        }\n\n    },\n\n    FreshHistoryGraph() {\n      console.log(this.mytrees,'dayinxiaa')\n      if (this.mytrees.treeSelect == 0) {\n        if (this.mytrees.checkedNodes.length === 1) {\n          //判断空树\n          this.isnontree = true;\n          this.$emit('cleanChart');\n\n          this.$parent.$emit('datafail')\n        } else {\n\n          //  that.$parent.$emit('datafail')\n          this.$parent.dataloading();\n          this.mytime = this.$refs.timeset.timedata();\n          var stime = this.mytime.form.starttime;\n          var etime = this.mytime.form.endtime;\n\n          var pointids = '';\n          for (var i = 1; i < this.mytrees.checkedNodes.length; ++i) {\n            pointids += this.mytrees.checkedNodes[i].id;\n            if (i != this.mytrees.checkedNodes.length - 1) {\n              pointids += ','\n            }\n          }\n          if(this.mytrees.checkedNodes[0].id== '振动-位移'|| this.mytrees.checkedNodes[0].id== '振动-加速度'){\n            this.type = 113;\n          }else if(this.mytrees.checkedNodes[0].id== '振动-速度'){\n            this.type = 114;\n          }\n          this.mypointid = pointids;\n          if(this.myinterval) {\n            clearInterval(\n              this.myinterval\n            )\n          }\n          this.$emit('drawhistoryduotongdao', this.$store.state.equid, this.mypointid, stime, etime, this.mytrees.checkedNodes, this.mytrees.featureSelect,this.type);\n        }\n      } else {\n        if(this.myinterval) {\n          clearInterval(this.myinterval)\n        }\n        if (this.mytrees.checkedNodes.length === 0) {\n          //判断空树\n          this.isnontree = true;\n          this.$emit('cleanChart');\n          this.$parent.$emit('datafail');\n        } else {\n          if(this.myinterval) {\n            clearInterval(this.myinterval)\n          }\n          this.$parent.dataloading();\n          this.mytime = this.$refs.timeset.timedata();\n          var stime = this.mytime.form.starttime;\n          var etime = this.mytime.form.endtime;\n          //console.log(stime, etime)\n          this.mypointid = this.mytrees.checkedNodes[0].pointUuid;\n          // console.log(\"操作页dayin\");\n          // console.log(this.mytrees.checkedNodes[0].label)\n   /*       if(this.mytrees.checkedNodes[0].id== '振动-位移'|| this.mytrees.checkedNodes[0].id== '振动-加速度'){\n            this.type = 113;\n          }else if(this.mytrees.checkedNodes[0].id== '振动-速度'){\n            this.type = 114;\n          }*/\n          if(this.myinterval) {\n            clearInterval(\n              this.myinterval\n            )\n          }\n          this.$emit('drawhistorydantongdao', this.$store.state.equid, this.mytrees.checkedNodes[0].xid, stime, etime, this.mypointid, this.mytrees.checkedNodes,this.mytrees.checkedNodes[0].label);\n        }\n\n\n      }\n    },\n\n    startinterval() {  //实时情况下每三秒接收一次数据\n      this.freshstatus = 1;\n      this.getrealdata();\n      this.lasttree = this.mytrees;\n      let that = this;\n      if(this.myinterval){\n        clearInterval(this.myinterval)\n      }\n      // return\n      this.myinterval = setInterval(function () {\n        //如果两次间隔的测点树一致之间添加数据n\n        console.log()\n        if (that.isequaltree(that.mytrees.checkedNodes, that.lasttree.checkedNodes)) {\n          // console.log(12334)\n          if (that.mytrees.treeSelect == '0' && that.mytrees.featureSelect != that.lasttree.featureSelect) {\n            that.getrealdata();\n            that.lasttree = that.mytrees;\n          } else {\n            // console.log(232323)\n            if (that.isnontree != true) {  //空树不需要添加数据\n              if (that.mytrees.treeSelect == 1) {\n                that.$emit('addrealdantongdao');\n              } else {\n                that.$emit('addrealduotongdao', that.$store.state.equid, that.mypointid);\n              }\n\n            }\n          }\n        } else {\n          //否则更新\n          console.log('here is not interval');\n          that.getrealdata();\n          that.lasttree = that.mytrees;\n          if(this.myinterval) {\n            clearInterval(this.myinterval);\n          }\n          this.$nextTick(()=> {this.startinterval()})\n        }\n\n      }, 3000)\n\n    },\n\n\n    async getrealdata() {\n      //初始化树，并添加第一次访问的图谱数据\n      let that = this;\n\n      if (this.mytrees.treeSelect == 0) {\n        if (this.mytrees.checkedNodes.length === 1) {\n          //判断空树\n          this.isnontree = true;\n          this.$emit('cleanChart');\n\n          // that.$parent.$emit('datafail')\n        } else {\n          this.isnontree = false;\n          var pointids = '';\n          for (var i = 1; i < this.mytrees.checkedNodes.length; ++i) {\n            pointids += this.mytrees.checkedNodes[i].id;\n            if (i != this.mytrees.checkedNodes.length - 1) {\n              pointids += ','\n            }\n          }\n          if(this.mytrees.checkedNodes[0].id== '振动-位移'|| this.mytrees.checkedNodes[0].id== '振动-加速度'){\n            this.type = 113;\n          }else if(this.mytrees.checkedNodes[0].id== '振动-速度'){\n            this.type = 114;\n          }\n          this.mypointid = pointids;\n          // console.log(this.mypointid)\n          console.log( this.$store.state.equid, pointids, this.mytrees.checkedNodes, this.mytrees.featureSelect,this.type)\n          await that.$emit('drawrealduotongdao', this.$store.state.equid, pointids, this.mytrees.checkedNodes, this.mytrees.featureSelect,this.type);\n        }\n      } else {\n        if (this.mytrees.checkedNodes.length === 0) {\n          //判断空树\n          this.isnontree = true;\n          this.$emit('cleanChart');\n          console.log(2);\n          that.$parent.$emit('datafail')\n        } else {\n          this.isnontree = false;\n          that.$parent.dataloading();\n          this.mypointid = this.mytrees.checkedNodes[0].pointUuid;\n          if(this.mytrees.checkedNodes[0].id== '振动-位移'|| this.mytrees.checkedNodes[0].id== '振动-加速度'){\n            this.type = 113;\n          }else if(this.mytrees.checkedNodes[0].id== '振动-速度'){\n            this.type = 114;\n          }\n          await  this.$emit('realdantongdao', this.$store.state.equid, this.mytrees.checkedNodes[0].xid, this.mypointid, this.mytrees.checkedNodes, this.type);\n        }\n\n      }\n\n    },\n\n    defaultdo() {\n      console.log('--------------start------------------')\n      // console.log('default is user')\n      // if (this.nowstatus == 1) {\n      //     this.startinterval();\n      // }\n    },\n\n    stopinterval() {\n      this.freshstatus = 0;\n      if (this.myinterval) {\n        clearInterval(this.myinterval);\n      }\n    },\n\n    async changestatus(data) {\n      this.nowstatus = data;\n      if (this.nowstatus == 1) {\n          this.startinterval();\n\n      } else {\n        if (this.myinterval) {\n          clearInterval(this.myinterval);\n\n        }\n        await this.FreshHistoryGraph();\n      }\n\n    },\n\n\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.trend-analysis-op-page {\n  .el-input{\n    width: 150px;\n  }\n  .el-checkbox__label {\n    font-size: 13px;\n    color: white;\n  }\n\n  .el-header {\n    height: 60px;\n    background: #303749;\n\n    .options {\n      color: #359186;\n    }\n  }\n\n  .el-main {\n    padding: 2px;\n    margin-left: 10px;\n    margin-right: 10px\n  }\n\n  .el-form {\n    .el-select {\n      width: 70%;\n    }\n\n    .el-form-item__label {\n      color: #ffffff;\n    }\n\n    .el-form-item__content {\n      color: #ffffff;\n      font-size: 14px;\n    }\n  }\n  .baoluo{\n    .el-form-item{\n      margin-bottom: 0px !important;\n    }\n  }\n}\n</style>\n\n"]}]}