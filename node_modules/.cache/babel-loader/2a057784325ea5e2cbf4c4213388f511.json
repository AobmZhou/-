{"remainingRequest":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\product\\backup\\src\\Analysis\\TrendAnalysisOpPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\src\\Analysis\\TrendAnalysisOpPage.vue","mtime":1626742026499},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TrendAnalysisOpPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,eAAA,MAAA,mCAAA;AACA,OAAA,sBAAA,MAAA,oCAAA,C,CACA;AACA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,UAAA,EAAA;AAEA,IAAA,sBAAA,EAAA,sBAFA;AAGA,IAAA,eAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CADA;AAEA;AACA,MAAA,SAAA,EAAA,IAHA;AAIA,MAAA,UAAA,EAAA,IAJA;AAKA,MAAA,WAAA,EAAA,CALA;AAMA,MAAA,SAAA,EAAA,CANA;AAOA,MAAA,GAAA,EAAA,EAPA;AAQA,MAAA,OAAA,EAAA,EARA;AASA,MAAA,SAAA,EAAA,KATA;AAUA,MAAA,OAAA,EAAA,IAVA;AAWA,MAAA,MAAA,EAAA,IAXA;AAYA,MAAA,QAAA,EAAA,IAZA;AAaA,MAAA,IAAA,EAAA;AAbA,KAAA;AAeA,GAvBA;AAwBA;AACA;AACA;AACA,EAAA,OA3BA,qBA2BA;AACA;AACA;AACA,SAAA,OAAA,CAAA,WAAA;AACA,GA/BA;AAgCA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA,KATA;AAUA,IAAA,UAVA,wBAUA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA;AAZA,GAhCA;AA+CA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAZA,GA/CA;AA+DA,EAAA,aA/DA,2BA+DA;AACA,QAAA,KAAA,UAAA,EAAA;AACA,MAAA,aAAA,CAAA,KAAA,UAAA,CAAA;AACA;AACA,GAnEA;AAsEA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA,KADA,EACA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,MAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,MAAA;;AACA,UAAA,IAAA,IAAA,IAAA,EAAA;AACA,eAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,EAAA,EAAA,CAAA,EAAA;AACA,cAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;AACA,mBAAA,KAAA;AACA;AACA;;AACA,eAAA,IAAA;AACA;AACA,KAdA;AAgBA,IAAA,SAhBA,qBAgBA,UAhBA,EAgBA;AAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,6CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA,WAAA,OAAA,GAAA,UAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EAAA,eAAA,EAJA,CAKA;;AACA,UAAA,KAAA,SAAA,IAAA,CAAA,EAAA;AACA,aAAA,aAAA;AACA,OAFA,MAEA;AACA,YAAA,KAAA,UAAA,EAAA;AACA,cAAA,WAAA,GAAA,KAAA,MAAA,CAAA,WAAA;AACA,UAAA,aAAA,CAAA,KAAA,UAAA,CAAA;AACA;;AACA,YAAA,OAAA,KAAA,MAAA,IAAA,UAAA,EAAA;AACA,eAAA,MAAA;AACA;;AACA,aAAA,iBAAA;AACA;AAEA,KAnCA;AAqCA,IAAA,iBArCA,+BAqCA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EAAA,WAAA;;AACA,UAAA,KAAA,OAAA,CAAA,UAAA,IAAA,CAAA,EAAA;AACA,YAAA,KAAA,OAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA;AACA,eAAA,SAAA,GAAA,IAAA;AACA,eAAA,KAAA,CAAA,YAAA;AAEA,eAAA,OAAA,CAAA,KAAA,CAAA,UAAA;AACA,SANA,MAMA;AAEA;AACA,eAAA,OAAA,CAAA,WAAA;AACA,eAAA,MAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,QAAA,EAAA;AACA,cAAA,KAAA,GAAA,KAAA,MAAA,CAAA,IAAA,CAAA,SAAA;AACA,cAAA,KAAA,GAAA,KAAA,MAAA,CAAA,IAAA,CAAA,OAAA;AAEA,cAAA,QAAA,GAAA,EAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,OAAA,CAAA,YAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA;AACA,YAAA,QAAA,IAAA,KAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA;;AACA,gBAAA,CAAA,IAAA,KAAA,OAAA,CAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,cAAA,QAAA,IAAA,GAAA;AACA;AACA;;AACA,cAAA,KAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,OAAA,IAAA,KAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,QAAA,EAAA;AACA,iBAAA,IAAA,GAAA,GAAA;AACA,WAFA,MAEA,IAAA,KAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,OAAA,EAAA;AACA,iBAAA,IAAA,GAAA,GAAA;AACA;;AACA,eAAA,SAAA,GAAA,QAAA;;AACA,cAAA,KAAA,UAAA,EAAA;AACA,YAAA,aAAA,CACA,KAAA,UADA,CAAA;AAGA;;AACA,eAAA,KAAA,CAAA,uBAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,KAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,OAAA,CAAA,YAAA,EAAA,KAAA,OAAA,CAAA,aAAA,EAAA,KAAA,IAAA;AACA;AACA,OAnCA,MAmCA;AACA,YAAA,KAAA,UAAA,EAAA;AACA,UAAA,aAAA,CAAA,KAAA,UAAA,CAAA;AACA;;AACA,YAAA,KAAA,OAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA;AACA,eAAA,SAAA,GAAA,IAAA;AACA,eAAA,KAAA,CAAA,YAAA;AACA,eAAA,OAAA,CAAA,KAAA,CAAA,UAAA;AACA,SALA,MAKA;AACA,cAAA,KAAA,UAAA,EAAA;AACA,YAAA,aAAA,CAAA,KAAA,UAAA,CAAA;AACA;;AACA,eAAA,OAAA,CAAA,WAAA;AACA,eAAA,MAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,QAAA,EAAA;AACA,cAAA,KAAA,GAAA,KAAA,MAAA,CAAA,IAAA,CAAA,SAAA;AACA,cAAA,KAAA,GAAA,KAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAPA,CAQA;;AACA,eAAA,SAAA,GAAA,KAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,SAAA,CATA,CAUA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,cAAA,KAAA,UAAA,EAAA;AACA,YAAA,aAAA,CACA,KAAA,UADA,CAAA;AAGA;;AACA,eAAA,KAAA,CAAA,uBAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,SAAA,EAAA,KAAA,OAAA,CAAA,YAAA,EAAA,KAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,KAAA;AACA;AAGA;AACA,KA9GA;AAgHA,IAAA,aAhHA,2BAgHA;AAAA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,WAAA,WAAA;AACA,WAAA,QAAA,GAAA,KAAA,OAAA;AACA,UAAA,IAAA,GAAA,IAAA;;AACA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,aAAA,CAAA,KAAA,UAAA,CAAA;AACA,OAPA,CAQA;;;AACA,WAAA,UAAA,GAAA,WAAA,CAAA,YAAA;AAAA;;AACA;AACA,QAAA,OAAA,CAAA,GAAA;;AACA,YAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,EAAA,IAAA,CAAA,QAAA,CAAA,YAAA,CAAA,EAAA;AACA;AACA,cAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,GAAA,IAAA,IAAA,CAAA,OAAA,CAAA,aAAA,IAAA,IAAA,CAAA,QAAA,CAAA,aAAA,EAAA;AACA,YAAA,IAAA,CAAA,WAAA;AACA,YAAA,IAAA,CAAA,QAAA,GAAA,IAAA,CAAA,OAAA;AACA,WAHA,MAGA;AACA;AACA,gBAAA,IAAA,CAAA,SAAA,IAAA,IAAA,EAAA;AAAA;AACA,kBAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,CAAA,EAAA;AACA,gBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA;AACA,eAFA,MAEA;AACA,gBAAA,IAAA,CAAA,KAAA,CAAA,mBAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,SAAA;AACA;AAEA;AACA;AACA,SAhBA,MAgBA;AACA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,sBAAA;AACA,UAAA,IAAA,CAAA,WAAA;AACA,UAAA,IAAA,CAAA,QAAA,GAAA,IAAA,CAAA,OAAA;;AACA,cAAA,KAAA,UAAA,EAAA;AACA,YAAA,aAAA,CAAA,KAAA,UAAA,CAAA;AACA;;AACA,eAAA,SAAA,CAAA,YAAA;AAAA,YAAA,KAAA,CAAA,aAAA;AAAA,WAAA;AACA;AAEA,OA9BA,EA8BA,IA9BA,CAAA;AAgCA,KAzJA;AA4JA,IAAA,WA5JA,yBA4JA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAA,IAFA,GAEA,MAFA;;AAAA,sBAIA,MAAA,CAAA,OAAA,CAAA,UAAA,IAAA,CAJA;AAAA;AAAA;AAAA;;AAAA,sBAKA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CALA;AAAA;AAAA;AAAA;;AAMA;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;;AACA,gBAAA,MAAA,CAAA,KAAA,CAAA,YAAA,EARA,CAUA;;;AAVA;AAAA;;AAAA;AAYA,gBAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AACA,gBAAA,QAbA,GAaA,EAbA;;AAcA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA;AACA,kBAAA,QAAA,IAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA;;AACA,sBAAA,CAAA,IAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,oBAAA,QAAA,IAAA,GAAA;AACA;AACA;;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,OAAA,IAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,QAAA,EAAA;AACA,kBAAA,MAAA,CAAA,IAAA,GAAA,GAAA;AACA,iBAFA,MAEA,IAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,OAAA,EAAA;AACA,kBAAA,MAAA,CAAA,IAAA,GAAA,GAAA;AACA;;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,QAAA,CAzBA,CA0BA;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,QAAA,EAAA,MAAA,CAAA,OAAA,CAAA,YAAA,EAAA,MAAA,CAAA,OAAA,CAAA,aAAA,EAAA,MAAA,CAAA,IAAA;AA3BA;AAAA,uBA4BA,IAAA,CAAA,KAAA,CAAA,oBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,QAAA,EAAA,MAAA,CAAA,OAAA,CAAA,YAAA,EAAA,MAAA,CAAA,OAAA,CAAA,aAAA,EAAA,MAAA,CAAA,IAAA,CA5BA;;AAAA;AAAA;AAAA;;AAAA;AAAA,sBA+BA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,MAAA,KAAA,CA/BA;AAAA;AAAA;AAAA;;AAgCA;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;;AACA,gBAAA,MAAA,CAAA,KAAA,CAAA,YAAA;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,UAAA;AApCA;AAAA;;AAAA;AAsCA,gBAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,WAAA;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,SAAA;;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,OAAA,IAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,QAAA,EAAA;AACA,kBAAA,MAAA,CAAA,IAAA,GAAA,GAAA;AACA,iBAFA,MAEA,IAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,OAAA,EAAA;AACA,kBAAA,MAAA,CAAA,IAAA,GAAA,GAAA;AACA;;AA7CA;AAAA,uBA8CA,MAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,EAAA,GAAA,EAAA,MAAA,CAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA,YAAA,EAAA,MAAA,CAAA,IAAA,CA9CA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA,KA/MA;AAiNA,IAAA,SAjNA,uBAiNA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,uCAAA,EADA,CAEA;AACA;AACA;AACA;AACA,KAvNA;AAyNA,IAAA,YAzNA,0BAyNA;AACA,WAAA,WAAA,GAAA,CAAA;;AACA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,aAAA,CAAA,KAAA,UAAA,CAAA;AACA;AACA,KA9NA;AAgOA,IAAA,YAhOA,wBAgOA,IAhOA,EAgOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;;AADA,sBAEA,MAAA,CAAA,SAAA,IAAA,CAFA;AAAA;AAAA;AAAA;;AAGA,gBAAA,MAAA,CAAA,aAAA;;AAHA;AAAA;;AAAA;AAMA,oBAAA,MAAA,CAAA,UAAA,EAAA;AACA,kBAAA,aAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAEA;;AATA;AAAA,uBAUA,MAAA,CAAA,iBAAA,EAVA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AA7OA;AAtEA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-container class=\"trend-analysis-op-page\">\n      <el-header style=\"height: 60px\">\n        <label class=\"options\">操作页</label>\n      </el-header>\n      <el-main style=\"padding: 2px;margin-left: 10px; margin-right: 10px\">\n        <el-form ref=\"ruleForm\" label-width=\"80px\" class=\"demo-ruleForm\" size=\"mini\">\n          <el-form-item label=\"设备名称:\">{{getequName}}</el-form-item>\n    <!--    <TrendAnalysisTree  @firstdo=\"defaultdo\"\n                            @getPointFeatureTree2Data=\"getmytree\">\n        </TrendAnalysisTree>-->\n          <trend-analysis-point-tree\n            @firstdo=\"defaultdo\"\n            @getPointFeatureTree2Data=\"getmytree\"></trend-analysis-point-tree>\n          <div>\n            <RtHisTimeSelect ref='timeset' @radiostatus='changestatus'></RtHisTimeSelect>\n          </div>\n          <el-form-item>\n            <el-button v-if=\"nowstatus == 2\" @click=\"FreshHistoryGraph\">刷新</el-button>\n            <el-button v-if='nowstatus == 1 &&freshstatus == 0' @click='startinterval'>刷新</el-button>\n            <el-button v-if=\"nowstatus == 1 &&freshstatus == 1\" @click='stopinterval'>停止</el-button>\n          </el-form-item>\n        </el-form>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport RtHisTimeSelect from \"../components/RtHisTimeSelect.vue\";\nimport TrendAnalysisPointTree from \"../Analysis/TrendAnalysisPointTree\";\n// import TrendAnalysisTree from \"./TrendAnalysisTree\";\n// import TrendAnalysisPointTree from \"../PumpImpactDiagnosis/PumpImpactDiagnosisPointFeatureTree\";\n\nexport default {\n  name: \"TrendAnalysisOpPage\",\n  components: {\n\n    TrendAnalysisPointTree,\n    RtHisTimeSelect,\n  },\n  data() {\n    return {\n      checkList: ['',''],\n      //单通道相关数据\n      mypointid: null,\n      myinterval: null,\n      freshstatus: 1,\n      nowstatus: 1,\n      msg: '',\n      EquName: '',\n      isnontree: false,\n      mytrees: null,\n      mytime: null,\n      lasttree: null,\n      type:0,\n    };\n  },\n  // created(){\n  //   startinterval\n  // },\n  mounted() {\n    //接收A组件的数据\n    //this.getPoint(this.msg);\n    this.$parent.dataloading();\n  },\n  computed: {\n    nodeData() {\n      return this.$store.state.nodeData;\n    },\n    equid() {\n      return this.$store.state.equid;\n    },\n    nodeNum() {\n      return this.$store.state.nodeNum;\n    },\n    getequName() {\n      return this.$store.state.equName;\n    }\n  },\n\n  watch: {\n    equid(){\n\n      // console.log('here is not use ')\n      // if(this.myinterval) {\n      //     var CancelToken = this.$axios.CancelToken;\n      //     clearInterval(this.myinterval)\n      // }\n      // if (typeof this.cancel == 'function') {\n      //     this.cancel()\n      // }\n\n    }\n\n  },\n\n  beforeDestroy() {\n    if(this.myinterval) {\n      clearInterval(this.myinterval)\n    }\n  },\n\n\n  methods: {\n    isequaltree(tree1, tree2) {\n      var len1 = tree1.length;\n      var len2 = tree2.length;\n      if (len1 != len2) {\n        return false\n      } else {\n        for (var i = 0; i < len1; ++i) {\n          if (tree1[i].id != tree2[i].id) {\n            return false;\n          }\n        }\n        return true;\n      }\n    },\n\n    getmytree(mytreedata) { //用于接收测点树的数据\n        console.log('---------------getmytree-------------------');\n        console.log(mytreedata);\n        this.mytrees = mytreedata;\n        console.log(this.mytrees,'tree sheding ')\n        // console.log(this.mytrees.checkedNodes[0].id)\n        if (this.nowstatus == 1) {\n          this.startinterval();\n        } else {\n          if(this.myinterval) {\n            var CancelToken = this.$axios.CancelToken;\n            clearInterval(this.myinterval)\n          }\n          if (typeof this.cancel == 'function') {\n            this.cancel()\n          }\n          this.FreshHistoryGraph();\n        }\n\n    },\n\n    FreshHistoryGraph() {\n      console.log(this.mytrees,'dayinxiaa')\n      if (this.mytrees.treeSelect == 0) {\n        if (this.mytrees.checkedNodes.length === 1) {\n          //判断空树\n          this.isnontree = true;\n          this.$emit('cleanChart');\n\n          this.$parent.$emit('datafail')\n        } else {\n\n          //  that.$parent.$emit('datafail')\n          this.$parent.dataloading();\n          this.mytime = this.$refs.timeset.timedata();\n          var stime = this.mytime.form.starttime;\n          var etime = this.mytime.form.endtime;\n\n          var pointids = '';\n          for (var i = 1; i < this.mytrees.checkedNodes.length; ++i) {\n            pointids += this.mytrees.checkedNodes[i].id;\n            if (i != this.mytrees.checkedNodes.length - 1) {\n              pointids += ','\n            }\n          }\n          if(this.mytrees.checkedNodes[0].id== '振动-位移'|| this.mytrees.checkedNodes[0].id== '振动-加速度'){\n            this.type = 113;\n          }else if(this.mytrees.checkedNodes[0].id== '振动-速度'){\n            this.type = 114;\n          }\n          this.mypointid = pointids;\n          if(this.myinterval) {\n            clearInterval(\n              this.myinterval\n            )\n          }\n          this.$emit('drawhistoryduotongdao', this.$store.state.equid, this.mypointid, stime, etime, this.mytrees.checkedNodes, this.mytrees.featureSelect,this.type);\n        }\n      } else {\n        if(this.myinterval) {\n          clearInterval(this.myinterval)\n        }\n        if (this.mytrees.checkedNodes.length === 0) {\n          //判断空树\n          this.isnontree = true;\n          this.$emit('cleanChart');\n          this.$parent.$emit('datafail');\n        } else {\n          if(this.myinterval) {\n            clearInterval(this.myinterval)\n          }\n          this.$parent.dataloading();\n          this.mytime = this.$refs.timeset.timedata();\n          var stime = this.mytime.form.starttime;\n          var etime = this.mytime.form.endtime;\n          //console.log(stime, etime)\n          this.mypointid = this.mytrees.checkedNodes[0].pointUuid;\n          // console.log(\"操作页dayin\");\n          // console.log(this.mytrees.checkedNodes[0].label)\n   /*       if(this.mytrees.checkedNodes[0].id== '振动-位移'|| this.mytrees.checkedNodes[0].id== '振动-加速度'){\n            this.type = 113;\n          }else if(this.mytrees.checkedNodes[0].id== '振动-速度'){\n            this.type = 114;\n          }*/\n          if(this.myinterval) {\n            clearInterval(\n              this.myinterval\n            )\n          }\n          this.$emit('drawhistorydantongdao', this.$store.state.equid, this.mytrees.checkedNodes[0].xid, stime, etime, this.mypointid, this.mytrees.checkedNodes,this.mytrees.checkedNodes[0].label);\n        }\n\n\n      }\n    },\n\n    startinterval() {  //实时情况下每三秒接收一次数据\n      this.freshstatus = 1;\n      this.getrealdata();\n      this.lasttree = this.mytrees;\n      let that = this;\n      if(this.myinterval){\n        clearInterval(this.myinterval)\n      }\n      // return\n      this.myinterval = setInterval(function () {\n        //如果两次间隔的测点树一致之间添加数据n\n        console.log()\n        if (that.isequaltree(that.mytrees.checkedNodes, that.lasttree.checkedNodes)) {\n          // console.log(12334)\n          if (that.mytrees.treeSelect == '0' && that.mytrees.featureSelect != that.lasttree.featureSelect) {\n            that.getrealdata();\n            that.lasttree = that.mytrees;\n          } else {\n            // console.log(232323)\n            if (that.isnontree != true) {  //空树不需要添加数据\n              if (that.mytrees.treeSelect == 1) {\n                that.$emit('addrealdantongdao');\n              } else {\n                that.$emit('addrealduotongdao', that.$store.state.equid, that.mypointid);\n              }\n\n            }\n          }\n        } else {\n          //否则更新\n          console.log('here is not interval');\n          that.getrealdata();\n          that.lasttree = that.mytrees;\n          if(this.myinterval) {\n            clearInterval(this.myinterval);\n          }\n          this.$nextTick(()=> {this.startinterval()})\n        }\n\n      }, 3000)\n\n    },\n\n\n    async getrealdata() {\n      //初始化树，并添加第一次访问的图谱数据\n      let that = this;\n\n      if (this.mytrees.treeSelect == 0) {\n        if (this.mytrees.checkedNodes.length === 1) {\n          //判断空树\n          this.isnontree = true;\n          this.$emit('cleanChart');\n\n          // that.$parent.$emit('datafail')\n        } else {\n          this.isnontree = false;\n          var pointids = '';\n          for (var i = 1; i < this.mytrees.checkedNodes.length; ++i) {\n            pointids += this.mytrees.checkedNodes[i].id;\n            if (i != this.mytrees.checkedNodes.length - 1) {\n              pointids += ','\n            }\n          }\n          if(this.mytrees.checkedNodes[0].id== '振动-位移'|| this.mytrees.checkedNodes[0].id== '振动-加速度'){\n            this.type = 113;\n          }else if(this.mytrees.checkedNodes[0].id== '振动-速度'){\n            this.type = 114;\n          }\n          this.mypointid = pointids;\n          // console.log(this.mypointid)\n          console.log( this.$store.state.equid, pointids, this.mytrees.checkedNodes, this.mytrees.featureSelect,this.type)\n          await that.$emit('drawrealduotongdao', this.$store.state.equid, pointids, this.mytrees.checkedNodes, this.mytrees.featureSelect,this.type);\n        }\n      } else {\n        if (this.mytrees.checkedNodes.length === 0) {\n          //判断空树\n          this.isnontree = true;\n          this.$emit('cleanChart');\n          console.log(2);\n          that.$parent.$emit('datafail')\n        } else {\n          this.isnontree = false;\n          that.$parent.dataloading();\n          this.mypointid = this.mytrees.checkedNodes[0].pointUuid;\n          if(this.mytrees.checkedNodes[0].id== '振动-位移'|| this.mytrees.checkedNodes[0].id== '振动-加速度'){\n            this.type = 113;\n          }else if(this.mytrees.checkedNodes[0].id== '振动-速度'){\n            this.type = 114;\n          }\n          await  this.$emit('realdantongdao', this.$store.state.equid, this.mytrees.checkedNodes[0].xid, this.mypointid, this.mytrees.checkedNodes, this.type);\n        }\n\n      }\n\n    },\n\n    defaultdo() {\n      console.log('--------------start------------------')\n      // console.log('default is user')\n      // if (this.nowstatus == 1) {\n      //     this.startinterval();\n      // }\n    },\n\n    stopinterval() {\n      this.freshstatus = 0;\n      if (this.myinterval) {\n        clearInterval(this.myinterval);\n      }\n    },\n\n    async changestatus(data) {\n      this.nowstatus = data;\n      if (this.nowstatus == 1) {\n          this.startinterval();\n\n      } else {\n        if (this.myinterval) {\n          clearInterval(this.myinterval);\n\n        }\n        await this.FreshHistoryGraph();\n      }\n\n    },\n\n\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.trend-analysis-op-page {\n  .el-input{\n    width: 150px;\n  }\n  .el-checkbox__label {\n    font-size: 13px;\n    color: white;\n  }\n\n  .el-header {\n    height: 60px;\n    background: #303749;\n\n    .options {\n      color: #359186;\n    }\n  }\n\n  .el-main {\n    padding: 2px;\n    margin-left: 10px;\n    margin-right: 10px\n  }\n\n  .el-form {\n    .el-select {\n      width: 70%;\n    }\n\n    .el-form-item__label {\n      color: #ffffff;\n    }\n\n    .el-form-item__content {\n      color: #ffffff;\n      font-size: 14px;\n    }\n  }\n  .baoluo{\n    .el-form-item{\n      margin-bottom: 0px !important;\n    }\n  }\n}\n</style>\n\n"],"sourceRoot":"src/Analysis"}]}