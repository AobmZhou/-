{"remainingRequest":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\product\\backup\\src\\page\\TrendAnalysis.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\src\\page\\TrendAnalysis.vue","mtime":1626743401287},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_css-loader@3.6.0@css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_postcss-loader@3.0.0@postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_sass-loader@8.0.2@sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRyZW5kLWFuYWx5c2lzIHsKICBiYWNrZ3JvdW5kOiAjMjMyODM1OwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICBkaXNwbGF5OiBmbGV4OwoKICAudHVwdSB7CiAgICBmbG9hdDogbGVmdDsKICAgIHBhZGRpbmctdG9wOiAxMHB4OwogICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogICAgd2lkdGg6IGNhbGMoMTAwJSAtIDMzMHB4KTsKICAgIGhlaWdodDogY2FsYygxMDAlIC0gMjBweCk7CiAgfQoKICAub3AtaGlkZSB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogMjBweDsKICAgIGZsb2F0OiByaWdodDsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyMzI4MzU7CiAgICBkaXNwbGF5OiBmbGV4OwoKICAgIC5ib3gtaGVhZCB7CiAgICAgIHdpZHRoOiAwOwogICAgICBoZWlnaHQ6IDA7CiAgICAgIGJvcmRlci1ib3R0b206IDIwcHggc29saWQgeWVsbG93OwogICAgfQoKICAgIC5vcC1idXR0b24gewogICAgICB3aWR0aDogMjBweDsKICAgICAgaGVpZ2h0OiA0MHB4OwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMwMzc0OTsKICAgICAgY29sb3I6ICMzNTkxODY7CiAgICAgIHRvcDogNTAlOwogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIH0KCiAgICAuYm94LWJvdHRvbSB7CgogICAgfQogIH0KCiAgLm9wIHsKICAgIHdpZHRoOiAyOTBweDsKICAgIGhlaWdodDogY2FsYygxMDAlIC0gMjBweCk7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgZmxvYXQ6IHJpZ2h0OwogICAgYmFja2dyb3VuZC1jb2xvcjogIzMwMzc0OTsKICAgIG92ZXJmbG93OiBhdXRvOwogIH0KCiAgLmdyYXBoIHsKICAgIGhlaWdodDogMTAwJTsKICAgIHdpZHRoOiAxMDAlOwogICAgLy9tYXJnaW4tYm90dG9tOiAxcHg7CiAgfQp9Cg=="},{"version":3,"sources":["TrendAnalysis.vue"],"names":[],"mappingsfile":"TrendAnalysis.vue","sourceRoot":"src/page","sourcesContent":["<template>\n  <div class=\"trend-analysis\">\n    <div class='tupu' id='lefttupu'>\n      <div :style=\"{height : highexe(1) , width:'100%'}\" v-show=\"fullId===1||fullId===0\" @dblclick=\"handledblclick(1)\">\n        <TrendGraph ref='trendg' @cancelFull=\"handledblclick(1)\" @chartinfo=\"drawWaveSpectrum\" class=\"graph\" @refine=\"refine\" @cancelRefine=\"cancelRefine\"></TrendGraph>\n      </div>\n      <div :style=\"{height : highexe(2) , width:'100%'}\" v-show=\"fullId===2||fullId===0\" @dblclick=\"handledblclick(2)\">\n        <SpeedTrendGraph ref='trendg_another' @cancelFull=\"handledblclick(2)\" class=\"graph\" @refine=\"refine\" @cancelRefine=\"cancelRefine\"></SpeedTrendGraph>\n      </div>\n      <div :style=\"{height :highexe(3) , width:'100%'}\" v-show=\"fullId===3||fullId===0\" @dblclick=\"handledblclick(3)\">\n        <WaveGraph ref='waveg' @cancelFull=\"handledblclick(3)\" class=\"graph\"></WaveGraph>\n      </div>\n      <div :style=\"{height : highexe(4) , width:'100%'}\" v-show=\"fullId===4||fullId===0\" @dblclick=\"handledblclick(4)\">\n        <SpectrumGraph ref=\"spectrumg\" @cancelFull=\"handledblclick(4)\"  ></SpectrumGraph>\n      </div>\n    </div>\n    <div class=\"op-hide\">\n      <div class=\"box-head\"></div>\n      <i class=\"el-icon-caret-right op-button\" v-if=\"showOpPage\" v-on:click=\"showOrHide\"></i>\n      <i class=\"el-icon-caret-left op-button\" v-else v-on:click=\"showOrHide\"></i>\n      <div class=\"box-bottom\"></div>\n    </div>\n    <div class='op' id='rightop' v-show=\"showOpPage\">\n      <trend-analysis-op-page\n        @cleanChart=\"clearchart\"\n        @realdantongdao=\"getrealdantongdao\"\n        @addrealdantongdao=\"addrealdantongdao\"\n        @drawhistorydantongdao=\"drawhistorydantongdao\"\n        @drawrealduotongdao=\"drawrealduotongdao\"\n        @addrealduotongdao=\"addrealduotongdao\"\n        @drawhistoryduotongdao=\"drawhistoryduotongdao\"\n        @showgraph=\"showgraph\"\n        @notshowgraph=\"notshowgraph\"\n        :style=\"{height: '100%'}\"></trend-analysis-op-page>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport TrendGraph from \"../Charts/TrendGraph\";\nimport WaveGraph from \"../Charts/WaveGraph\";\nimport SpectrumGraph from \"../Charts/SpectrumGraph\";\nimport SpeedTrendGraph from \"../Charts/SpeedTrendGraph\";\nimport TrendAnalysisOpPage from \"../Analysis/TrendAnalysisOpPage.vue\";\n\nexport default {\n  name: \"TrendAnalysis\",\n  components: {\n    TrendAnalysisOpPage,\n    SpeedTrendGraph,\n    SpectrumGraph,\n    WaveGraph,\n    TrendGraph,\n  },\n  data() {\n    return {\n      labelname: null,\n      stime: null,\n      etime: null,\n      fullId: 0,\n      isFull: false,\n\n      showOpPage: true,\n      show: false,\n      graphheight: 33.3 + '%',\n      fallgraphheight: '0%',\n      unitname: '机泵专用图谱-趋势分析',\n      onlyname: '',\n      onlyone: 0,\n      nowtree: null,\n      chartdata: null,\n      myinterval: null,\n      nowpointid: null,\n      tongdao: null,\n      graphtype: null,\n      intervalflag: 0,\n      backmap: null,\n      textmap: null,\n      colormap: null,\n      nowdata: null,\n      nowtype:null\n    }\n  },\n  created() {\n    var mymap = new Map();\n    mymap.set('0', \"#FFE4C4\");\n    mymap.set('1', \"#00FFFF\");\n    mymap.set('2', \"#4B0082\");\n    mymap.set('3', \"#F0E68C\");\n    mymap.set('4', \"#778899\");\n    mymap.set('5', \"#7B68EE\");\n    mymap.set('6', \"#FF0000\");\n    mymap.set('7', \"#FFFAFA\");\n    mymap.set('8', \"#008080\");\n    mymap.set('9', \"#FA8072\");\n    mymap.set('10', \"#D3D3D3\");\n    mymap.set('11', \"#FFFFE0\");\n    this.colormap = mymap;\n    mymap = new Map();\n    mymap.set('0', \"通频\");\n    mymap.set('1', \"1倍频幅值\");\n    mymap.set('2', \"2倍频幅值\");\n    mymap.set('3', \"3倍频幅值\");\n    mymap.set('4', \"1/2倍频幅值\");\n    mymap.set('5', \"残振\");\n    mymap.set('6', \"直流量\");\n    mymap.set('7', \"间隙电压\");\n    mymap.set('8', \"1倍频相位\");\n    mymap.set('9', \"2倍频相位\");\n    mymap.set('10', \"3倍频相位\");\n    mymap.set('11', \"1/2倍频相位\");\n    this.textmap = mymap;\n    mymap = new Map();\n    mymap.set(\"0\", 'all');\n    mymap.set(\"1\", 'one');\n    mymap.set(\"2\", 'two');\n    mymap.set(\"3\", 'three');\n    mymap.set(\"4\", 'half');\n    mymap.set(\"5\", 'res');\n    mymap.set(\"6\", 'dc');\n    mymap.set(\"7\", 'gap');\n    mymap.set(\"8\", 'phaseOne');\n    mymap.set(\"9\", 'phaseTwo');\n    mymap.set(\"10\", 'phaseThree');\n    mymap.set(\"11\", 'phaseHalf');\n    this.backmap = mymap;\n\n  },\n\n  mounted() {\n    this.$emit('changename', this.unitname);\n  },\n  computed: {\n    nodeData() {\n      return this.$store.state.nodeData;\n    },\n    equid() {\n      return this.$store.state.equid;\n    },\n    nodeNum() {\n      return this.$store.state.nodeNum;\n    },\n    equName() {\n      return this.$store.state.equName;\n    },\n    features() {\n      return this.$store.state.features;\n    }\n  },\n\n  watch: {\n    equid(){\n      this.clearchart();\n    }\n  },\n  methods: {\n    handledblclick(id){\n      if(this.isFull){\n        this.isFull = false\n        this.fullId = 0\n        this.$refs.trendg.setIsFull(false);\n        this.$refs.trendg_another.setIsFull(false);\n        this.$refs.waveg.setIsFull(false);\n        this.$refs.spectrumg.setIsFull(false);\n      }else {\n        this.isFull = true\n        this.fullId = id\n        this.$refs.trendg.setIsFull(true);\n        this.$refs.trendg_another.setIsFull(true);\n        this.$refs.waveg.setIsFull(true);\n        this.$refs.spectrumg.setIsFull(true);\n      }\n      console.log(id)\n\n    },\n    highexe(id){\n      if(this.isFull){\n        if(id === this.fullId){\n          return \"100%\"\n        }else {\n          return  \"0%\"\n        }\n      }else {\n        return \"25%\"\n      }\n    },\n\n    showOrHide() {\n      if (this.showOpPage == true) {\n        this.showOpPage = false;\n        this.$emit(\"showOpPage\", false);\n        // this.$refs.trendg.resize();\n      } else {\n        this.showOpPage = true;\n        this.$emit(\"showOpPage\", true);\n        // this.$refs.trendg.resize();\n      }\n    },\n    showgraph() {\n      this.show = true;\n      this.graphheight = '20%';\n      this.fallgraphheight = '40%';\n      this.$nextTick(() => {\n        this.$refs.trendg.mychart.resize();\n        this.$refs.waveg.mychart.resize();\n        this.$refs.spectrumg.mychart.resize();\n      })\n\n    },\n    notshowgraph() {\n      this.show = false;\n      this.graphheight = 100 / 3 + '%';\n      this.fallgraphheight = '0%';\n      this.$nextTick(() => {\n        this.$refs.trendg.mychart.resize();\n        this.$refs.waveg.mychart.resize();\n        this.$refs.spectrumg.mychart.resize();\n      })\n    },\n\n    infoname(myname) {\n      this.$emit('setinfoname', myname);\n    },\n    dataloading() {\n    },\n\n    stopnowinterval() {\n      if (this.myinterval) {\n        clearInterval(this.myinterval);\n      }\n    },\n    refine(stime, etime) {\n      // this.dataloading();\n\n      if (this.tongdao == 1) {\n        this.gethisdantongdaoData(this.nowpointid, this.pointIdString, stime, etime, this.labelname)\n        console.log(this.nowpointid, this.pointIdString, stime, etime, this.pointuuid, this.nowtree,this.nowtype)\n      } else {\n        this.gethisduotongdaoData(this.nowpointid, this.pointIdString, stime, etime, this.nowtree, this.feature,this.nowtype);\n\n      }\n    },\n\n    cancelRefine() {\n      if (this.tongdao == 1) {\n        this.gethisdantongdaoData(this.nowpointid, this.pointIdString, this.stime, this.etime, this.labelname)\n        console.log(this.nowpointid, this.pointIdString, stime, etime, this.pointuuid, this.nowtree,this.nowtype)\n      } else {\n        this.gethisduotongdaoData(this.nowpointid, this.pointIdString, this.stime, this.etime, this.nowtree, this.feature,this.nowtype);\n\n      }\n    },\n\n    drawhistoryduotongdao(equipmentUuid, pointIdString, stime, etime, mytree, feature,type) {\n      this.tongdao = 0;\n      this.graphtype = '历史';\n      this.nowtree = mytree;\n      this.nowpointid = equipmentUuid;\n      this.pointIdString = pointIdString;\n      this.feature = feature;\n      this.nowtype=type;\n      this.stime = stime;\n      this.etime = etime;\n      this.gethisduotongdaoData(equipmentUuid, pointIdString, stime, etime, mytree, feature,type);\n    },\n    gethisduotongdaoData(equipmentUuid, pointIdString, stime, etime, mytree, feature,type) {\n      // console.log(mytree, feature,type)\n      // console.log(\"*******************88\")\n      var textname = this.textmap.get(feature.toString());\n      this.onlyname = textname;\n      var textstring = this.backmap.get(feature.toString());\n      this.onlyone = textstring;\n      var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n      var pointIdString1 = encodeURIComponent(pointIdString);\n      var netinfor = ( '/trend/' + equipmentUuid1 + '/' + pointIdString1 + '/' + stime + '/' + etime + \"/info\");\n      this.$axios.get(netinfor/*, {\n        cancelToken: new CancelToken((c) => {\n          // executor 函数接收一个 cancel 函数作为参数\n          this.cancel = c;\n        })\n      }*/).then(res => {\n        if (res.data.code === 200) {\n          // console.log(res);\n          // console.log(\"44\")\n          this.chartdata = res.data.data;\n          var title = this.chartdata.equipmentName + ' 历史';\n          var trendinfo = this.chartdata.trendInfo;\n          var flagX = '[时间]';\n          var flagY = '[]';\n          flagY='[' + this.features[type][this.feature].unit + ']';\n        /*  if(trendinfo.length > 0) {\n            var flagY = '[' + res.data.data.trendInfo[0].unit + ']' || '[um]';\n          } else {\n            var flagY = '[um]';\n          }*/\n          var dataX = [];\n          var dataY = [];\n          var valueY = [];\n          for (var i = 1; i < this.nowtree.length; ++i) {\n            valueY.push([]);\n          }\n          //  that.timestampToTime(this.chartdata.trendTime);\n          for (var i = 0; i < trendinfo.length; ++i) {\n            dataX.push(this.timestampToTime(trendinfo[i].trendTime));\n            for (var j = 1; j < this.nowtree.length; ++j) {\n              valueY[j - 1].push(trendinfo[i].trendValue[j - 1][this.onlyone])\n            }\n          }\n\n\n          for (var i = 1; i < this.nowtree.length; ++i) {\n            dataY.push({\n              name: this.nowtree[i].label,\n              data: valueY[i - 1],\n              color: this.colormap.get(i.toString())\n            })\n\n\n          }\n\n          let newY = [{name: this.equName, data: trendinfo.map(item => item.rev)}];\n          if(dataX.length) {\n            this.$refs.trendg.setchart(flagX, flagY, dataX, dataY, title);\n            this.$refs.trendg_another.setchart(flagX, '[r/min]', dataX, newY, `${this.equName} 历史转速`);\n            var myinfo = {\n              name: dataX[0],\n              seriesName: this.nowtree[1].label,\n              //  seriesID:this.nowtree[1].id\n\n            };\n            this.drawWaveSpectrum(myinfo)\n          }\n\n        } else {\n          this.clearchart();\n          this.$emit('datafail')\n          //this.$message.error(res.data.message);\n        }\n      })\n\n\n    },\n\n\n\n    addrealduotongdao(equid, pointids) {\n\n\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      let equid1 = encodeURIComponent(equid);\n      let pointids1 = encodeURIComponent(pointids);\n      this.$axios.get((\"/trend/\" + equid1 + \"/\" + pointids1 + \"/real_time\")).then(res => {\n        if (res.data.code === 200) {\n\n          let that = this;\n          this.chartdata = res.data.data;\n          var title = this.chartdata.equipmentName + ' 实时';\n\n          var newX = that.timestampToTime(this.chartdata.trendTime);\n          var dataY = [];\n          var newY_rev = [];\n          for (var i = 1; i < this.nowtree.length; ++i) {\n            var newY = this.chartdata.trendValue[i - 1][this.onlyone];\n            dataY.push(newY);\n          }\n          var nownum_rev = this.chartdata.rev;\n          newY_rev.push(nownum_rev);\n\n          var wavedata = this.chartdata.waveValue || {\n            waveUnit: {}\n          };\n          var wavex = '[' + wavedata.waveUnit.x + ']' || '';\n          var wavey = '[' + wavedata.waveUnit.y + ']' || '';\n          var wavedataX = wavedata.waveX || [];\n          var wavedataY = {\n            name: this.nowtree[1].label,\n            data: wavedata.waveY || []\n          };\n\n          var spectrumdata = this.chartdata.spectrumValue || {\n            spectrumUnit: {}\n          };\n          var spectrumx = '[' + spectrumdata.spectrumUnit.x + ']' || '';\n          var spectrumy = '[' + spectrumdata.spectrumUnit.y + ']' || '';\n          var spectrumdataX = spectrumdata.spectrumX || [];\n          var spectrumdataY = {\n            name: this.nowtree[1].label,\n            data: spectrumdata.spectrumY || []\n          };\n\n\n          this.$refs.trendg.changechart(newX, dataY);\n\n          this.$refs.trendg_another.changechart(newX, newY_rev);\n          this.$refs.waveg.setchart(wavex, wavey, wavedataX, wavedataY, title, newX);\n          this.$refs.spectrumg.setchart(spectrumx, spectrumy, spectrumdataX, spectrumdataY, title, newX);\n\n        } else {\n          this.clearchart();\n          this.$emit('datafail')\n          //this.$message.error(res.data.message);\n        }\n      })\n\n    },\n    drawrealduotongdao(equid, pointids, mytree, feautre,type) {\n      console.log(\"2@@@@@@@@@@@@@@@@@@@@\",type,feautre);\n      // console.log(this.features[type][feautre].unit)\n      this.tongdao = 0;\n      this.graphtype = '实时'\n      this.nowtree = mytree;\n      var textname = this.textmap.get(feautre.toString());\n      this.onlyname = textname;\n      var textstring = this.backmap.get(feautre.toString());\n      this.onlyone = textstring;\n\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      var equid1 = encodeURIComponent(equid);\n      var pointids1 = encodeURIComponent(pointids);\n\n      this.$axios.get(\"/trend/\" + equid1 + \"/\" + pointids1 + \"/real_time\"/*, {\n        cancelToken: new CancelToken((c) => {\n          // executor 函数接收一个 cancel 函数作为参数\n          this.cancel = c;\n        })\n      }*/).then(res => {\n        // console.log('go3', res)\n        if (res.data.code === 200) {\n          // console.log('go2')\n          let that = this;\n          this.chartdata = res.data.data;\n          var title = this.chartdata.equipmentName + ' 实时';\n          var title_rev = this.equName + ' 实时转速';\n          var newX = that.timestampToTime(this.chartdata.trendTime);\n\n          var flagX = '[时间]';\n          var flagY = '';\n          flagY='[' + that.features[type][feautre].unit + ']';\n          // if (this.nowtree[0].label.indexOf('加速度') != -1) {\n          //   flagY = '[m/s2]';\n          // } else if (this.nowtree[0].label.indexOf('速度') != -1) {\n          //   flagY = '[mm/s]';\n          // }\n          var flagY_rev = '[r/min]';\n          var dataX = [];\n          var dataY = [];\n          var dataY_rev = [];\n          dataX.push(newX);\n          for (var i = 1; i < mytree.length; ++i) {\n            var newY = this.chartdata.trendValue[i - 1][textstring];\n            console.log(mytree[i]);\n            dataY.push({\n              name: mytree[i].label,\n              data: [newY],\n              color: this.colormap.get(i.toString())\n            });\n          }\n          var nownum_rev = this.chartdata.rev;\n          dataY_rev.push({\n            name: this.equName,\n            data: [nownum_rev],\n          });\n\n          var wavedata = this.chartdata.waveValue || {\n            waveUnit:{}\n          };\n          var wavex = '[' + wavedata.waveUnit.x + ']' || '';\n          var wavey = '[' + wavedata.waveUnit.y + ']' || '';\n          var wavedataX = wavedata.waveX || [];\n          var wavedataY = {\n            name: mytree[1].label,\n            data: wavedata.waveY || []\n          };\n\n          var spectrumdata = this.chartdata.spectrumValue || {\n            spectrumUnit:{}\n          };\n          var spectrumx = '[' + spectrumdata.spectrumUnit.x + ']' || '';\n          var spectrumy = '[' + spectrumdata.spectrumUnit.y + ']' || '';\n          var spectrumdataX = spectrumdata.spectrumX || [];\n          var spectrumdataY = {\n            name: mytree[1].label,\n            data: spectrumdata.spectrumY || []\n          };\n          // console.log('it goes')\n\n          this.$refs.trendg.setchart(flagX, flagY, dataX, dataY, title);\n          var dataXX = [];\n          for(var i = 0; i < dataX.length; ++i) {\n            dataXX.push(dataX[i])\n          }\n\n          this.$refs.trendg_another.setchart(flagX, flagY_rev, dataXX, dataY_rev, title_rev);\n          this.$refs.waveg.setchart(wavex, wavey, wavedataX, wavedataY, title, newX);\n          this.$refs.spectrumg.setchart(spectrumx, spectrumy, spectrumdataX, spectrumdataY, title, newX)\n        } else {\n          // this.$emit('datafail')\n          //this.$message.error(res.data.message);\n        }\n      })\n    },\n\n    drawhistorydantongdao(equipmentUuid, pointIdString, stime, etime, pointuuid, mytree,labelname) {   //单通道\n      this.tongdao = 1;\n      this.graphtype = '历史';\n      this.nowtree = mytree;\n      this.nowpointid = equipmentUuid;\n      this.pointIdString = pointIdString;\n      this.pointuuid = pointuuid;\n      this.stime = stime;\n      this.etime = etime;\n      this.labelname = labelname;\n      // this.nowtype = type\n      // console.log(\"%%%%%%%%%%%\",this.nowtype)\n      this.gethisdantongdaoData(equipmentUuid, pointIdString, stime, etime,labelname);\n    },\n\n    cancelRequest() {\n      if (typeof this.source === 'function') {\n        this.source('终止请求')\n      }\n    },\n\n    drawWaveSpectrum(myinfo) {\n      console.log(myinfo)\n      if (this.graphtype === '历史') {\n        // console.log(11111111111111111)\n        // console.log(myinfo)\n        var equipmentUuid = this.nowpointid;\n        var thistime = myinfo.name;\n        var nowtime = new Date(thistime).getTime();\n        var pointIdString;\n        this.dataloading();\n        var pointNmae;\n        if (this.tongdao.toString() === '1') {\n          pointIdString = this.nowtree[0].xid;\n          pointNmae = this.nowtree[0].label\n        } else {\n          pointIdString = '';\n          console.log('nowtree')\n          console.log(this.nowtree)\n          for(var i = 0; i < this.nowtree.length; ++i) {\n            if(this.nowtree[i].label == myinfo.seriesName) {\n              pointIdString = this.nowtree[i].id\n            }\n          }\n\n          pointNmae = myinfo.seriesName;\n        }\n\n        var waveNumber = 16384;\n        var analysisLines = 0;\n\n        var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n        var pointIdString1 = encodeURIComponent(pointIdString);\n\n        this.$axios.get(\"/wave-spectrum/\" + equipmentUuid1 + '/' + pointIdString1 + '/' + nowtime + '/' + waveNumber + '/' + analysisLines + \"/info\").then(res => {\n\n          if (res.data.code === 200) {\n            // this.$emit('datasuccess');\n            var name = this.nowtree[0].label\n            var wavex = '[' + res.data.data.waveValue.waveUnit.x + ']';\n            var wavey = '[' + res.data.data.waveValue.waveUnit.y + ']';\n            var dataX = res.data.data.waveValue.waveX;\n\n            var dataY = {\n              name: pointNmae,\n              data: res.data.data.waveValue.waveY\n            };\n            var title = res.data.data.equipmentName + ' '  + ' 历史';\n\n            //thistime =timestampToTime(thistime);\n\n\n            thistime = this.timestampToTime(nowtime);\n\n            this.$refs.waveg.setchart(wavex, wavey, dataX, dataY, title, thistime);\n\n            var spectrumx = '[' + res.data.data.spectrumValue.spectrumUnit.x + ']';\n            var spectrumy = '[' + res.data.data.spectrumValue.spectrumUnit.y + ']';\n            dataX = res.data.data.spectrumValue.spectrumX;\n            var dataY = {\n              name: pointNmae,\n              data: res.data.data.spectrumValue.spectrumY\n            };\n            this.$refs.spectrumg.setchart(spectrumx, spectrumy, dataX, dataY, title, thistime);\n\n\n          } else {\n            // this.clearchart();\n            // this.$emit('datafail')\n            this.$refs.waveg.clearall();\n            this.$refs.spectrumg.clearall();\n            //this.$message.error(res.data.message);\n          }\n        }).catch(e=>{\n          // this.$emit('datafail')\n          this.$refs.waveg.clearall();\n          this.$refs.spectrumg.clearall();\n        })\n\n      }\n\n    },\n\n    timestampToTime(timestamp) {\n      var date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n      var Y = date.getFullYear() + '-';\n      var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n      var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';\n      var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n      var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n      var s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + '.';\n      var ms = (timestamp % 1000).toString();\n      while (ms.length < 3) {\n        ms = '0' + ms;\n      }\n      //var nowtime = new Date(Y+M+D+h+m+s);\n      return Y + M + D + h + m + s + ms;\n    },\n\n\n    getrealdantongdao(equipmentUuid, pointIdString, pointuuid, mytree,type) {\n      // console.log(mytree,type)\n      let that = this;\n      //帮助后面添加数据\n      that.nowtree = mytree;\n      that.nowpointid = pointuuid;\n      that.tongdao = 1;\n      that.graphtype = '实时';\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n      var pointIdString1 = encodeURIComponent(pointIdString);\n      console.log(\"/trend/\" + equipmentUuid + '/' + pointIdString + \"/real_time\")\n      that.$axios.get((\"/trend/\" + equipmentUuid1 + '/' + pointIdString1 + \"/real_time\")/*, {\n        cancelToken: new CancelToken((c) => {\n          // executor 函数接收一个 cancel 函数作为参数\n          this.cancel = c;\n        })\n      }*/)\n        .then(res => {\n          if (res.data.code === 200) {\n            // this.$emit('datasuccess');\n            this.chartdata = res.data.data;\n            // console.log(\"打印一下这个里的nowtreeeeeeeeeeeeeee\");\n            // console.log(this.nowtree[0]);\n            var pointname = this.chartdata.equipmentName + ' ' + this.nowtree[0].label;\n            var title = this.chartdata.equipmentName +' '+  this.nowtree[0].label+ ' 实时';\n            var title_rev = this.equName + ' 实时转速';\n            // 初始化趋势图数据\n            var flagX = '[时间]';\n            console.log(this.nowtree)\n            var flagY = '[]';\n            flagY='[' + that.features[type][mytree[1].xid].unit + ']';\n           /* if (this.nowtree[0].type.indexOf('加速度') != -1) {\n              flagY = '[m/s2]';\n            } else if (this.nowtree[0].type.indexOf('速度') != -1) {\n              flagY = '[mm/s]';\n            }*/\n            var flagY_rev = '[r/min]';\n            var dataX = [];\n            var dataY = [];\n            var dataY_rev = [];\n            var back = this.backmap;\n            this.nowtree = mytree;\n            var newX = that.timestampToTime(this.chartdata.trendTime);\n            dataX.push(newX);\n            // console.log(this.nowtree)\n            for (var i = 1; i < this.nowtree.length; ++i) {\n              var nowid = this.nowtree[i].xid;\n              var nowcolor = this.colormap.get(nowid.toString());\n              var nowtext = this.nowtree[i].label;\n              var nowname = this.backmap.get(nowid.toString());\n              var nownum = this.chartdata.trendValue[0][nowname];\n              dataY.push({\n                name: nowtext,\n                data: [nownum],\n                color: nowcolor\n              });\n\n            }\n            var nownum_rev = this.chartdata.rev;\n            dataY_rev.push({\n              name: this.equName,\n              data: [nownum_rev],\n            });\n\n            //初始化波形图数据\n            var wavedata = this.chartdata.waveValue || {\n              waveUnit: {}\n            };\n            var wavex = '[' + wavedata.waveUnit.x + ']' || '';\n            var wavey = '[' + wavedata.waveUnit.y + ']' || '';;\n            var wavedataX = wavedata.waveX || [];\n            var wavedataY = {\n              name: this.nowtree[0].label,\n              data: wavedata.waveY || []\n            };\n\n            //初始化频谱图数据\n            var spectrumdata = this.chartdata.spectrumValue|| {\n              spectrumUnit: {}\n            };\n            var spectrumx = '[' + spectrumdata.spectrumUnit.x + ']' || '';\n            var spectrumy = '[' + spectrumdata.spectrumUnit.y + ']' || '';\n            var spectrumdataX = spectrumdata.spectrumX|| [];\n            var spectrumdataY = {\n              name: this.nowtree[0].label,\n              data: spectrumdata.spectrumY|| []\n            };\n\n            //画图\n            this.$refs.trendg.setchart(flagX, flagY, dataX, dataY, title);\n            var dataXX = []\n            for(var i = 0; i < dataX.length; ++i) {\n              dataXX.push(dataX[i])\n            }\n            // console.log('here is gone')\n\n              this.$refs.trendg_another.setchart(flagX, flagY_rev, dataXX, dataY_rev, title_rev);\n              this.$refs.waveg.setchart(wavex, wavey, wavedataX, wavedataY, title, newX);\n              this.$refs.spectrumg.setchart(spectrumx, spectrumy, spectrumdataX, spectrumdataY, title, newX);\n\n\n          } else {\n            this.clearchart();\n            // this.$emit('datafail')\n            // that.$message.error(res.data.message);\n          }\n        })\n    },\n    addrealdantongdao() {\n      let that = this;\n      var equipmentUuid = this.$store.state.equid;\n      var pointIdString = this.nowtree[0].xid;\n\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n      var pointIdString1 = encodeURIComponent(pointIdString);\n      this.$axios.get(\"/trend/\" + equipmentUuid1 + '/' + pointIdString1 + \"/real_time\")\n        .then(res => {\n          if (res.data.code === 200) {\n            this.chartdata = res.data.data;\n            var pointname = this.chartdata.equipmentName + ' ' + this.nowtree[0].label;\n            var title = this.chartdata.equipmentName + ' ' + this.nowtree[0].label + ' 实时';\n            var title_rev = this.chartdata.equipmentName + this.nowtree[0].label + ' 实时转速-';\n            var newX = that.timestampToTime(this.chartdata.trendTime);\n            var newY = [];\n            var dataY_rev = [];\n            for (var i = 1; i < this.nowtree.length; ++i) {\n              var nowid = this.nowtree[i].xid;\n              var nowname = this.backmap.get(nowid.toString());\n              var nownum = this.chartdata.trendValue[0][nowname];\n              newY.push(nownum);\n            }\n            var nownum_rev = this.chartdata.rev;\n            dataY_rev.push(nownum_rev);\n\n            var wavedata = this.chartdata.waveValue || {\n              waveUnit: {}\n            };\n            var wavex = '[' + wavedata.waveUnit.x + ']' || '';\n            var wavey = '[' + wavedata.waveUnit.y + ']' || '';\n            var wavedataX = wavedata.waveX || [];\n            var wavedataY = {\n              name: this.nowtree[0].label,\n              data: wavedata.waveY || []\n            };\n\n            var spectrumdata = this.chartdata.spectrumValue|| {\n              spectrumUnit: {}\n            };\n            var spectrumx = '[' + spectrumdata.spectrumUnit.x + ']' || '';\n            var spectrumy = '[' + spectrumdata.spectrumUnit.y + ']' || '';\n            var spectrumdataX = spectrumdata.spectrumX || [];\n            var spectrumdataY = {\n              name: this.nowtree[0].label,\n              data: spectrumdata.spectrumY || []\n            };\n\n\n            this.$refs.trendg.changechart(newX, newY);\n            this.$refs.trendg_another.changechart(newX, dataY_rev);\n            this.$refs.waveg.setchart(wavex, wavey, wavedataX, wavedataY, title, newX);\n            this.$refs.spectrumg.setchart(spectrumx, spectrumy, spectrumdataX, spectrumdataY, title, newX)\n          } else {\n            this.clearchart();\n            // this.$emit('datafail')\n            // that.$message.error(res.data.message);\n          }\n        })\n\n\n    },\n\n    gethisdantongdaoData(equipmentUuid, pointIdString, stime, etime, lablename) {\n      // this.nowtype=type;\n      console.log(this.nowtree )\n      console.log(\"####################\")\n\n      let that = this;\n\n      var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n      var pointIdString1 = encodeURIComponent(pointIdString);\n      var netinfor = ('/trend/' + equipmentUuid1 + '/' + pointIdString1 + '/' + stime + '/' + etime + \"/info\");\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      this.$axios.get(netinfor/*, {\n        cancelToken: new CancelToken((c) => {\n          // executor 函数接收一个 cancel 函数作为参数\n          this.cancel = c;\n        })\n      }*/)\n\n        .then(res => {\n          if (res.data.code === 200) {\n            this.chartdata = res.data.data;\n            var flagX = '[时间]';\n            var flagY = '[]';\n            console.log(this.nowtree,\"这个树究竟是什么\")\n            if(this.nowtree[0].type == \"振动-位移\" ||this.nowtree[0].type == \"振动-加速度\" ){\n              this.nowtype=113\n            }else if(this.nowtree[0].type == \"振动-速度\"){\n              this.nowtype=114\n            }\n             flagY='[' + that.features[this.nowtype][this.nowtree[1].xid].unit + ']';\n           /* if (res.data.data.trendInfo.length > 0) {\n              var flagY = '[' + res.data.data.trendInfo[0].unit + ']' || '[um]';\n            } else {\n              var flagY = '[um]';\n            }*/\n            var dataX = [];\n            var dataY = [];\n            var back = this.backmap;\n            var title = this.chartdata.equipmentName + ' '+ this.nowtree[0].label + ' 历史';\n\n            var nowdatas = this.chartdata.trendInfo;\n\n            for (var i = 0; i < nowdatas.length; ++i) {\n              var newX = that.timestampToTime(nowdatas[i].trendTime);\n              dataX.push(newX);\n            }\n            console.log(this.nowtree,\"this.nowtree\")\n            for (var i = 1; i < this.nowtree.length; ++i) {\n              var nowid = this.nowtree[i].xid;\n              var nowcolor = this.colormap.get(nowid.toString());\n              var nowtext = this.nowtree[i].label;\n              var newY = [];\n              for (var j = 0; j < nowdatas.length; ++j) {\n                var mydatas = nowdatas[j].trendValue[0];\n                var nowname = back.get(nowid.toString());\n                var nownum = mydatas[nowname];\n                newY.push(nownum)\n              }\n              dataY.push({\n                name: nowtext,\n                data: newY,\n                color: nowcolor\n\n              })\n            }\n            var myinfos = {name: nowdatas[0].trendTime};\n\n            let newY1 = [{name: this.equName, data: nowdatas.map(item => item.rev)}];\n            if(dataX.length) {\n              this.$refs.trendg_another.setchart(flagX, '[r/min]', dataX, newY1, `${this.equName} 历史转速`);\n\n              this.$refs.trendg.setchart(flagX, flagY, dataX, dataY, title)\n              this.drawWaveSpectrum(myinfos);\n            }\n            else {\n              this.clearchart();\n            }\n\n\n          } else {\n            this.clearchart();\n            // that.$emit('datafail')\n            // that.$message.error(res.data.message);\n          }\n        })\n\n\n\n    },\n    openalarm() {\n      this.$confirm('请选择测点', '提示', {\n        cancelButtonText: '确定',\n        type: 'warning'\n      }).then(() => {\n      }).catch(() => {\n        this.clearchart();\n        // that.$emit('datafail');\n      });\n    },\n\n    clearchart() {\n      var CancelToken = this.$axios.CancelToken;\n\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      this.$refs.trendg_another.clearall();\n      this.$refs.trendg.clearall();\n      this.$refs.waveg.clearall();\n      this.$refs.spectrumg.clearall();\n    },\n\n  }\n}\n</script>\n\n<style lang=\"scss\">\n\n.trend-analysis {\n  background: #232835;\n  width: 100%;\n  height: 100%;\n  display: flex;\n\n  .tupu {\n    float: left;\n    padding-top: 10px;\n    margin-right: 10px;\n    width: calc(100% - 330px);\n    height: calc(100% - 20px);\n  }\n\n  .op-hide {\n    height: 100%;\n    width: 20px;\n    float: right;\n    background-color: #232835;\n    display: flex;\n\n    .box-head {\n      width: 0;\n      height: 0;\n      border-bottom: 20px solid yellow;\n    }\n\n    .op-button {\n      width: 20px;\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: #303749;\n      color: #359186;\n      top: 50%;\n      position: absolute;\n      cursor: pointer;\n    }\n\n    .box-bottom {\n\n    }\n  }\n\n  .op {\n    width: 290px;\n    height: calc(100% - 20px);\n    margin-top: 10px;\n    float: right;\n    background-color: #303749;\n    overflow: auto;\n  }\n\n  .graph {\n    height: 100%;\n    width: 100%;\n    //margin-bottom: 1px;\n  }\n}\n</style>\n"]}]}