{"remainingRequest":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\product\\backup\\src\\ChartPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\src\\ChartPage.vue","mtime":1626663062991},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ChartPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"trend-analysis\">\n    <div class='tupu' id='lefttupu'>\n      <div :style=\"{height : highexe(1) , width:'100%'}\" v-show=\"fullId===1||fullId===0\" @dblclick=\"handledblclick(1)\">\n        <TrendGraph ref='trendg' @cancelFull=\"handledblclick(1)\" @chartinfo=\"drawWaveSpectrum\" class=\"graph\" @refine=\"refine\" @cancelRefine=\"cancelRefine\"></TrendGraph>\n      </div>\n      <div :style=\"{height : highexe(2) , width:'100%'}\" v-show=\"fullId===2||fullId===0\" @dblclick=\"handledblclick(2)\">\n        <SpeedTrendGraph ref='trendg_another' @cancelFull=\"handledblclick(2)\" class=\"graph\" @refine=\"refine\" @cancelRefine=\"cancelRefine\"></SpeedTrendGraph>\n      </div>\n      <div :style=\"{height :highexe(3) , width:'100%'}\" v-show=\"fullId===3||fullId===0\" @dblclick=\"handledblclick(3)\">\n        <WaveGraph ref='waveg' @cancelFull=\"handledblclick(3)\" class=\"graph\"></WaveGraph>\n      </div>\n      <div :style=\"{height : highexe(4) , width:'100%'}\" v-show=\"fullId===4||fullId===0\" @dblclick=\"handledblclick(4)\">\n        <SpectrumGraph ref=\"spectrumg\" @cancelFull=\"handledblclick(4)\"  ></SpectrumGraph>\n      </div>\n    </div>\n    <div class=\"op-hide\">\n      <div class=\"box-head\"></div>\n      <i class=\"el-icon-caret-right op-button\" v-if=\"showOpPage\" v-on:click=\"showOrHide\"></i>\n      <i class=\"el-icon-caret-left op-button\" v-else v-on:click=\"showOrHide\"></i>\n      <div class=\"box-bottom\"></div>\n    </div>\n    <div class='op' id='rightop' v-show=\"showOpPage\">\n      <trend-analysis-op-page\n        @cleanChart=\"clearchart\"\n        @realdantongdao=\"getrealdantongdao\"\n        @addrealdantongdao=\"addrealdantongdao\"\n        @drawhistorydantongdao=\"drawhistorydantongdao\"\n        @drawrealduotongdao=\"drawrealduotongdao\"\n        @addrealduotongdao=\"addrealduotongdao\"\n        @drawhistoryduotongdao=\"drawhistoryduotongdao\"\n        @showgraph=\"showgraph\"\n        @notshowgraph=\"notshowgraph\"\n        :style=\"{height: '100%'}\"></trend-analysis-op-page>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TrendGraph from \"../components/TrendGraph\";\nimport WaveGraph from \"../components/WaveGraph\";\nimport SpectrumGraph from \"../components/SpectrumGraph\";\nimport SpeedTrendGraph from \"../components/SpeedTrendGraph\";\nimport TrendAnalysisOpPage from \"../components/TrendAnalysisOpPage\";\n\nexport default {\n  name: \"TrendAnalysis\",\n  components: {\n    TrendAnalysisOpPage,\n    SpeedTrendGraph,\n    SpectrumGraph,\n    WaveGraph,\n    TrendGraph,\n  },\n  data() {\n    return {\n      labelname: null,\n      stime: null,\n      etime: null,\n      fullId: 0,\n      isFull: false,\n      showOpPage: true,\n      show: false,\n      graphheight: 33.3 + '%',\n      fallgraphheight: '0%',\n      unitname: '机泵专用图谱-趋势分析',\n      onlyname: '',\n      onlyone: 0,\n      nowtree: null,\n      chartdata: null,\n      myinterval: null,\n      nowpointid: null,\n      tongdao: null,\n      graphtype: null,\n      intervalflag: 0,\n      backmap: null,\n      textmap: null,\n      colormap: null,\n      nowdata: null,\n      nowtype:null\n    }\n  },\n  created() {\n    var mymap = new Map();\n    mymap.set('0', \"#FFE4C4\");\n    mymap.set('1', \"#00FFFF\");\n    mymap.set('2', \"#4B0082\");\n    mymap.set('3', \"#F0E68C\");\n    mymap.set('4', \"#778899\");\n    mymap.set('5', \"#7B68EE\");\n    mymap.set('6', \"#FF0000\");\n    mymap.set('7', \"#FFFAFA\");\n    mymap.set('8', \"#008080\");\n    mymap.set('9', \"#FA8072\");\n    mymap.set('10', \"#D3D3D3\");\n    mymap.set('11', \"#FFFFE0\");\n    this.colormap = mymap;\n    mymap = new Map();\n    mymap.set('0', \"通频\");\n    mymap.set('1', \"1倍频幅值\");\n    mymap.set('2', \"2倍频幅值\");\n    mymap.set('3', \"3倍频幅值\");\n    mymap.set('4', \"1/2倍频幅值\");\n    mymap.set('5', \"残振\");\n    mymap.set('6', \"直流量\");\n    mymap.set('7', \"间隙电压\");\n    mymap.set('8', \"1倍频相位\");\n    mymap.set('9', \"2倍频相位\");\n    mymap.set('10', \"3倍频相位\");\n    mymap.set('11', \"1/2倍频相位\");\n    this.textmap = mymap;\n    mymap = new Map();\n    mymap.set(\"0\", 'all');\n    mymap.set(\"1\", 'one');\n    mymap.set(\"2\", 'two');\n    mymap.set(\"3\", 'three');\n    mymap.set(\"4\", 'half');\n    mymap.set(\"5\", 'res');\n    mymap.set(\"6\", 'dc');\n    mymap.set(\"7\", 'gap');\n    mymap.set(\"8\", 'phaseOne');\n    mymap.set(\"9\", 'phaseTwo');\n    mymap.set(\"10\", 'phaseThree');\n    mymap.set(\"11\", 'phaseHalf');\n    this.backmap = mymap;\n\n  },\n\n  mounted() {\n    this.$emit('changename', this.unitname);\n  },\n  computed: {\n    nodeData() {\n      return this.$store.state.nodeData;\n    },\n    equid() {\n      return this.$store.state.equid;\n    },\n    nodeNum() {\n      return this.$store.state.nodeNum;\n    },\n    equName() {\n      return this.$store.state.equName;\n    },\n    features() {\n      return this.$store.state.features;\n    }\n  },\n\n  watch: {\n    equid(){\n      this.clearchart();\n    }\n  },\n  methods: {\n    handledblclick(id){\n      if(this.isFull){\n        this.isFull = false\n        this.fullId = 0\n        this.$refs.trendg.setIsFull(false);\n        this.$refs.trendg_another.setIsFull(false);\n        this.$refs.waveg.setIsFull(false);\n        this.$refs.spectrumg.setIsFull(false);\n      }else {\n        this.isFull = true\n        this.fullId = id\n        this.$refs.trendg.setIsFull(true);\n        this.$refs.trendg_another.setIsFull(true);\n        this.$refs.waveg.setIsFull(true);\n        this.$refs.spectrumg.setIsFull(true);\n      }\n      console.log(id)\n\n    },\n    highexe(id){\n      if(this.isFull){\n        if(id === this.fullId){\n          return \"100%\"\n        }else {\n          return  \"0%\"\n        }\n      }else {\n        return \"25%\"\n      }\n    },\n\n    showOrHide() {\n      if (this.showOpPage == true) {\n        this.showOpPage = false;\n        this.$emit(\"showOpPage\", false);\n        // this.$refs.trendg.resize();\n      } else {\n        this.showOpPage = true;\n        this.$emit(\"showOpPage\", true);\n        // this.$refs.trendg.resize();\n      }\n    },\n    showgraph() {\n      this.show = true;\n      this.graphheight = '20%';\n      this.fallgraphheight = '40%';\n      this.$nextTick(() => {\n        this.$refs.trendg.mychart.resize();\n        this.$refs.waveg.mychart.resize();\n        this.$refs.spectrumg.mychart.resize();\n      })\n\n    },\n    notshowgraph() {\n      this.show = false;\n      this.graphheight = 100 / 3 + '%';\n      this.fallgraphheight = '0%';\n      this.$nextTick(() => {\n        this.$refs.trendg.mychart.resize();\n        this.$refs.waveg.mychart.resize();\n        this.$refs.spectrumg.mychart.resize();\n      })\n    },\n\n    infoname(myname) {\n      this.$emit('setinfoname', myname);\n    },\n    dataloading() {\n    },\n\n    stopnowinterval() {\n      if (this.myinterval) {\n        clearInterval(this.myinterval);\n      }\n    },\n    refine(stime, etime) {\n      // this.dataloading();\n\n      if (this.tongdao == 1) {\n        this.gethisdantongdaoData(this.nowpointid, this.pointIdString, stime, etime, this.labelname)\n        console.log(this.nowpointid, this.pointIdString, stime, etime, this.pointuuid, this.nowtree,this.nowtype)\n      } else {\n        this.gethisduotongdaoData(this.nowpointid, this.pointIdString, stime, etime, this.nowtree, this.feature,this.nowtype);\n\n      }\n    },\n\n    cancelRefine() {\n      if (this.tongdao == 1) {\n        this.gethisdantongdaoData(this.nowpointid, this.pointIdString, this.stime, this.etime, this.labelname)\n        console.log(this.nowpointid, this.pointIdString, stime, etime, this.pointuuid, this.nowtree,this.nowtype)\n      } else {\n        this.gethisduotongdaoData(this.nowpointid, this.pointIdString, this.stime, this.etime, this.nowtree, this.feature,this.nowtype);\n\n      }\n    },\n\n    drawhistoryduotongdao(equipmentUuid, pointIdString, stime, etime, mytree, feature,type) {\n      this.tongdao = 0;\n      this.graphtype = '历史';\n      this.nowtree = mytree;\n      this.nowpointid = equipmentUuid;\n      this.pointIdString = pointIdString;\n      this.feature = feature;\n      this.nowtype=type;\n      this.stime = stime;\n      this.etime = etime;\n      this.gethisduotongdaoData(equipmentUuid, pointIdString, stime, etime, mytree, feature,type);\n    },\n    gethisduotongdaoData(equipmentUuid, pointIdString, stime, etime, mytree, feature,type) {\n      // console.log(mytree, feature,type)\n      // console.log(\"*******************88\")\n      var textname = this.textmap.get(feature.toString());\n      this.onlyname = textname;\n      var textstring = this.backmap.get(feature.toString());\n      this.onlyone = textstring;\n      var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n      var pointIdString1 = encodeURIComponent(pointIdString);\n      var netinfor = ( '/trend/' + equipmentUuid1 + '/' + pointIdString1 + '/' + stime + '/' + etime + \"/info\");\n      this.$axios.get(netinfor/*, {\n        cancelToken: new CancelToken((c) => {\n          // executor 函数接收一个 cancel 函数作为参数\n          this.cancel = c;\n        })\n      }*/).then(res => {\n        if (res.data.code === 200) {\n          // console.log(res);\n          // console.log(\"44\")\n          this.chartdata = res.data.data;\n          var title = this.chartdata.equipmentName + ' 历史';\n          var trendinfo = this.chartdata.trendInfo;\n          var flagX = '[时间]';\n          var flagY = '[]';\n          flagY='[' + this.features[type][this.feature].unit + ']';\n        /*  if(trendinfo.length > 0) {\n            var flagY = '[' + res.data.data.trendInfo[0].unit + ']' || '[um]';\n          } else {\n            var flagY = '[um]';\n          }*/\n          var dataX = [];\n          var dataY = [];\n          var valueY = [];\n          for (var i = 1; i < this.nowtree.length; ++i) {\n            valueY.push([]);\n          }\n          //  that.timestampToTime(this.chartdata.trendTime);\n          for (var i = 0; i < trendinfo.length; ++i) {\n            dataX.push(this.timestampToTime(trendinfo[i].trendTime));\n            for (var j = 1; j < this.nowtree.length; ++j) {\n              valueY[j - 1].push(trendinfo[i].trendValue[j - 1][this.onlyone])\n            }\n          }\n\n\n          for (var i = 1; i < this.nowtree.length; ++i) {\n            dataY.push({\n              name: this.nowtree[i].label,\n              data: valueY[i - 1],\n              color: this.colormap.get(i.toString())\n            })\n\n\n          }\n\n          let newY = [{name: this.equName, data: trendinfo.map(item => item.rev)}];\n          if(dataX.length) {\n            this.$refs.trendg.setchart(flagX, flagY, dataX, dataY, title);\n            this.$refs.trendg_another.setchart(flagX, '[r/min]', dataX, newY, `${this.equName} 历史转速`);\n            var myinfo = {\n              name: dataX[0],\n              seriesName: this.nowtree[1].label,\n              //  seriesID:this.nowtree[1].id\n\n            };\n            this.drawWaveSpectrum(myinfo)\n          }\n\n        } else {\n          this.clearchart();\n          this.$emit('datafail')\n          //this.$message.error(res.data.message);\n        }\n      })\n\n\n    },\n\n\n\n    addrealduotongdao(equid, pointids) {\n\n\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      let equid1 = encodeURIComponent(equid);\n      let pointids1 = encodeURIComponent(pointids);\n      this.$axios.get((\"/trend/\" + equid1 + \"/\" + pointids1 + \"/real_time\")).then(res => {\n        if (res.data.code === 200) {\n\n          let that = this;\n          this.chartdata = res.data.data;\n          var title = this.chartdata.equipmentName + ' 实时';\n\n          var newX = that.timestampToTime(this.chartdata.trendTime);\n          var dataY = [];\n          var newY_rev = [];\n          for (var i = 1; i < this.nowtree.length; ++i) {\n            var newY = this.chartdata.trendValue[i - 1][this.onlyone];\n            dataY.push(newY);\n          }\n          var nownum_rev = this.chartdata.rev;\n          newY_rev.push(nownum_rev);\n\n          var wavedata = this.chartdata.waveValue || {\n            waveUnit: {}\n          };\n          var wavex = '[' + wavedata.waveUnit.x + ']' || '';\n          var wavey = '[' + wavedata.waveUnit.y + ']' || '';\n          var wavedataX = wavedata.waveX || [];\n          var wavedataY = {\n            name: this.nowtree[1].label,\n            data: wavedata.waveY || []\n          };\n\n          var spectrumdata = this.chartdata.spectrumValue || {\n            spectrumUnit: {}\n          };\n          var spectrumx = '[' + spectrumdata.spectrumUnit.x + ']' || '';\n          var spectrumy = '[' + spectrumdata.spectrumUnit.y + ']' || '';\n          var spectrumdataX = spectrumdata.spectrumX || [];\n          var spectrumdataY = {\n            name: this.nowtree[1].label,\n            data: spectrumdata.spectrumY || []\n          };\n\n\n          this.$refs.trendg.changechart(newX, dataY);\n\n          this.$refs.trendg_another.changechart(newX, newY_rev);\n          this.$refs.waveg.setchart(wavex, wavey, wavedataX, wavedataY, title, newX);\n          this.$refs.spectrumg.setchart(spectrumx, spectrumy, spectrumdataX, spectrumdataY, title, newX);\n\n        } else {\n          this.clearchart();\n          this.$emit('datafail')\n          //this.$message.error(res.data.message);\n        }\n      })\n\n    },\n    drawrealduotongdao(equid, pointids, mytree, feautre,type) {\n      console.log(\"2@@@@@@@@@@@@@@@@@@@@\",type,feautre);\n      // console.log(this.features[type][feautre].unit)\n      this.tongdao = 0;\n      this.graphtype = '实时'\n      this.nowtree = mytree;\n      var textname = this.textmap.get(feautre.toString());\n      this.onlyname = textname;\n      var textstring = this.backmap.get(feautre.toString());\n      this.onlyone = textstring;\n\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      var equid1 = encodeURIComponent(equid);\n      var pointids1 = encodeURIComponent(pointids);\n\n      this.$axios.get(\"/trend/\" + equid1 + \"/\" + pointids1 + \"/real_time\"/*, {\n        cancelToken: new CancelToken((c) => {\n          // executor 函数接收一个 cancel 函数作为参数\n          this.cancel = c;\n        })\n      }*/).then(res => {\n        // console.log('go3', res)\n        if (res.data.code === 200) {\n          // console.log('go2')\n          let that = this;\n          this.chartdata = res.data.data;\n          var title = this.chartdata.equipmentName + ' 实时';\n          var title_rev = this.equName + ' 实时转速';\n          var newX = that.timestampToTime(this.chartdata.trendTime);\n\n          var flagX = '[时间]';\n          var flagY = '';\n          flagY='[' + that.features[type][feautre].unit + ']';\n          // if (this.nowtree[0].label.indexOf('加速度') != -1) {\n          //   flagY = '[m/s2]';\n          // } else if (this.nowtree[0].label.indexOf('速度') != -1) {\n          //   flagY = '[mm/s]';\n          // }\n          var flagY_rev = '[r/min]';\n          var dataX = [];\n          var dataY = [];\n          var dataY_rev = [];\n          dataX.push(newX);\n          for (var i = 1; i < mytree.length; ++i) {\n            var newY = this.chartdata.trendValue[i - 1][textstring];\n            console.log(mytree[i]);\n            dataY.push({\n              name: mytree[i].label,\n              data: [newY],\n              color: this.colormap.get(i.toString())\n            });\n          }\n          var nownum_rev = this.chartdata.rev;\n          dataY_rev.push({\n            name: this.equName,\n            data: [nownum_rev],\n          });\n\n          var wavedata = this.chartdata.waveValue || {\n            waveUnit:{}\n          };\n          var wavex = '[' + wavedata.waveUnit.x + ']' || '';\n          var wavey = '[' + wavedata.waveUnit.y + ']' || '';\n          var wavedataX = wavedata.waveX || [];\n          var wavedataY = {\n            name: mytree[1].label,\n            data: wavedata.waveY || []\n          };\n\n          var spectrumdata = this.chartdata.spectrumValue || {\n            spectrumUnit:{}\n          };\n          var spectrumx = '[' + spectrumdata.spectrumUnit.x + ']' || '';\n          var spectrumy = '[' + spectrumdata.spectrumUnit.y + ']' || '';\n          var spectrumdataX = spectrumdata.spectrumX || [];\n          var spectrumdataY = {\n            name: mytree[1].label,\n            data: spectrumdata.spectrumY || []\n          };\n          // console.log('it goes')\n\n          this.$refs.trendg.setchart(flagX, flagY, dataX, dataY, title);\n          var dataXX = [];\n          for(var i = 0; i < dataX.length; ++i) {\n            dataXX.push(dataX[i])\n          }\n\n          this.$refs.trendg_another.setchart(flagX, flagY_rev, dataXX, dataY_rev, title_rev);\n          this.$refs.waveg.setchart(wavex, wavey, wavedataX, wavedataY, title, newX);\n          this.$refs.spectrumg.setchart(spectrumx, spectrumy, spectrumdataX, spectrumdataY, title, newX)\n        } else {\n          // this.$emit('datafail')\n          //this.$message.error(res.data.message);\n        }\n      })\n    },\n\n    drawhistorydantongdao(equipmentUuid, pointIdString, stime, etime, pointuuid, mytree,labelname) {   //单通道\n      this.tongdao = 1;\n      this.graphtype = '历史';\n      this.nowtree = mytree;\n      this.nowpointid = equipmentUuid;\n      this.pointIdString = pointIdString;\n      this.pointuuid = pointuuid;\n      this.stime = stime;\n      this.etime = etime;\n      this.labelname = labelname;\n      // this.nowtype = type\n      // console.log(\"%%%%%%%%%%%\",this.nowtype)\n      this.gethisdantongdaoData(equipmentUuid, pointIdString, stime, etime,labelname);\n    },\n\n    cancelRequest() {\n      if (typeof this.source === 'function') {\n        this.source('终止请求')\n      }\n    },\n\n    drawWaveSpectrum(myinfo) {\n      console.log(myinfo)\n      if (this.graphtype === '历史') {\n        // console.log(11111111111111111)\n        // console.log(myinfo)\n        var equipmentUuid = this.nowpointid;\n        var thistime = myinfo.name;\n        var nowtime = new Date(thistime).getTime();\n        var pointIdString;\n        this.dataloading();\n        var pointNmae;\n        if (this.tongdao.toString() === '1') {\n          pointIdString = this.nowtree[0].xid;\n          pointNmae = this.nowtree[0].label\n        } else {\n          pointIdString = '';\n          console.log('nowtree')\n          console.log(this.nowtree)\n          for(var i = 0; i < this.nowtree.length; ++i) {\n            if(this.nowtree[i].label == myinfo.seriesName) {\n              pointIdString = this.nowtree[i].id\n            }\n          }\n\n          pointNmae = myinfo.seriesName;\n        }\n\n        var waveNumber = 16384;\n        var analysisLines = 0;\n\n        var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n        var pointIdString1 = encodeURIComponent(pointIdString);\n\n        this.$axios.get(\"/wave-spectrum/\" + equipmentUuid1 + '/' + pointIdString1 + '/' + nowtime + '/' + waveNumber + '/' + analysisLines + \"/info\").then(res => {\n\n          if (res.data.code === 200) {\n            // this.$emit('datasuccess');\n            var name = this.nowtree[0].label\n            var wavex = '[' + res.data.data.waveValue.waveUnit.x + ']';\n            var wavey = '[' + res.data.data.waveValue.waveUnit.y + ']';\n            var dataX = res.data.data.waveValue.waveX;\n\n            var dataY = {\n              name: pointNmae,\n              data: res.data.data.waveValue.waveY\n            };\n            var title = res.data.data.equipmentName + ' '  + ' 历史';\n\n            //thistime =timestampToTime(thistime);\n\n\n            thistime = this.timestampToTime(nowtime);\n\n            this.$refs.waveg.setchart(wavex, wavey, dataX, dataY, title, thistime);\n\n            var spectrumx = '[' + res.data.data.spectrumValue.spectrumUnit.x + ']';\n            var spectrumy = '[' + res.data.data.spectrumValue.spectrumUnit.y + ']';\n            dataX = res.data.data.spectrumValue.spectrumX;\n            var dataY = {\n              name: pointNmae,\n              data: res.data.data.spectrumValue.spectrumY\n            };\n            this.$refs.spectrumg.setchart(spectrumx, spectrumy, dataX, dataY, title, thistime);\n\n\n          } else {\n            // this.clearchart();\n            // this.$emit('datafail')\n            this.$refs.waveg.clearall();\n            this.$refs.spectrumg.clearall();\n            //this.$message.error(res.data.message);\n          }\n        }).catch(e=>{\n          // this.$emit('datafail')\n          this.$refs.waveg.clearall();\n          this.$refs.spectrumg.clearall();\n        })\n\n      }\n\n    },\n\n    timestampToTime(timestamp) {\n      var date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n      var Y = date.getFullYear() + '-';\n      var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n      var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';\n      var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n      var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n      var s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()) + '.';\n      var ms = (timestamp % 1000).toString();\n      while (ms.length < 3) {\n        ms = '0' + ms;\n      }\n      //var nowtime = new Date(Y+M+D+h+m+s);\n      return Y + M + D + h + m + s + ms;\n    },\n\n\n    getrealdantongdao(equipmentUuid, pointIdString, pointuuid, mytree,type) {\n      // console.log(mytree,type)\n      let that = this;\n      //帮助后面添加数据\n      that.nowtree = mytree;\n      that.nowpointid = pointuuid;\n      that.tongdao = 1;\n      that.graphtype = '实时';\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n      var pointIdString1 = encodeURIComponent(pointIdString);\n      console.log(\"/trend/\" + equipmentUuid + '/' + pointIdString + \"/real_time\")\n      that.$axios.get((\"/trend/\" + equipmentUuid1 + '/' + pointIdString1 + \"/real_time\")/*, {\n        cancelToken: new CancelToken((c) => {\n          // executor 函数接收一个 cancel 函数作为参数\n          this.cancel = c;\n        })\n      }*/)\n        .then(res => {\n          if (res.data.code === 200) {\n            // this.$emit('datasuccess');\n            this.chartdata = res.data.data;\n            // console.log(\"打印一下这个里的nowtreeeeeeeeeeeeeee\");\n            // console.log(this.nowtree[0]);\n            var pointname = this.chartdata.equipmentName + ' ' + this.nowtree[0].label;\n            var title = this.chartdata.equipmentName +' '+  this.nowtree[0].label+ ' 实时';\n            var title_rev = this.equName + ' 实时转速';\n            // 初始化趋势图数据\n            var flagX = '[时间]';\n            console.log(this.nowtree)\n            var flagY = '[]';\n            flagY='[' + that.features[type][mytree[1].xid].unit + ']';\n           /* if (this.nowtree[0].type.indexOf('加速度') != -1) {\n              flagY = '[m/s2]';\n            } else if (this.nowtree[0].type.indexOf('速度') != -1) {\n              flagY = '[mm/s]';\n            }*/\n            var flagY_rev = '[r/min]';\n            var dataX = [];\n            var dataY = [];\n            var dataY_rev = [];\n            var back = this.backmap;\n            this.nowtree = mytree;\n            var newX = that.timestampToTime(this.chartdata.trendTime);\n            dataX.push(newX);\n            // console.log(this.nowtree)\n            for (var i = 1; i < this.nowtree.length; ++i) {\n              var nowid = this.nowtree[i].xid;\n              var nowcolor = this.colormap.get(nowid.toString());\n              var nowtext = this.nowtree[i].label;\n              var nowname = this.backmap.get(nowid.toString());\n              var nownum = this.chartdata.trendValue[0][nowname];\n              dataY.push({\n                name: nowtext,\n                data: [nownum],\n                color: nowcolor\n              });\n\n            }\n            var nownum_rev = this.chartdata.rev;\n            dataY_rev.push({\n              name: this.equName,\n              data: [nownum_rev],\n            });\n\n            //初始化波形图数据\n            var wavedata = this.chartdata.waveValue || {\n              waveUnit: {}\n            };\n            var wavex = '[' + wavedata.waveUnit.x + ']' || '';\n            var wavey = '[' + wavedata.waveUnit.y + ']' || '';;\n            var wavedataX = wavedata.waveX || [];\n            var wavedataY = {\n              name: this.nowtree[0].label,\n              data: wavedata.waveY || []\n            };\n\n            //初始化频谱图数据\n            var spectrumdata = this.chartdata.spectrumValue|| {\n              spectrumUnit: {}\n            };\n            var spectrumx = '[' + spectrumdata.spectrumUnit.x + ']' || '';\n            var spectrumy = '[' + spectrumdata.spectrumUnit.y + ']' || '';\n            var spectrumdataX = spectrumdata.spectrumX|| [];\n            var spectrumdataY = {\n              name: this.nowtree[0].label,\n              data: spectrumdata.spectrumY|| []\n            };\n\n            //画图\n            this.$refs.trendg.setchart(flagX, flagY, dataX, dataY, title);\n            var dataXX = []\n            for(var i = 0; i < dataX.length; ++i) {\n              dataXX.push(dataX[i])\n            }\n            // console.log('here is gone')\n\n              this.$refs.trendg_another.setchart(flagX, flagY_rev, dataXX, dataY_rev, title_rev);\n              this.$refs.waveg.setchart(wavex, wavey, wavedataX, wavedataY, title, newX);\n              this.$refs.spectrumg.setchart(spectrumx, spectrumy, spectrumdataX, spectrumdataY, title, newX);\n\n\n          } else {\n            this.clearchart();\n            // this.$emit('datafail')\n            // that.$message.error(res.data.message);\n          }\n        })\n    },\n    addrealdantongdao() {\n      let that = this;\n      var equipmentUuid = this.$store.state.equid;\n      var pointIdString = this.nowtree[0].xid;\n\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n      var pointIdString1 = encodeURIComponent(pointIdString);\n      this.$axios.get(\"/trend/\" + equipmentUuid1 + '/' + pointIdString1 + \"/real_time\")\n        .then(res => {\n          if (res.data.code === 200) {\n            this.chartdata = res.data.data;\n            var pointname = this.chartdata.equipmentName + ' ' + this.nowtree[0].label;\n            var title = this.chartdata.equipmentName + ' ' + this.nowtree[0].label + ' 实时';\n            var title_rev = this.chartdata.equipmentName + this.nowtree[0].label + ' 实时转速-';\n            var newX = that.timestampToTime(this.chartdata.trendTime);\n            var newY = [];\n            var dataY_rev = [];\n            for (var i = 1; i < this.nowtree.length; ++i) {\n              var nowid = this.nowtree[i].xid;\n              var nowname = this.backmap.get(nowid.toString());\n              var nownum = this.chartdata.trendValue[0][nowname];\n              newY.push(nownum);\n            }\n            var nownum_rev = this.chartdata.rev;\n            dataY_rev.push(nownum_rev);\n\n            var wavedata = this.chartdata.waveValue || {\n              waveUnit: {}\n            };\n            var wavex = '[' + wavedata.waveUnit.x + ']' || '';\n            var wavey = '[' + wavedata.waveUnit.y + ']' || '';\n            var wavedataX = wavedata.waveX || [];\n            var wavedataY = {\n              name: this.nowtree[0].label,\n              data: wavedata.waveY || []\n            };\n\n            var spectrumdata = this.chartdata.spectrumValue|| {\n              spectrumUnit: {}\n            };\n            var spectrumx = '[' + spectrumdata.spectrumUnit.x + ']' || '';\n            var spectrumy = '[' + spectrumdata.spectrumUnit.y + ']' || '';\n            var spectrumdataX = spectrumdata.spectrumX || [];\n            var spectrumdataY = {\n              name: this.nowtree[0].label,\n              data: spectrumdata.spectrumY || []\n            };\n\n\n            this.$refs.trendg.changechart(newX, newY);\n            this.$refs.trendg_another.changechart(newX, dataY_rev);\n            this.$refs.waveg.setchart(wavex, wavey, wavedataX, wavedataY, title, newX);\n            this.$refs.spectrumg.setchart(spectrumx, spectrumy, spectrumdataX, spectrumdataY, title, newX)\n          } else {\n            this.clearchart();\n            // this.$emit('datafail')\n            // that.$message.error(res.data.message);\n          }\n        })\n\n\n    },\n\n    gethisdantongdaoData(equipmentUuid, pointIdString, stime, etime, lablename) {\n      // this.nowtype=type;\n      console.log(this.nowtree )\n      console.log(\"####################\")\n\n      let that = this;\n\n      var equipmentUuid1 = encodeURIComponent(equipmentUuid);\n      var pointIdString1 = encodeURIComponent(pointIdString);\n      var netinfor = ('/trend/' + equipmentUuid1 + '/' + pointIdString1 + '/' + stime + '/' + etime + \"/info\");\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      this.$axios.get(netinfor/*, {\n        cancelToken: new CancelToken((c) => {\n          // executor 函数接收一个 cancel 函数作为参数\n          this.cancel = c;\n        })\n      }*/)\n\n        .then(res => {\n          if (res.data.code === 200) {\n            this.chartdata = res.data.data;\n            var flagX = '[时间]';\n            var flagY = '[]';\n            console.log(this.nowtree,\"这个树究竟是什么\")\n            if(this.nowtree[0].type == \"振动-位移\" ||this.nowtree[0].type == \"振动-加速度\" ){\n              this.nowtype=113\n            }else if(this.nowtree[0].type == \"振动-速度\"){\n              this.nowtype=114\n            }\n             flagY='[' + that.features[this.nowtype][this.nowtree[1].xid].unit + ']';\n           /* if (res.data.data.trendInfo.length > 0) {\n              var flagY = '[' + res.data.data.trendInfo[0].unit + ']' || '[um]';\n            } else {\n              var flagY = '[um]';\n            }*/\n            var dataX = [];\n            var dataY = [];\n            var back = this.backmap;\n            var title = this.chartdata.equipmentName + ' '+ this.nowtree[0].label + ' 历史';\n\n            var nowdatas = this.chartdata.trendInfo;\n\n            for (var i = 0; i < nowdatas.length; ++i) {\n              var newX = that.timestampToTime(nowdatas[i].trendTime);\n              dataX.push(newX);\n            }\n            console.log(this.nowtree,\"this.nowtree\")\n            for (var i = 1; i < this.nowtree.length; ++i) {\n              var nowid = this.nowtree[i].xid;\n              var nowcolor = this.colormap.get(nowid.toString());\n              var nowtext = this.nowtree[i].label;\n              var newY = [];\n              for (var j = 0; j < nowdatas.length; ++j) {\n                var mydatas = nowdatas[j].trendValue[0];\n                var nowname = back.get(nowid.toString());\n                var nownum = mydatas[nowname];\n                newY.push(nownum)\n              }\n              dataY.push({\n                name: nowtext,\n                data: newY,\n                color: nowcolor\n\n              })\n            }\n            var myinfos = {name: nowdatas[0].trendTime};\n\n            let newY1 = [{name: this.equName, data: nowdatas.map(item => item.rev)}];\n            if(dataX.length) {\n              this.$refs.trendg_another.setchart(flagX, '[r/min]', dataX, newY1, `${this.equName} 历史转速`);\n\n              this.$refs.trendg.setchart(flagX, flagY, dataX, dataY, title)\n              this.drawWaveSpectrum(myinfos);\n            }\n            else {\n              this.clearchart();\n            }\n\n\n          } else {\n            this.clearchart();\n            // that.$emit('datafail')\n            // that.$message.error(res.data.message);\n          }\n        })\n\n\n\n    },\n    openalarm() {\n      this.$confirm('请选择测点', '提示', {\n        cancelButtonText: '确定',\n        type: 'warning'\n      }).then(() => {\n      }).catch(() => {\n        this.clearchart();\n        // that.$emit('datafail');\n      });\n    },\n\n    clearchart() {\n      var CancelToken = this.$axios.CancelToken;\n\n      if (typeof this.cancel == 'function') {\n        this.cancel()\n      }\n      this.$refs.trendg_another.clearall();\n      this.$refs.trendg.clearall();\n      this.$refs.waveg.clearall();\n      this.$refs.spectrumg.clearall();\n    },\n\n  }\n}\n</script>\n\n<style lang=\"scss\">\n\n.trend-analysis {\n  background: #232835;\n  width: 100%;\n  height: 100%;\n  display: flex;\n\n  .tupu {\n    float: left;\n    padding-top: 10px;\n    margin-right: 10px;\n    width: calc(100% - 330px);\n    height: calc(100% - 20px);\n  }\n\n  .op-hide {\n    height: 100%;\n    width: 20px;\n    float: right;\n    background-color: #232835;\n    display: flex;\n\n    .box-head {\n      width: 0;\n      height: 0;\n      border-bottom: 20px solid yellow;\n    }\n\n    .op-button {\n      width: 20px;\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: #303749;\n      color: #359186;\n      top: 50%;\n      position: absolute;\n      cursor: pointer;\n    }\n\n    .box-bottom {\n\n    }\n  }\n\n  .op {\n    width: 290px;\n    height: calc(100% - 20px);\n    margin-top: 10px;\n    float: right;\n    background-color: #303749;\n    overflow: auto;\n  }\n\n  .graph {\n    height: 100%;\n    width: 100%;\n    //margin-bottom: 1px;\n  }\n}\n</style>\n"],"sourceRoot":"src"}]}