{"remainingRequest":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\product\\backup\\src\\components\\submenu4_1.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\src\\components\\submenu4_1.vue","mtime":1625709882070},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["submenu4_1.vue"],"names":[],"mappings":"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","sourcesContent":["// 页面文件，如index.vue\n<template>\n  <div>\n    <!-- echarts -->\n    <div id=\"charts_1\" class=\"charts_1\"></div>\r\n\t<div id=\"charts_2\" class=\"charts_2\"></div>\r\n\t<div id=\"charts_3\" class=\"charts_3\"></div>\r\n\t<div id=\"charts_4\" class=\"charts_4\"></div>\n  </div>\n</template>\n<script>\n\nexport default {\n  data() {\n    return {}\n  },\n  mounted() {\n    this.initCharts_1()\r\n\tthis.initCharts_2()\r\n\tthis.initCharts_3()\r\n\tthis.initCharts_4()\n  },\n  methods: {\n    initCharts_1() {\n\tconst echarts = require('echarts/lib/echarts');\n\trequire('echarts/lib/component/title');\n\trequire('echarts/lib/component/tooltip');\n\trequire('echarts/lib/component/grid');\n\trequire('echarts/lib/chart/line');\n\tvar chartDom = document.getElementById('charts_1');\n\tvar myChart = echarts.init(chartDom);\n\tvar option;\n\nfunction randomData() {\n    now = new Date(+now + oneDay);\n    value = value + Math.random() * 21 - 10;\n    return {\n        name: now.toString(),\n        value: [\n            [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\n            Math.round(value)\n        ]\n    };\n}\n\nvar data = [];\nvar now = +new Date(1997, 9, 3);\nvar oneDay = 24 * 3600 * 1000;\nvar value = Math.random() * 1000;\nfor (var i = 0; i < 1000; i++) {\n    data.push(randomData());\n}\n\noption = {\n    title: {\n        text: '动态数据 + 时间坐标轴'\n    },\n    tooltip: {\n        trigger: 'axis',\n        formatter: function (params) {\n            params = params[0];\n            var date = new Date(params.name);\n            return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n        },\n        axisPointer: {\n            animation: false\n        }\n    },\n    xAxis: {\n        type: 'time',\n        splitLine: {\n            show: false\n        }\n    },\n    yAxis: {\n        type: 'value',\n        boundaryGap: [0, '100%'],\n        splitLine: {\n            show: false\n        }\n    },\n    series: [{\n        name: '模拟数据',\n        type: 'line',\n        showSymbol: false,\n        hoverAnimation: false,\n        data: data\n    }]\n};\n\nsetInterval(function () {\n\n    for (var i = 0; i < 5; i++) {\n        data.shift();\n        data.push(randomData());\n    }\n\n    myChart.setOption({\n        series: [{\n            data: data\n        }]\n    });\n}, 1000);\n\noption && myChart.setOption(option);\n    },\r\n\t//charts2\r\n\tinitCharts_2() {\r\n\t\tconst echarts = require('echarts/lib/echarts');\r\n\t\trequire('echarts/lib/component/title');\r\n\t\trequire('echarts/lib/component/tooltip');\r\n\t\trequire('echarts/lib/component/grid');\r\n\t\trequire('echarts/lib/chart/line');\r\n\t\tvar chartDom = document.getElementById('charts_2');\r\n\t\tvar myChart = echarts.init(chartDom);\r\n\t\tvar option;\r\n\t\r\n\tfunction randomData() {\r\n\t    now = new Date(+now + oneDay);\r\n\t    value = value + Math.random() * 21 - 10;\r\n\t    return {\r\n\t        name: now.toString(),\r\n\t        value: [\r\n\t            [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\r\n\t            Math.round(value)\r\n\t        ]\r\n\t    };\r\n\t}\r\n\t\r\n\tvar data = [];\r\n\tvar now = +new Date(1997, 9, 3);\r\n\tvar oneDay = 24 * 3600 * 1000;\r\n\tvar value = Math.random() * 1000;\r\n\tfor (var i = 0; i < 1000; i++) {\r\n\t    data.push(randomData());\r\n\t}\r\n\t\r\n\toption = {\r\n\t    title: {\r\n\t        text: '动态数据 + 时间坐标轴'\r\n\t    },\r\n\t    tooltip: {\r\n\t        trigger: 'axis',\r\n\t        formatter: function (params) {\r\n\t            params = params[0];\r\n\t            var date = new Date(params.name);\r\n\t            return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\r\n\t        },\r\n\t        axisPointer: {\r\n\t            animation: false\r\n\t        }\r\n\t    },\r\n\t    xAxis: {\r\n\t        type: 'time',\r\n\t        splitLine: {\r\n\t            show: false\r\n\t        }\r\n\t    },\r\n\t    yAxis: {\r\n\t        type: 'value',\r\n\t        boundaryGap: [0, '100%'],\r\n\t        splitLine: {\r\n\t            show: false\r\n\t        }\r\n\t    },\r\n\t    series: [{\r\n\t        name: '模拟数据',\r\n\t        type: 'line',\r\n\t        showSymbol: false,\r\n\t        hoverAnimation: false,\r\n\t        data: data\r\n\t    }]\r\n\t};\r\n\t\r\n\tsetInterval(function () {\r\n\t\r\n\t    for (var i = 0; i < 5; i++) {\r\n\t        data.shift();\r\n\t        data.push(randomData());\r\n\t    }\r\n\t\r\n\t    myChart.setOption({\r\n\t        series: [{\r\n\t            data: data\r\n\t        }]\r\n\t    });\r\n\t}, 1000);\r\n\t\r\n\toption && myChart.setOption(option);\r\n\t    },\r\n\t\t//charts_3\r\n\t\tinitCharts_3() {\r\n\t\t\tconst echarts = require('echarts/lib/echarts');\r\n\t\t\trequire('echarts/lib/component/title');\r\n\t\t\trequire('echarts/lib/component/tooltip');\r\n\t\t\trequire('echarts/lib/component/grid');\r\n\t\t\trequire('echarts/lib/chart/line');\r\n\t\t\tvar chartDom = document.getElementById('charts_3');\r\n\t\t\tvar myChart = echarts.init(chartDom);\r\n\t\t\tvar option;\r\n\t\t\r\n\t\tfunction randomData() {\r\n\t\t    now = new Date(+now + oneDay);\r\n\t\t    value = value + Math.random() * 21 - 10;\r\n\t\t    return {\r\n\t\t        name: now.toString(),\r\n\t\t        value: [\r\n\t\t            [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\r\n\t\t            Math.round(value)\r\n\t\t        ]\r\n\t\t    };\r\n\t\t}\r\n\t\t\r\n\t\tvar data = [];\r\n\t\tvar now = +new Date(1997, 9, 3);\r\n\t\tvar oneDay = 24 * 3600 * 1000;\r\n\t\tvar value = Math.random() * 1000;\r\n\t\tfor (var i = 0; i < 1000; i++) {\r\n\t\t    data.push(randomData());\r\n\t\t}\r\n\t\t\r\n\t\toption = {\r\n\t\t    title: {\r\n\t\t        text: '动态数据 + 时间坐标轴'\r\n\t\t    },\r\n\t\t    tooltip: {\r\n\t\t        trigger: 'axis',\r\n\t\t        formatter: function (params) {\r\n\t\t            params = params[0];\r\n\t\t            var date = new Date(params.name);\r\n\t\t            return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\r\n\t\t        },\r\n\t\t        axisPointer: {\r\n\t\t            animation: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    xAxis: {\r\n\t\t        type: 'time',\r\n\t\t        splitLine: {\r\n\t\t            show: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    yAxis: {\r\n\t\t        type: 'value',\r\n\t\t        boundaryGap: [0, '100%'],\r\n\t\t        splitLine: {\r\n\t\t            show: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    series: [{\r\n\t\t        name: '模拟数据',\r\n\t\t        type: 'line',\r\n\t\t        showSymbol: false,\r\n\t\t        hoverAnimation: false,\r\n\t\t        data: data\r\n\t\t    }]\r\n\t\t};\r\n\t\t\r\n\t\tsetInterval(function () {\r\n\t\t\r\n\t\t    for (var i = 0; i < 5; i++) {\r\n\t\t        data.shift();\r\n\t\t        data.push(randomData());\r\n\t\t    }\r\n\t\t\r\n\t\t    myChart.setOption({\r\n\t\t        series: [{\r\n\t\t            data: data\r\n\t\t        }]\r\n\t\t    });\r\n\t\t}, 1000);\r\n\t\t\r\n\t\toption && myChart.setOption(option);\r\n\t\t    },\r\n\t\t//charts_4\r\n\t\tinitCharts_4() {\r\n\t\t\tconst echarts = require('echarts/lib/echarts');\r\n\t\t\trequire('echarts/lib/component/title');\r\n\t\t\trequire('echarts/lib/component/tooltip');\r\n\t\t\trequire('echarts/lib/component/grid');\r\n\t\t\trequire('echarts/lib/chart/line');\r\n\t\t\tvar chartDom = document.getElementById('charts_4');\r\n\t\t\tvar myChart = echarts.init(chartDom);\r\n\t\t\tvar option;\r\n\t\t\r\n\t\tfunction randomData() {\r\n\t\t    now = new Date(+now + oneDay);\r\n\t\t    value = value + Math.random() * 21 - 10;\r\n\t\t    return {\r\n\t\t        name: now.toString(),\r\n\t\t        value: [\r\n\t\t            [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\r\n\t\t            Math.round(value)\r\n\t\t        ]\r\n\t\t    };\r\n\t\t}\r\n\t\t\r\n\t\tvar data = [];\r\n\t\tvar now = +new Date(1997, 9, 3);\r\n\t\tvar oneDay = 24 * 3600 * 1000;\r\n\t\tvar value = Math.random() * 1000;\r\n\t\tfor (var i = 0; i < 1000; i++) {\r\n\t\t    data.push(randomData());\r\n\t\t}\r\n\t\t\r\n\t\toption = {\r\n\t\t    title: {\r\n\t\t        text: '动态数据 + 时间坐标轴'\r\n\t\t    },\r\n\t\t    tooltip: {\r\n\t\t        trigger: 'axis',\r\n\t\t        formatter: function (params) {\r\n\t\t            params = params[0];\r\n\t\t            var date = new Date(params.name);\r\n\t\t            return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\r\n\t\t        },\r\n\t\t        axisPointer: {\r\n\t\t            animation: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    xAxis: {\r\n\t\t        type: 'time',\r\n\t\t        splitLine: {\r\n\t\t            show: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    yAxis: {\r\n\t\t        type: 'value',\r\n\t\t        boundaryGap: [0, '100%'],\r\n\t\t        splitLine: {\r\n\t\t            show: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    series: [{\r\n\t\t        name: '模拟数据',\r\n\t\t        type: 'line',\r\n\t\t        showSymbol: false,\r\n\t\t        hoverAnimation: false,\r\n\t\t        data: data\r\n\t\t    }]\r\n\t\t};\r\n\t\t\r\n\t\tsetInterval(function () {\r\n\t\t\r\n\t\t    for (var i = 0; i < 5; i++) {\r\n\t\t        data.shift();\r\n\t\t        data.push(randomData());\r\n\t\t    }\r\n\t\t\r\n\t\t    myChart.setOption({\r\n\t\t        series: [{\r\n\t\t            data: data\r\n\t\t        }]\r\n\t\t    });\r\n\t\t}, 1000);\r\n\t\t\r\n\t\toption && myChart.setOption(option);\r\n\t\t    },\n  },\n}\r\n\n</script>\n<style scoped>\n.charts_1 {\r\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n}\r\n.charts_2 {\r\n  width:100%;\r\n  height: 200px;\n  overflow: hidden;\n}\r\n.charts_3 {\r\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n}\r\n.charts_4 {\r\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n}\n</style>"],"sourceRoot":"src/components"}]}