{"remainingRequest":"C:\\Users\\asus\\Desktop\\product\\protype\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\product\\protype\\src\\components\\submenu4_1.vue?vue&type=style&index=0&id=9661f512&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\product\\protype\\src\\components\\submenu4_1.vue","mtime":1625710546648},{"path":"C:\\Users\\asus\\Desktop\\product\\protype\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\protype\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\protype\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\protype\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\protype\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jaGFydHNfMSB7DQogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMjAwcHg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQ0KLmNoYXJ0c18yIHsNCiAgd2lkdGg6MTAwJTsNCiAgaGVpZ2h0OiAyMDBweDsKICBvdmVyZmxvdzogaGlkZGVuOwp9DQouY2hhcnRzXzMgew0KICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDIwMHB4OwogIG92ZXJmbG93OiBoaWRkZW47Cn0NCi5jaGFydHNfNCB7DQogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMjAwcHg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQo="},{"version":3,"sources":["submenu4_1.vue"],"names":[],"mappingsmfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"submenu4_1.vue","sourceRoot":"src/components","sourcesContent":["// 页面文件，如index.vue\n<template>\n  <div>\n    <!-- echarts -->\n    <div id=\"charts_1\" class=\"charts_1\"></div>\r\n\t<div id=\"charts_2\" class=\"charts_2\"></div>\r\n\t<div id=\"charts_3\" class=\"charts_3\"></div>\r\n\t<div id=\"charts_4\" class=\"charts_4\"></div>\n  </div>\n</template>\n<script>\n\nexport default {\n  data() {\n    return {}\n  },\n  mounted() {\n    this.initCharts_1()\r\n\tthis.initCharts_2()\r\n\tthis.initCharts_3()\r\n\tthis.initCharts_4()\n  },\n  methods: {\n    initCharts_1() {\n\tconst echarts = require('echarts/lib/echarts');\n\trequire('echarts/lib/component/title');\n\trequire('echarts/lib/component/tooltip');\n\trequire('echarts/lib/component/grid');\n\trequire('echarts/lib/chart/line');\n\tvar chartDom = document.getElementById('charts_1');\n\tvar myChart = echarts.init(chartDom);\n\tvar option;\n\nfunction randomData() {\n    now = new Date(+now + oneDay);\n    value = value + Math.random() * 21 - 10;\n    return {\n        name: now.toString(),\n        value: [\n            [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\n            Math.round(value)\n        ]\n    };\n}\n\nvar data = [];\nvar now = +new Date(1997, 9, 3);\nvar oneDay = 24 * 3600 * 1000;\nvar value = Math.random() * 1000;\nfor (var i = 0; i < 1000; i++) {\n    data.push(randomData());\n}\n\noption = {\n    title: {\n        text: '动态数据 + 时间坐标轴'\n    },\n    tooltip: {\n        trigger: 'axis',\n        formatter: function (params) {\n            params = params[0];\n            var date = new Date(params.name);\n            return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n        },\n        axisPointer: {\n            animation: false\n        }\n    },\n    xAxis: {\n        type: 'time',\n        splitLine: {\n            show: false\n        }\n    },\n    yAxis: {\n        type: 'value',\n        boundaryGap: [0, '100%'],\n        splitLine: {\n            show: false\n        }\n    },\n    series: [{\n        name: '模拟数据',\n        type: 'line',\n        showSymbol: false,\n        hoverAnimation: false,\n        data: data\n    }]\n};\n\nsetInterval(function () {\n\n    for (var i = 0; i < 5; i++) {\n        data.shift();\n        data.push(randomData());\n    }\n\n    myChart.setOption({\n        series: [{\n            data: data\n        }]\n    });\n}, 1000);\n\noption && myChart.setOption(option);\n    },\r\n\t//charts2\r\n\tinitCharts_2() {\r\n\t\tconst echarts = require('echarts/lib/echarts');\r\n\t\trequire('echarts/lib/component/title');\r\n\t\trequire('echarts/lib/component/tooltip');\r\n\t\trequire('echarts/lib/component/grid');\r\n\t\trequire('echarts/lib/chart/line');\r\n\t\tvar chartDom = document.getElementById('charts_2');\r\n\t\tvar myChart = echarts.init(chartDom);\r\n\t\tvar option;\r\n\t\r\n\tfunction randomData() {\r\n\t    now = new Date(+now + oneDay);\r\n\t    value = value + Math.random() * 21 - 10;\r\n\t    return {\r\n\t        name: now.toString(),\r\n\t        value: [\r\n\t            [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\r\n\t            Math.round(value)\r\n\t        ]\r\n\t    };\r\n\t}\r\n\t\r\n\tvar data = [];\r\n\tvar now = +new Date(1997, 9, 3);\r\n\tvar oneDay = 24 * 3600 * 1000;\r\n\tvar value = Math.random() * 1000;\r\n\tfor (var i = 0; i < 1000; i++) {\r\n\t    data.push(randomData());\r\n\t}\r\n\t\r\n\toption = {\r\n\t    title: {\r\n\t        text: '动态数据 + 时间坐标轴'\r\n\t    },\r\n\t    tooltip: {\r\n\t        trigger: 'axis',\r\n\t        formatter: function (params) {\r\n\t            params = params[0];\r\n\t            var date = new Date(params.name);\r\n\t            return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\r\n\t        },\r\n\t        axisPointer: {\r\n\t            animation: false\r\n\t        }\r\n\t    },\r\n\t    xAxis: {\r\n\t        type: 'time',\r\n\t        splitLine: {\r\n\t            show: false\r\n\t        }\r\n\t    },\r\n\t    yAxis: {\r\n\t        type: 'value',\r\n\t        boundaryGap: [0, '100%'],\r\n\t        splitLine: {\r\n\t            show: false\r\n\t        }\r\n\t    },\r\n\t    series: [{\r\n\t        name: '模拟数据',\r\n\t        type: 'line',\r\n\t        showSymbol: false,\r\n\t        hoverAnimation: false,\r\n\t        data: data\r\n\t    }]\r\n\t};\r\n\t\r\n\tsetInterval(function () {\r\n\t\r\n\t    for (var i = 0; i < 5; i++) {\r\n\t        data.shift();\r\n\t        data.push(randomData());\r\n\t    }\r\n\t\r\n\t    myChart.setOption({\r\n\t        series: [{\r\n\t            data: data\r\n\t        }]\r\n\t    });\r\n\t}, 1000);\r\n\t\r\n\toption && myChart.setOption(option);\r\n\t    },\r\n\t\t//charts_3\r\n\t\tinitCharts_3() {\r\n\t\t\tconst echarts = require('echarts/lib/echarts');\r\n\t\t\trequire('echarts/lib/component/title');\r\n\t\t\trequire('echarts/lib/component/tooltip');\r\n\t\t\trequire('echarts/lib/component/grid');\r\n\t\t\trequire('echarts/lib/chart/line');\r\n\t\t\tvar chartDom = document.getElementById('charts_3');\r\n\t\t\tvar myChart = echarts.init(chartDom);\r\n\t\t\tvar option;\r\n\t\t\r\n\t\tfunction randomData() {\r\n\t\t    now = new Date(+now + oneDay);\r\n\t\t    value = value + Math.random() * 21 - 10;\r\n\t\t    return {\r\n\t\t        name: now.toString(),\r\n\t\t        value: [\r\n\t\t            [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\r\n\t\t            Math.round(value)\r\n\t\t        ]\r\n\t\t    };\r\n\t\t}\r\n\t\t\r\n\t\tvar data = [];\r\n\t\tvar now = +new Date(1997, 9, 3);\r\n\t\tvar oneDay = 24 * 3600 * 1000;\r\n\t\tvar value = Math.random() * 1000;\r\n\t\tfor (var i = 0; i < 1000; i++) {\r\n\t\t    data.push(randomData());\r\n\t\t}\r\n\t\t\r\n\t\toption = {\r\n\t\t    title: {\r\n\t\t        text: '动态数据 + 时间坐标轴'\r\n\t\t    },\r\n\t\t    tooltip: {\r\n\t\t        trigger: 'axis',\r\n\t\t        formatter: function (params) {\r\n\t\t            params = params[0];\r\n\t\t            var date = new Date(params.name);\r\n\t\t            return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\r\n\t\t        },\r\n\t\t        axisPointer: {\r\n\t\t            animation: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    xAxis: {\r\n\t\t        type: 'time',\r\n\t\t        splitLine: {\r\n\t\t            show: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    yAxis: {\r\n\t\t        type: 'value',\r\n\t\t        boundaryGap: [0, '100%'],\r\n\t\t        splitLine: {\r\n\t\t            show: false\r\n\t\t        }\r\n\t\t    },\r\n\t\t    series: [{\r\n\t\t        name: '模拟数据',\r\n\t\t        type: 'line',\r\n\t\t        showSymbol: false,\r\n\t\t        hoverAnimation: false,\r\n\t\t        data: data\r\n\t\t    }]\r\n\t\t};\r\n\t\t\r\n\t\tsetInterval(function () {\r\n\t\t\r\n\t\t    for (var i = 0; i < 5; i++) {\r\n\t\t        data.shift();\r\n\t\t        data.push(randomData());\r\n\t\t    }\r\n\t\t\r\n\t\t    myChart.setOption({\r\n\t\t        series: [{\r\n\t\t            data: data\r\n\t\t        }]\r\n\t\t    });\r\n\t\t}, 1000);\r\n\t\t\r\n\t\toption && myChart.setOption(option);\r\n\t\t    },\r\n\t\t//charts_4\r\n\t\tconst echarts = require('echarts/lib/echarts');\r\n\t\trequire('echarts/lib/component/dataset');\r\n\t\trequire('echarts/lib/component/title');\r\n\t\trequire('echarts/lib/component/toolbox');\r\n\t\trequire('echarts/lib/component/tooltip');\r\n\t\trequire('echarts/lib/component/grid');\r\n\t\trequire('echarts/lib/component/visualMap');\r\n\t\trequire('echarts/lib/component/dataZoom');\r\n\t\trequire('echarts/lib/chart/candlestick');\r\n\t\trequire('echarts/lib/chart/bar');\r\n\t\t\r\n\t\tvar chartDom = document.getElementById('charts_4');\r\n\t\tvar myChart = echarts.init(chartDom);\r\n\t\tvar option;\r\n\t\t\r\n\t\tvar upColor = '#ec0000';\r\n\t\tvar upBorderColor = '#8A0000';\r\n\t\tvar downColor = '#00da3c';\r\n\t\tvar downBorderColor = '#008F28';\r\n\t\t\r\n\t\tvar dataCount = 2e5;\r\n\t\tvar data = generateOHLC(dataCount);\r\n\t\t\r\n\t\tvar option = {\r\n\t\t    dataset: {\r\n\t\t        source: data\r\n\t\t    },\r\n\t\t    title: {\r\n\t\t        text: 'Data Amount: ' + echarts.format.addCommas(dataCount)\r\n\t\t    },\r\n\t\t    tooltip: {\r\n\t\t        trigger: 'axis',\r\n\t\t        axisPointer: {\r\n\t\t            type: 'line'\r\n\t\t        }\r\n\t\t    },\r\n\t\t    toolbox: {\r\n\t\t        feature: {\r\n\t\t            dataZoom: {\r\n\t\t                yAxisIndex: false\r\n\t\t            },\r\n\t\t        }\r\n\t\t    },\r\n\t\t    grid: [\r\n\t\t        {\r\n\t\t            left: '10%',\r\n\t\t            right: '10%',\r\n\t\t            bottom: 200\r\n\t\t        },\r\n\t\t        {\r\n\t\t            left: '10%',\r\n\t\t            right: '10%',\r\n\t\t            height: 80,\r\n\t\t            bottom: 80\r\n\t\t        }\r\n\t\t    ],\r\n\t\t    xAxis: [\r\n\t\t        {\r\n\t\t            type: 'category',\r\n\t\t            scale: true,\r\n\t\t            boundaryGap: false,\r\n\t\t            // inverse: true,\r\n\t\t            axisLine: {onZero: false},\r\n\t\t            splitLine: {show: false},\r\n\t\t            splitNumber: 20,\r\n\t\t            min: 'dataMin',\r\n\t\t            max: 'dataMax'\r\n\t\t        },\r\n\t\t        {\r\n\t\t            type: 'category',\r\n\t\t            gridIndex: 1,\r\n\t\t            scale: true,\r\n\t\t            boundaryGap: false,\r\n\t\t            axisLine: {onZero: false},\r\n\t\t            axisTick: {show: false},\r\n\t\t            splitLine: {show: false},\r\n\t\t            axisLabel: {show: false},\r\n\t\t            splitNumber: 20,\r\n\t\t            min: 'dataMin',\r\n\t\t            max: 'dataMax'\r\n\t\t        }\r\n\t\t    ],\r\n\t\t    yAxis: [\r\n\t\t        {\r\n\t\t            scale: true,\r\n\t\t            splitArea: {\r\n\t\t                show: true\r\n\t\t            }\r\n\t\t        },\r\n\t\t        {\r\n\t\t            scale: true,\r\n\t\t            gridIndex: 1,\r\n\t\t            splitNumber: 2,\r\n\t\t            axisLabel: {show: false},\r\n\t\t            axisLine: {show: false},\r\n\t\t            axisTick: {show: false},\r\n\t\t            splitLine: {show: false}\r\n\t\t        }\r\n\t\t    ],\r\n\t\t    dataZoom: [\r\n\t\t        {\r\n\t\t            type: 'inside',\r\n\t\t            xAxisIndex: [0, 1],\r\n\t\t            start: 10,\r\n\t\t            end: 100\r\n\t\t        },\r\n\t\t        {\r\n\t\t            show: true,\r\n\t\t            xAxisIndex: [0, 1],\r\n\t\t            type: 'slider',\r\n\t\t            bottom: 10,\r\n\t\t            start: 10,\r\n\t\t            end: 100\r\n\t\t        }\r\n\t\t    ],\r\n\t\t    visualMap: {\r\n\t\t        show: false,\r\n\t\t        seriesIndex: 1,\r\n\t\t        dimension: 6,\r\n\t\t        pieces: [{\r\n\t\t            value: 1,\r\n\t\t            color: upColor\r\n\t\t        }, {\r\n\t\t            value: -1,\r\n\t\t            color: downColor\r\n\t\t        }]\r\n\t\t    },\r\n\t\t    series: [\r\n\t\t        {\r\n\t\t            type: 'candlestick',\r\n\t\t            itemStyle: {\r\n\t\t                color: upColor,\r\n\t\t                color0: downColor,\r\n\t\t                borderColor: upBorderColor,\r\n\t\t                borderColor0: downBorderColor\r\n\t\t            },\r\n\t\t            encode: {\r\n\t\t                x: 0,\r\n\t\t                y: [1, 4, 3, 2]\r\n\t\t            }\r\n\t\t        },\r\n\t\t        {\r\n\t\t            name: 'Volumn',\r\n\t\t            type: 'bar',\r\n\t\t            xAxisIndex: 1,\r\n\t\t            yAxisIndex: 1,\r\n\t\t            itemStyle: {\r\n\t\t                color: '#7fbe9e'\r\n\t\t            },\r\n\t\t            large: true,\r\n\t\t            encode: {\r\n\t\t                x: 0,\r\n\t\t                y: 5\r\n\t\t            }\r\n\t\t        }\r\n\t\t    ]\r\n\t\t};\r\n\t\t\r\n\t\tfunction generateOHLC(count) {\r\n\t\t    var data = [];\r\n\t\t\r\n\t\t    var xValue = +new Date(2011, 0, 1);\r\n\t\t    var minute = 60 * 1000;\r\n\t\t    var baseValue = Math.random() * 12000;\r\n\t\t    var boxVals = new Array(4);\r\n\t\t    var dayRange = 12;\r\n\t\t\r\n\t\t    for (var i = 0; i < count; i++) {\r\n\t\t        baseValue = baseValue + Math.random() * 20 - 10;\r\n\t\t\r\n\t\t        for (var j = 0; j < 4; j++) {\r\n\t\t            boxVals[j] = (Math.random() - 0.5) * dayRange + baseValue;\r\n\t\t        }\r\n\t\t        boxVals.sort();\r\n\t\t\r\n\t\t        var openIdx = Math.round(Math.random() * 3);\r\n\t\t        var closeIdx = Math.round(Math.random() * 2);\r\n\t\t        if (closeIdx === openIdx) {\r\n\t\t            closeIdx++;\r\n\t\t        }\r\n\t\t        var volumn = boxVals[3] * (1000 + Math.random() * 500);\r\n\t\t\r\n\t\t        // ['open', 'close', 'lowest', 'highest', 'volumn']\r\n\t\t        // [1, 4, 3, 2]\r\n\t\t        data[i] = [\r\n\t\t            echarts.format.formatTime('yyyy-MM-dd\\nhh:mm:ss', xValue += minute),\r\n\t\t            +boxVals[openIdx].toFixed(2), // open\r\n\t\t            +boxVals[3].toFixed(2), // highest\r\n\t\t            +boxVals[0].toFixed(2), // lowest\r\n\t\t            +boxVals[closeIdx].toFixed(2),  // close\r\n\t\t            volumn.toFixed(0),\r\n\t\t            getSign(data, i, +boxVals[openIdx], +boxVals[closeIdx], 4) // sign\r\n\t\t        ];\r\n\t\t    }\r\n\t\t\r\n\t\t    return data;\r\n\t\t\r\n\t\t    function getSign(data, dataIndex, openVal, closeVal, closeDimIdx) {\r\n\t\t        var sign;\r\n\t\t        if (openVal > closeVal) {\r\n\t\t            sign = -1;\r\n\t\t        }\r\n\t\t        else if (openVal < closeVal) {\r\n\t\t            sign = 1;\r\n\t\t        }\r\n\t\t        else {\r\n\t\t            sign = dataIndex > 0\r\n\t\t                // If close === open, compare with close of last record\r\n\t\t                ? (data[dataIndex - 1][closeDimIdx] <= closeVal ? 1 : -1)\r\n\t\t                // No record of previous, set to be positive\r\n\t\t                : 1;\r\n\t\t        }\r\n\t\t\r\n\t\t        return sign;\r\n\t\t    }\r\n\t\t}\r\n\t\t\r\n\t\toption && myChart.setOption(option);\r\n\n  },\n}\r\n\n</script>\n<style scoped>\n.charts_1 {\r\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n}\r\n.charts_2 {\r\n  width:100%;\r\n  height: 200px;\n  overflow: hidden;\n}\r\n.charts_3 {\r\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n}\r\n.charts_4 {\r\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n}\n</style>"]}]}