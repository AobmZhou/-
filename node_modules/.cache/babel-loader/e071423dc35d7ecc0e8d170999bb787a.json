{"remainingRequest":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\product\\backup\\src\\Analysis\\TrendAnalysisPointTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\src\\Analysis\\TrendAnalysisPointTree.vue","mtime":1626657240593},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TrendAnalysisPointTree.vue"],"names":[],"mappings":"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","sourcesContent":["\n\n<template>\n  <div>\n    <el-form-item label=\"类型选择:\">\n      <el-select v-model=\"treeSelect\" placeholder=\"请选择类型\" @change=\"treeChange\">\n        <el-option label=\"多通道单特征值\" value=\"0\"></el-option>\n        <el-option label=\"单通道多特征值\" value=\"1\"></el-option>\n      </el-select>\n    </el-form-item>\n    <div class=\"trend-analysis-point-tree\" v-show=\"treeSelect == 0\">\n      <el-tree :data=\"pointTree1\" show-checkbox node-key=\"id\" :default-expanded-keys=\"['振动-位移']\"\n               @check=\"pointTree1Checked\"\n               accordion ref=\"pointFeatureTree1\" :render-content=\"renderContent\"></el-tree>\n    </div>\n    <div class=\"trend-analysis-point-tree\" v-show=\"treeSelect == 1\">\n      <el-tree :data=\"pointTree2\" accordion show-checkbox node-key=\"id\" :default-expanded-keys=\"['振动-位移']\"\n               @check=\"pointTree2Checked\" ref=\"pointFeatureTree2\"></el-tree>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: \"TrendAnalysisPointTree\",\n    data() {\n      return {\n        treeSelect: \"0\",\n        featureSelect: [0, 0, 0],\n        \n        points: [],\n        pointTree1: [],\n        pointTree2: [],\n        cflag: 0,\n        lastChoosePoints: [],\n        defaultProps: {\n          children: 'children',\n          label: 'label',\n          disabled: function (data, node) {\n            if (node.store.getCheckedKeys(true).length >= 8) {\n              return node.store.getCheckedKeys(true).indexOf(data.id) < 0\n            }\n          }\n        },\n      };\n    },\n\n    mounted() {\n      if (this.nodeData[this.equid] != undefined) {\n        this.setPointTree(this.equid);\n      }\n    },\n\n    computed: {\n      nodeData() {\n        return this.$store.state.nodeData;\n      },\n      equid() {\n        return this.$store.state.equid;\n      },\n      nodeNum() {\n        return this.$store.state.nodeNum;\n      },\n      equipmentDetail() {\n        return this.$store.state.equipmentDetail;\n      }\n    },\n\n    watch: {\n      equid: {\n        handler(newEquid) {\n          // console.log(newEquid)\n          this.$nextTick(() => this.setPointTree(newEquid));\n\n          // console.log(this.pointTree1);\n        }\n      },\n      nodeNum: {\n        handler() {\n          this.setPointTree(this.equid);\n          // console.log(this.pointTree1);\n        }\n      }\n    },\n\n    methods: {\n      setPointTree(equid) {\n        let that = this;\n        let newEquid = equid;\n        // console.log(this.equipmentDetail)\n        setTimeout(function () {\n\n          let _data = that.equipmentDetail[newEquid];\n          // console.log(_data);\n          if (_data == undefined)\n            return;\n          that.points = [];\n          for (const i in _data) {\n            if (_data[i].dataType == 1 || _data[i].dataType == 2 || _data[i].dataType == 0) {\n              that.points.push(_data[i]);\n            }\n          }\n          // console.log(that.pointTree1,'-------iii---------')\n          that.setPointTree1();\n          that.setPointTree2();\n          that.$nextTick(() => {\n            for (const i in that.pointTree1) {\n              if (that.pointTree1[i].children.length > 1) {\n                that.$refs.pointFeatureTree1.setCheckedKeys([that.pointTree1[i].children[0].id, that.pointTree1[i].children[1].id]);\n                that.lastChoosePoints = [that.pointTree1[i].children[1]];\n                break;\n              }\n            }\n            for (const i in that.pointTree2) {\n              if (that.pointTree2[i].children.length > 0) {\n                // console.log(i)\n                let tempList = [];\n                this.cflag = that.pointTree2[i].children[0].pid;\n\n                for (const j in that.pointTree2[i].children[0].children) {\n                  tempList.push(that.pointTree2[i].children[0].children[j].id);\n                  if (j > 5) {\n                    break;\n                  }\n                }\n                that.$refs.pointFeatureTree2.setCheckedKeys(tempList);\n\n                break;\n              }\n            }\n            if (that.treeSelect == \"0\") {\n              that.pointTree1Checked();\n            } else {\n              that.pointTree2Checked();\n            }\n            that.$emit('firstdo');\n\n          });\n\n        }, 1000);\n      },\n\n      setPointTree1() {\n        this.pointTree1 = [];\n        // console.log('-------iii---------')\n        let tmpDisplacement = {\n          id: '振动-位移',\n          label: '振动-位移',\n          children: []\n        };\n        let tmpAcceleration = {\n          id: '振动-加速度',\n          label: '振动-加速度',\n          children: []\n        };\n        let tmpSpeed = {\n          id: '振动-速度',\n          label: '振动-速度',\n          children: []\n        };\n        let tmp2 = {\n          id: '特征-位移',\n          label: '特征',\n          disabled: true,\n          type: 113,\n        };\n        let tmp3 = {\n          id: '特征-加速度',\n          label: '特征',\n          disabled: true,\n          type: 113,\n        };\n        let tmp4 = {\n          id: '特征-速度',\n          label: '特征',\n          disabled: true,\n          type: 113,\n        };\n        tmpDisplacement['children'].push(tmp2);\n        tmpAcceleration['children'].push(tmp3);\n        tmpSpeed['children'].push(tmp4);\n        // console.log('-------iii---------')\n        let that = this;\n        let flag1 = 0, flag2 = 0, flag3 = 0;\n        for (const i in this.points) {\n          let tmp1 = {\n            id: that.points[i].pointId,\n            label: that.points[i].pointName,\n            pointUuid: that.points[i].pointUuid,\n            dataType: that.points[i].dataType,\n          };\n          if (that.points[i].dataType == 0) {\n            tmpDisplacement['children'].push(tmp1);\n            if (flag1 == 0) {\n              tmpDisplacement['children'][0].type = that.points[i].type;\n              flag1 = 1;\n            }\n          } else if (that.points[i].dataType == 1) {\n            tmpAcceleration['children'].push(tmp1);\n            if (flag2 == 0) {\n              tmpAcceleration['children'][0].type = that.points[i].type;\n              flag2 = 1;\n            }\n          } else if (that.points[i].dataType == 2) {\n            tmpSpeed['children'].push(tmp1);\n            if (flag3 == 0) {\n              tmpSpeed['children'][0].type = that.points[i].type;\n              flag3 = 1;\n            }\n          }\n        }\n        // console.log('-------iii---------')\n        if (tmpDisplacement.children.length > 1)\n          this.pointTree1.push(tmpDisplacement);\n        if (tmpAcceleration.children.length > 1)\n          this.pointTree1.push(tmpAcceleration);\n        if (tmpSpeed.children.length > 1)\n          this.pointTree1.push(tmpSpeed);\n      },\n\n      setPointTree2() {\n        this.pointTree2 = [];\n        let tmpDisplacement = {\n          id: '振动-位移',\n          label: '振动-位移',\n          xid: '振动-位移',\n          disabled: true,\n          children: []\n        };\n        let tmpAcceleration = {\n          id: '振动-加速度',\n          label: '振动-加速度',\n          xid: '振动-加速度',\n          disabled: true,\n          children: []\n        };\n        let tmpSpeed = {\n          id: '振动-速度',\n          label: '振动-速度',\n          xid: '振动-速度',\n          disabled: true,\n          children: []\n        };\n        for (const i in this.points) {\n          let tmp1 = {\n            id: this.points[i].pointId,\n            pointUuid: this.points[i].pointUuid,\n            label: this.points[i].pointName,\n            xid: this.points[i].pointId,\n            children: [],\n            pid: this.points[i].pointId,\n          };\n          let type = this.points[i].type;\n          if (type != 113 && type != 114) {\n            // console.log(this.points[i].pointName)\n          }\n          for (const j in this.$store.state.features[type]) {\n            let tmp2 = {\n              id: tmp1['id'] + j.toString(),\n              pointUuid: tmp1['pointUuid'],\n              label: this.$store.state.features[type][j].label,\n              xid: j.toString(),\n              pid: tmp1['id']\n            };\n            tmp1['children'].push(tmp2);\n          }\n          if (this.points[i].dataType == 0) {\n            tmpDisplacement['children'].push(tmp1);\n          } else if (this.points[i].dataType == 1) {\n            tmpAcceleration['children'].push(tmp1);\n          } else if (this.points[i].dataType == 2) {\n            tmpSpeed['children'].push(tmp1);\n          }\n        }\n        if (tmpDisplacement.children.length > 0)\n          this.pointTree2.push(tmpDisplacement);\n        if (tmpAcceleration.children.length > 0)\n          this.pointTree2.push(tmpAcceleration);\n        if (tmpSpeed.children.length > 0)\n          this.pointTree2.push(tmpSpeed);\n        // console.log(this.pointTree2);\n      },\n\n      pointTree1Checked(data) {\n        let checkedNodes = this.$refs.pointFeatureTree1.getCheckedNodes() || [];\n        if (data) {\n          console.log('pointTree1', this.pointTree1);\n          console.log('mydata', data);\n          let NowChose = [];\n          if (data.id == '振动-位移') {\n            // console.log('点击全选');\n            for(var item = 0; item < this.pointTree1.length; item++) {\n              if(this.pointTree1[item].id == '振动-位移') {\n                  for (var i = 0; i < this.pointTree1[item].children.length && i < 9; i++) {//本来是最多选8个测点，由于特征的存在，故这里为9\n                      NowChose.push(this.pointTree1[item].children[i].id);\n                  }\n                  break;\n              }\n            }\n            \n            this.$refs.pointFeatureTree1.setCheckedKeys(NowChose);\n          } else if (data.id == '振动-加速度') {\n            // console.log('点击全选');\n            for(var item = 0; item < this.pointTree1.length; item++) {\n              if(this.pointTree1[item].id == '振动-加速度') {\n                  for (var i = 0; i < this.pointTree1[item].children.length && i < 9; i++) {//本来是最多选8个测点，由于特征的存在，故这里为9\n                      NowChose.push(this.pointTree1[item].children[i].id);\n                  }\n                  break;\n              }\n            }\n            // for (var i = 0; i < this.pointTree1[1].children.length && i < 9; i++) {\n            //   NowChose.push(this.pointTree1[1].children[i].id);\n            // }\n            this.$refs.pointFeatureTree1.setCheckedKeys(NowChose);\n          } else if (data.id == '振动-速度') {\n            for(var item = 0; item < this.pointTree1.length; item++) {\n              if(this.pointTree1[item].id == '振动-速度') {\n                  for (var i = 0; i < this.pointTree1[item].children.length && i < 9; i++) {//本来是最多选8个测点，由于特征的存在，故这里为9\n                      NowChose.push(this.pointTree1[item].children[i].id);\n                  }\n                  break;\n              }\n            }\n            // console.log('点击全选');\n            // for (var i = 0; i < this.pointTree1[2].children.length && i < 9; i++) {\n            //   NowChose.push(this.pointTree1[2].children[i].id);\n            // }\n            this.$refs.pointFeatureTree1.setCheckedKeys(NowChose);\n          }  else if (this.lastChoosePoints.length == 0 || data.dataType != this.lastChoosePoints[0].dataType) {\n            // console.log('单选');\n            \n            var tmpstring  = '';\n            if(data.dataType == 0) {\n              tmpstring = '振动-位移';\n            } else if(data.dataType == 1) {\n              tmpstring = '振动-加速度';\n            } else if(data.dataType == 2) {\n              tmpstring = '振动-速度';\n            }\n            for(var item = 0; item < this.pointTree1.length; item++) {\n              if(tmpstring == this.pointTree1[item].id) {\n                NowChose = [this.pointTree1[item].children[0].id, data.id];\n                // console.log('单选', this.pointTree1[item].children[0].id, data.id);\n                break;\n              }\n            }\n            \n            // NowChose = [this.pointTree1[data.dataType].children[0].id, data.id];\n            this.$refs.pointFeatureTree1.setCheckedKeys(NowChose);\n          }\n          checkedNodes = this.$refs.pointFeatureTree1.getCheckedNodes();\n          console.log('checkedNodes', checkedNodes);\n          this.lastChoosePoints = [];\n          for (const i in checkedNodes) {\n            if (checkedNodes[i].id != '振动-位移' && checkedNodes[i].id != '振动-加速度' &&\n              checkedNodes[i].id != '振动-速度' && checkedNodes[i].id.indexOf('特征') == -1) {\n              this.lastChoosePoints.push(checkedNodes[i])\n            }\n          }\n        }\n\n        let returnTreeData = {};\n        returnTreeData['treeSelect'] = this.treeSelect;\n        returnTreeData['checkedNodes'] = this.$refs.pointFeatureTree1.getHalfCheckedNodes();\n        checkedNodes = checkedNodes.filter((item) => {\n          return item.id.indexOf('特征') == -1;\n        });\n        for (let i = 0; i < checkedNodes.length; i++) {\n          if (checkedNodes[i].label == \"特征\")\n            continue;\n          returnTreeData['featureSelect'] = this.featureSelect[checkedNodes[i].dataType]; //最好要改\n          returnTreeData['checkedNodes'].push(checkedNodes[i]);\n        }\n        if (returnTreeData['checkedNodes'].length > 1) {\n          returnTreeData.featureSelect = this.featureSelect[returnTreeData['checkedNodes'][1].dataType];\n        }\n\n        console.log(\"getPointFeatureTree2Data\", returnTreeData);\n        this.$emit('getPointFeatureTree2Data', returnTreeData);\n      },\n\n      pointTree2Checked(data) {\n\n        let checkedNodes = this.$refs.pointFeatureTree2.getCheckedNodes();\n        let halfCheckedNodes = this.$refs.pointFeatureTree2.getHalfCheckedNodes();\n        console.log(checkedNodes, 'daxin')\n        // if (halfCheckedNodes.length > 2 || checkedNodes.length > 7) {\n        //   this.$refs.pointFeatureTree2.setCheckedNodes([data]);\n        // }\n        if (data != undefined) {\n          var newc = []\n          var flag = -1;\n          for (var i = 0; i < checkedNodes.length; ++i) {\n            if (checkedNodes[i].id == data.id) {\n              flag = i;\n              break;\n            }\n          }\n          if (flag != -1) {\n            if (data.pid != this.cflag) {\n              newc.push(data.id);\n              this.cflag = data.pid;\n              this.$refs.pointFeatureTree2.setCheckedKeys(newc)\n            }\n          }\n        }\n        checkedNodes = this.$refs.pointFeatureTree2.getCheckedNodes();\n        halfCheckedNodes = this.$refs.pointFeatureTree2.getHalfCheckedNodes();\n        var cc = [];\n        let returnTreeData = {};\n        console.log(\"打印奇怪的东西\",checkedNodes);\n        if (checkedNodes.length > 0) {\n          if (checkedNodes[0].id.indexOf('振动') != -1) {\n            for (var i = 1; i < checkedNodes.length; ++i) {\n              cc.push(checkedNodes[i])\n            }\n            returnTreeData['type'] = checkedNodes[0].label;\n            checkedNodes = cc;\n\n          }\n        }\n\n        returnTreeData['treeSelect'] = this.treeSelect;\n        returnTreeData['checkedNodes'] = [];\n        for (let i = 0; i < halfCheckedNodes.length; i++) {\n          if (halfCheckedNodes[i].id.indexOf(\"振动\") != -1) {\n            returnTreeData['type'] = halfCheckedNodes[i].label;\n            continue;\n          }\n          returnTreeData['checkedNodes'].push(halfCheckedNodes[i]);\n          returnTreeData['checkedNodes'][0].type = returnTreeData['type'];\n        }\n        for (let i = 0; i < checkedNodes.length; i++) {\n          if (checkedNodes[i].id.indexOf(\"振动\") != -1) {\n            returnTreeData['type'] = checkedNodes[i].label;\n            continue;\n          }\n          returnTreeData['checkedNodes'].push(checkedNodes[i]);\n          returnTreeData['checkedNodes'][0].type = returnTreeData['type'];\n        }\n        // console.log(returnTreeData);\n        this.$emit('getPointFeatureTree2Data', returnTreeData);\n      },\n\n      treeChange(value) {\n        this.$nextTick(() => {\n          if (value == \"0\") {\n            this.pointTree1Checked();\n          } else if (value == \"1\") {\n            this.pointTree2Checked();\n          }\n        });\n      },\n\n      renderContent(h, {node, data, store}) {\n        if (node.label == '特征') {\n          // console.log(data.type)\n          let dataType = 0;\n          let tempTypeSelect = this.$store.state.features[data.type];\n          // let tempTypeSelect = [];\n          // console.log(node)\n          if (node.data.id == '特征-位移') {\n            dataType = 0;\n          } else if (node.data.id == '特征-加速度') {\n            dataType = 1;\n          } else if (node.data.id == '特征-速度') {\n            dataType = 2;\n          }\n          return h(\n            \"div\", [\n              h(\n                \"span\", {\n                  style: {\n                    fontSize: '13px',\n                    color: '#ffffff',\n                    marginRight: '5px'\n                  },\n                }, \"特征\"\n              ), h(\n                \"el-select\", {\n                  class: \"el-select--mini el-input--mini\",\n                  style: {\n                    width: '55%'\n                  },\n                  on: {\n                    input: (value) => {\n                      this.$set(this.featureSelect, dataType, value);\n                      this.pointTree1Checked();\n                    }\n                  },\n                  props: {\n                    value: this.featureSelect[dataType]\n                  }\n                }, [\n                  tempTypeSelect.map(item => {\n                    return h(\n                      \"el-option\", {\n                        style: {\n                          lineHeight: '18px',\n                          fontSize: '13px',\n                          height: '18px'\n                        },\n                        props: {\n                          value: item.id,\n                          label: item.label\n                        }\n                      }\n                    );\n                  })\n                ]\n              )\n            ]\n          );\n        } else {\n          return h(\n            \"span\", {\n              style: {\n                fontSize: '13px',\n                color: '#ffffff'\n              },\n            }, node.label\n          );\n        }\n      }\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  .trend-analysis-point-tree {\n    height: 250px;\n    overflow: auto;\n    background-color: #3C455B;\n    margin-bottom: 7px;\n\n    .el-select {\n      width: 70%;\n    }\n\n    .el-tree {\n      background: #3C455B;\n\n      .el-input {\n        font-size: 12px;\n      }\n\n      .el-tree-node > .el-tree-node__content {\n        background-color: #3C455B !important;\n      }\n\n      .el-tree-node.is-current > .el-tree-node__content {\n        background-color: #3C455B !important;\n      }\n\n      .el-tree-node__content {\n        height: 60%;\n      }\n\n      .el-tree-node__content > .el-tree-node__expand-icon {\n        padding: 2px;\n      }\n\n      .el-checkbox {\n        font-size: 13px;\n      }\n\n      .el-tree-node__label {\n        font-size: 13px;\n        color: white;\n      }\n\n      .el-checkbox__input.is-disabled.is-indeterminate .el-checkbox__inner {\n        background-color: #409EFF;\n        border-color: #409EFF;\n      }\n    }\n\n  }\n</style>\n"],"sourceRoot":"src/Analysis"}]}