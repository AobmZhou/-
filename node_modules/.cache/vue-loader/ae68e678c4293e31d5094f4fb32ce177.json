{"remainingRequest":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\product\\backup\\src\\Analysis\\TrendAnalysisPointTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\src\\Analysis\\TrendAnalysisPointTree.vue","mtime":1626657240593},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\product\\backup\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVHJlbmRBbmFseXNpc1BvaW50VHJlZSIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRyZWVTZWxlY3Q6ICIwIiwKICAgICAgZmVhdHVyZVNlbGVjdDogWzAsIDAsIDBdLAogICAgICAKICAgICAgcG9pbnRzOiBbXSwKICAgICAgcG9pbnRUcmVlMTogW10sCiAgICAgIHBvaW50VHJlZTI6IFtdLAogICAgICBjZmxhZzogMCwKICAgICAgbGFzdENob29zZVBvaW50czogW10sCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGxhYmVsOiAnbGFiZWwnLAogICAgICAgIGRpc2FibGVkOiBmdW5jdGlvbiAoZGF0YSwgbm9kZSkgewogICAgICAgICAgaWYgKG5vZGUuc3RvcmUuZ2V0Q2hlY2tlZEtleXModHJ1ZSkubGVuZ3RoID49IDgpIHsKICAgICAgICAgICAgcmV0dXJuIG5vZGUuc3RvcmUuZ2V0Q2hlY2tlZEtleXModHJ1ZSkuaW5kZXhPZihkYXRhLmlkKSA8IDAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICB9OwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5ub2RlRGF0YVt0aGlzLmVxdWlkXSAhPSB1bmRlZmluZWQpIHsKICAgICAgdGhpcy5zZXRQb2ludFRyZWUodGhpcy5lcXVpZCk7CiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIG5vZGVEYXRhKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubm9kZURhdGE7CiAgICB9LAogICAgZXF1aWQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5lcXVpZDsKICAgIH0sCiAgICBub2RlTnVtKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubm9kZU51bTsKICAgIH0sCiAgICBlcXVpcG1lbnREZXRhaWwoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5lcXVpcG1lbnREZXRhaWw7CiAgICB9CiAgfSwKCiAgd2F0Y2g6IHsKICAgIGVxdWlkOiB7CiAgICAgIGhhbmRsZXIobmV3RXF1aWQpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZyhuZXdFcXVpZCkKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB0aGlzLnNldFBvaW50VHJlZShuZXdFcXVpZCkpOwoKICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnBvaW50VHJlZTEpOwogICAgICB9CiAgICB9LAogICAgbm9kZU51bTogewogICAgICBoYW5kbGVyKCkgewogICAgICAgIHRoaXMuc2V0UG9pbnRUcmVlKHRoaXMuZXF1aWQpOwogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucG9pbnRUcmVlMSk7CiAgICAgIH0KICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBzZXRQb2ludFRyZWUoZXF1aWQpIHsKICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICBsZXQgbmV3RXF1aWQgPSBlcXVpZDsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy5lcXVpcG1lbnREZXRhaWwpCiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewoKICAgICAgICBsZXQgX2RhdGEgPSB0aGF0LmVxdWlwbWVudERldGFpbFtuZXdFcXVpZF07CiAgICAgICAgLy8gY29uc29sZS5sb2coX2RhdGEpOwogICAgICAgIGlmIChfZGF0YSA9PSB1bmRlZmluZWQpCiAgICAgICAgICByZXR1cm47CiAgICAgICAgdGhhdC5wb2ludHMgPSBbXTsKICAgICAgICBmb3IgKGNvbnN0IGkgaW4gX2RhdGEpIHsKICAgICAgICAgIGlmIChfZGF0YVtpXS5kYXRhVHlwZSA9PSAxIHx8IF9kYXRhW2ldLmRhdGFUeXBlID09IDIgfHwgX2RhdGFbaV0uZGF0YVR5cGUgPT0gMCkgewogICAgICAgICAgICB0aGF0LnBvaW50cy5wdXNoKF9kYXRhW2ldKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gY29uc29sZS5sb2codGhhdC5wb2ludFRyZWUxLCctLS0tLS0taWlpLS0tLS0tLS0tJykKICAgICAgICB0aGF0LnNldFBvaW50VHJlZTEoKTsKICAgICAgICB0aGF0LnNldFBvaW50VHJlZTIoKTsKICAgICAgICB0aGF0LiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICBmb3IgKGNvbnN0IGkgaW4gdGhhdC5wb2ludFRyZWUxKSB7CiAgICAgICAgICAgIGlmICh0aGF0LnBvaW50VHJlZTFbaV0uY2hpbGRyZW4ubGVuZ3RoID4gMSkgewogICAgICAgICAgICAgIHRoYXQuJHJlZnMucG9pbnRGZWF0dXJlVHJlZTEuc2V0Q2hlY2tlZEtleXMoW3RoYXQucG9pbnRUcmVlMVtpXS5jaGlsZHJlblswXS5pZCwgdGhhdC5wb2ludFRyZWUxW2ldLmNoaWxkcmVuWzFdLmlkXSk7CiAgICAgICAgICAgICAgdGhhdC5sYXN0Q2hvb3NlUG9pbnRzID0gW3RoYXQucG9pbnRUcmVlMVtpXS5jaGlsZHJlblsxXV07CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGZvciAoY29uc3QgaSBpbiB0aGF0LnBvaW50VHJlZTIpIHsKICAgICAgICAgICAgaWYgKHRoYXQucG9pbnRUcmVlMltpXS5jaGlsZHJlbi5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coaSkKICAgICAgICAgICAgICBsZXQgdGVtcExpc3QgPSBbXTsKICAgICAgICAgICAgICB0aGlzLmNmbGFnID0gdGhhdC5wb2ludFRyZWUyW2ldLmNoaWxkcmVuWzBdLnBpZDsKCiAgICAgICAgICAgICAgZm9yIChjb25zdCBqIGluIHRoYXQucG9pbnRUcmVlMltpXS5jaGlsZHJlblswXS5jaGlsZHJlbikgewogICAgICAgICAgICAgICAgdGVtcExpc3QucHVzaCh0aGF0LnBvaW50VHJlZTJbaV0uY2hpbGRyZW5bMF0uY2hpbGRyZW5bal0uaWQpOwogICAgICAgICAgICAgICAgaWYgKGogPiA1KSB7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB0aGF0LiRyZWZzLnBvaW50RmVhdHVyZVRyZWUyLnNldENoZWNrZWRLZXlzKHRlbXBMaXN0KTsKCiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGlmICh0aGF0LnRyZWVTZWxlY3QgPT0gIjAiKSB7CiAgICAgICAgICAgIHRoYXQucG9pbnRUcmVlMUNoZWNrZWQoKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoYXQucG9pbnRUcmVlMkNoZWNrZWQoKTsKICAgICAgICAgIH0KICAgICAgICAgIHRoYXQuJGVtaXQoJ2ZpcnN0ZG8nKTsKCiAgICAgICAgfSk7CgogICAgICB9LCAxMDAwKTsKICAgIH0sCgogICAgc2V0UG9pbnRUcmVlMSgpIHsKICAgICAgdGhpcy5wb2ludFRyZWUxID0gW107CiAgICAgIC8vIGNvbnNvbGUubG9nKCctLS0tLS0taWlpLS0tLS0tLS0tJykKICAgICAgbGV0IHRtcERpc3BsYWNlbWVudCA9IHsKICAgICAgICBpZDogJ+aMr+WKqC3kvY3np7snLAogICAgICAgIGxhYmVsOiAn5oyv5YqoLeS9jeenuycsCiAgICAgICAgY2hpbGRyZW46IFtdCiAgICAgIH07CiAgICAgIGxldCB0bXBBY2NlbGVyYXRpb24gPSB7CiAgICAgICAgaWQ6ICfmjK/liqgt5Yqg6YCf5bqmJywKICAgICAgICBsYWJlbDogJ+aMr+WKqC3liqDpgJ/luqYnLAogICAgICAgIGNoaWxkcmVuOiBbXQogICAgICB9OwogICAgICBsZXQgdG1wU3BlZWQgPSB7CiAgICAgICAgaWQ6ICfmjK/liqgt6YCf5bqmJywKICAgICAgICBsYWJlbDogJ+aMr+WKqC3pgJ/luqYnLAogICAgICAgIGNoaWxkcmVuOiBbXQogICAgICB9OwogICAgICBsZXQgdG1wMiA9IHsKICAgICAgICBpZDogJ+eJueW+gS3kvY3np7snLAogICAgICAgIGxhYmVsOiAn54m55b6BJywKICAgICAgICBkaXNhYmxlZDogdHJ1ZSwKICAgICAgICB0eXBlOiAxMTMsCiAgICAgIH07CiAgICAgIGxldCB0bXAzID0gewogICAgICAgIGlkOiAn54m55b6BLeWKoOmAn+W6picsCiAgICAgICAgbGFiZWw6ICfnibnlvoEnLAogICAgICAgIGRpc2FibGVkOiB0cnVlLAogICAgICAgIHR5cGU6IDExMywKICAgICAgfTsKICAgICAgbGV0IHRtcDQgPSB7CiAgICAgICAgaWQ6ICfnibnlvoEt6YCf5bqmJywKICAgICAgICBsYWJlbDogJ+eJueW+gScsCiAgICAgICAgZGlzYWJsZWQ6IHRydWUsCiAgICAgICAgdHlwZTogMTEzLAogICAgICB9OwogICAgICB0bXBEaXNwbGFjZW1lbnRbJ2NoaWxkcmVuJ10ucHVzaCh0bXAyKTsKICAgICAgdG1wQWNjZWxlcmF0aW9uWydjaGlsZHJlbiddLnB1c2godG1wMyk7CiAgICAgIHRtcFNwZWVkWydjaGlsZHJlbiddLnB1c2godG1wNCk7CiAgICAgIC8vIGNvbnNvbGUubG9nKCctLS0tLS0taWlpLS0tLS0tLS0tJykKICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICBsZXQgZmxhZzEgPSAwLCBmbGFnMiA9IDAsIGZsYWczID0gMDsKICAgICAgZm9yIChjb25zdCBpIGluIHRoaXMucG9pbnRzKSB7CiAgICAgICAgbGV0IHRtcDEgPSB7CiAgICAgICAgICBpZDogdGhhdC5wb2ludHNbaV0ucG9pbnRJZCwKICAgICAgICAgIGxhYmVsOiB0aGF0LnBvaW50c1tpXS5wb2ludE5hbWUsCiAgICAgICAgICBwb2ludFV1aWQ6IHRoYXQucG9pbnRzW2ldLnBvaW50VXVpZCwKICAgICAgICAgIGRhdGFUeXBlOiB0aGF0LnBvaW50c1tpXS5kYXRhVHlwZSwKICAgICAgICB9OwogICAgICAgIGlmICh0aGF0LnBvaW50c1tpXS5kYXRhVHlwZSA9PSAwKSB7CiAgICAgICAgICB0bXBEaXNwbGFjZW1lbnRbJ2NoaWxkcmVuJ10ucHVzaCh0bXAxKTsKICAgICAgICAgIGlmIChmbGFnMSA9PSAwKSB7CiAgICAgICAgICAgIHRtcERpc3BsYWNlbWVudFsnY2hpbGRyZW4nXVswXS50eXBlID0gdGhhdC5wb2ludHNbaV0udHlwZTsKICAgICAgICAgICAgZmxhZzEgPSAxOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAodGhhdC5wb2ludHNbaV0uZGF0YVR5cGUgPT0gMSkgewogICAgICAgICAgdG1wQWNjZWxlcmF0aW9uWydjaGlsZHJlbiddLnB1c2godG1wMSk7CiAgICAgICAgICBpZiAoZmxhZzIgPT0gMCkgewogICAgICAgICAgICB0bXBBY2NlbGVyYXRpb25bJ2NoaWxkcmVuJ11bMF0udHlwZSA9IHRoYXQucG9pbnRzW2ldLnR5cGU7CiAgICAgICAgICAgIGZsYWcyID0gMTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKHRoYXQucG9pbnRzW2ldLmRhdGFUeXBlID09IDIpIHsKICAgICAgICAgIHRtcFNwZWVkWydjaGlsZHJlbiddLnB1c2godG1wMSk7CiAgICAgICAgICBpZiAoZmxhZzMgPT0gMCkgewogICAgICAgICAgICB0bXBTcGVlZFsnY2hpbGRyZW4nXVswXS50eXBlID0gdGhhdC5wb2ludHNbaV0udHlwZTsKICAgICAgICAgICAgZmxhZzMgPSAxOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICAvLyBjb25zb2xlLmxvZygnLS0tLS0tLWlpaS0tLS0tLS0tLScpCiAgICAgIGlmICh0bXBEaXNwbGFjZW1lbnQuY2hpbGRyZW4ubGVuZ3RoID4gMSkKICAgICAgICB0aGlzLnBvaW50VHJlZTEucHVzaCh0bXBEaXNwbGFjZW1lbnQpOwogICAgICBpZiAodG1wQWNjZWxlcmF0aW9uLmNoaWxkcmVuLmxlbmd0aCA+IDEpCiAgICAgICAgdGhpcy5wb2ludFRyZWUxLnB1c2godG1wQWNjZWxlcmF0aW9uKTsKICAgICAgaWYgKHRtcFNwZWVkLmNoaWxkcmVuLmxlbmd0aCA+IDEpCiAgICAgICAgdGhpcy5wb2ludFRyZWUxLnB1c2godG1wU3BlZWQpOwogICAgfSwKCiAgICBzZXRQb2ludFRyZWUyKCkgewogICAgICB0aGlzLnBvaW50VHJlZTIgPSBbXTsKICAgICAgbGV0IHRtcERpc3BsYWNlbWVudCA9IHsKICAgICAgICBpZDogJ+aMr+WKqC3kvY3np7snLAogICAgICAgIGxhYmVsOiAn5oyv5YqoLeS9jeenuycsCiAgICAgICAgeGlkOiAn5oyv5YqoLeS9jeenuycsCiAgICAgICAgZGlzYWJsZWQ6IHRydWUsCiAgICAgICAgY2hpbGRyZW46IFtdCiAgICAgIH07CiAgICAgIGxldCB0bXBBY2NlbGVyYXRpb24gPSB7CiAgICAgICAgaWQ6ICfmjK/liqgt5Yqg6YCf5bqmJywKICAgICAgICBsYWJlbDogJ+aMr+WKqC3liqDpgJ/luqYnLAogICAgICAgIHhpZDogJ+aMr+WKqC3liqDpgJ/luqYnLAogICAgICAgIGRpc2FibGVkOiB0cnVlLAogICAgICAgIGNoaWxkcmVuOiBbXQogICAgICB9OwogICAgICBsZXQgdG1wU3BlZWQgPSB7CiAgICAgICAgaWQ6ICfmjK/liqgt6YCf5bqmJywKICAgICAgICBsYWJlbDogJ+aMr+WKqC3pgJ/luqYnLAogICAgICAgIHhpZDogJ+aMr+WKqC3pgJ/luqYnLAogICAgICAgIGRpc2FibGVkOiB0cnVlLAogICAgICAgIGNoaWxkcmVuOiBbXQogICAgICB9OwogICAgICBmb3IgKGNvbnN0IGkgaW4gdGhpcy5wb2ludHMpIHsKICAgICAgICBsZXQgdG1wMSA9IHsKICAgICAgICAgIGlkOiB0aGlzLnBvaW50c1tpXS5wb2ludElkLAogICAgICAgICAgcG9pbnRVdWlkOiB0aGlzLnBvaW50c1tpXS5wb2ludFV1aWQsCiAgICAgICAgICBsYWJlbDogdGhpcy5wb2ludHNbaV0ucG9pbnROYW1lLAogICAgICAgICAgeGlkOiB0aGlzLnBvaW50c1tpXS5wb2ludElkLAogICAgICAgICAgY2hpbGRyZW46IFtdLAogICAgICAgICAgcGlkOiB0aGlzLnBvaW50c1tpXS5wb2ludElkLAogICAgICAgIH07CiAgICAgICAgbGV0IHR5cGUgPSB0aGlzLnBvaW50c1tpXS50eXBlOwogICAgICAgIGlmICh0eXBlICE9IDExMyAmJiB0eXBlICE9IDExNCkgewogICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5wb2ludHNbaV0ucG9pbnROYW1lKQogICAgICAgIH0KICAgICAgICBmb3IgKGNvbnN0IGogaW4gdGhpcy4kc3RvcmUuc3RhdGUuZmVhdHVyZXNbdHlwZV0pIHsKICAgICAgICAgIGxldCB0bXAyID0gewogICAgICAgICAgICBpZDogdG1wMVsnaWQnXSArIGoudG9TdHJpbmcoKSwKICAgICAgICAgICAgcG9pbnRVdWlkOiB0bXAxWydwb2ludFV1aWQnXSwKICAgICAgICAgICAgbGFiZWw6IHRoaXMuJHN0b3JlLnN0YXRlLmZlYXR1cmVzW3R5cGVdW2pdLmxhYmVsLAogICAgICAgICAgICB4aWQ6IGoudG9TdHJpbmcoKSwKICAgICAgICAgICAgcGlkOiB0bXAxWydpZCddCiAgICAgICAgICB9OwogICAgICAgICAgdG1wMVsnY2hpbGRyZW4nXS5wdXNoKHRtcDIpOwogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5wb2ludHNbaV0uZGF0YVR5cGUgPT0gMCkgewogICAgICAgICAgdG1wRGlzcGxhY2VtZW50WydjaGlsZHJlbiddLnB1c2godG1wMSk7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnBvaW50c1tpXS5kYXRhVHlwZSA9PSAxKSB7CiAgICAgICAgICB0bXBBY2NlbGVyYXRpb25bJ2NoaWxkcmVuJ10ucHVzaCh0bXAxKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMucG9pbnRzW2ldLmRhdGFUeXBlID09IDIpIHsKICAgICAgICAgIHRtcFNwZWVkWydjaGlsZHJlbiddLnB1c2godG1wMSk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGlmICh0bXBEaXNwbGFjZW1lbnQuY2hpbGRyZW4ubGVuZ3RoID4gMCkKICAgICAgICB0aGlzLnBvaW50VHJlZTIucHVzaCh0bXBEaXNwbGFjZW1lbnQpOwogICAgICBpZiAodG1wQWNjZWxlcmF0aW9uLmNoaWxkcmVuLmxlbmd0aCA+IDApCiAgICAgICAgdGhpcy5wb2ludFRyZWUyLnB1c2godG1wQWNjZWxlcmF0aW9uKTsKICAgICAgaWYgKHRtcFNwZWVkLmNoaWxkcmVuLmxlbmd0aCA+IDApCiAgICAgICAgdGhpcy5wb2ludFRyZWUyLnB1c2godG1wU3BlZWQpOwogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnBvaW50VHJlZTIpOwogICAgfSwKCiAgICBwb2ludFRyZWUxQ2hlY2tlZChkYXRhKSB7CiAgICAgIGxldCBjaGVja2VkTm9kZXMgPSB0aGlzLiRyZWZzLnBvaW50RmVhdHVyZVRyZWUxLmdldENoZWNrZWROb2RlcygpIHx8IFtdOwogICAgICBpZiAoZGF0YSkgewogICAgICAgIGNvbnNvbGUubG9nKCdwb2ludFRyZWUxJywgdGhpcy5wb2ludFRyZWUxKTsKICAgICAgICBjb25zb2xlLmxvZygnbXlkYXRhJywgZGF0YSk7CiAgICAgICAgbGV0IE5vd0Nob3NlID0gW107CiAgICAgICAgaWYgKGRhdGEuaWQgPT0gJ+aMr+WKqC3kvY3np7snKSB7CiAgICAgICAgICAvLyBjb25zb2xlLmxvZygn54K55Ye75YWo6YCJJyk7CiAgICAgICAgICBmb3IodmFyIGl0ZW0gPSAwOyBpdGVtIDwgdGhpcy5wb2ludFRyZWUxLmxlbmd0aDsgaXRlbSsrKSB7CiAgICAgICAgICAgIGlmKHRoaXMucG9pbnRUcmVlMVtpdGVtXS5pZCA9PSAn5oyv5YqoLeS9jeenuycpIHsKICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5wb2ludFRyZWUxW2l0ZW1dLmNoaWxkcmVuLmxlbmd0aCAmJiBpIDwgOTsgaSsrKSB7Ly/mnKzmnaXmmK/mnIDlpJrpgIk45Liq5rWL54K577yM55Sx5LqO54m55b6B55qE5a2Y5Zyo77yM5pWF6L+Z6YeM5Li6OQogICAgICAgICAgICAgICAgICAgIE5vd0Nob3NlLnB1c2godGhpcy5wb2ludFRyZWUxW2l0ZW1dLmNoaWxkcmVuW2ldLmlkKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICAKICAgICAgICAgIHRoaXMuJHJlZnMucG9pbnRGZWF0dXJlVHJlZTEuc2V0Q2hlY2tlZEtleXMoTm93Q2hvc2UpOwogICAgICAgIH0gZWxzZSBpZiAoZGF0YS5pZCA9PSAn5oyv5YqoLeWKoOmAn+W6picpIHsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCfngrnlh7vlhajpgIknKTsKICAgICAgICAgIGZvcih2YXIgaXRlbSA9IDA7IGl0ZW0gPCB0aGlzLnBvaW50VHJlZTEubGVuZ3RoOyBpdGVtKyspIHsKICAgICAgICAgICAgaWYodGhpcy5wb2ludFRyZWUxW2l0ZW1dLmlkID09ICfmjK/liqgt5Yqg6YCf5bqmJykgewogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnBvaW50VHJlZTFbaXRlbV0uY2hpbGRyZW4ubGVuZ3RoICYmIGkgPCA5OyBpKyspIHsvL+acrOadpeaYr+acgOWkmumAiTjkuKrmtYvngrnvvIznlLHkuo7nibnlvoHnmoTlrZjlnKjvvIzmlYXov5nph4zkuLo5CiAgICAgICAgICAgICAgICAgICAgTm93Q2hvc2UucHVzaCh0aGlzLnBvaW50VHJlZTFbaXRlbV0uY2hpbGRyZW5baV0uaWQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIC8vIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5wb2ludFRyZWUxWzFdLmNoaWxkcmVuLmxlbmd0aCAmJiBpIDwgOTsgaSsrKSB7CiAgICAgICAgICAvLyAgIE5vd0Nob3NlLnB1c2godGhpcy5wb2ludFRyZWUxWzFdLmNoaWxkcmVuW2ldLmlkKTsKICAgICAgICAgIC8vIH0KICAgICAgICAgIHRoaXMuJHJlZnMucG9pbnRGZWF0dXJlVHJlZTEuc2V0Q2hlY2tlZEtleXMoTm93Q2hvc2UpOwogICAgICAgIH0gZWxzZSBpZiAoZGF0YS5pZCA9PSAn5oyv5YqoLemAn+W6picpIHsKICAgICAgICAgIGZvcih2YXIgaXRlbSA9IDA7IGl0ZW0gPCB0aGlzLnBvaW50VHJlZTEubGVuZ3RoOyBpdGVtKyspIHsKICAgICAgICAgICAgaWYodGhpcy5wb2ludFRyZWUxW2l0ZW1dLmlkID09ICfmjK/liqgt6YCf5bqmJykgewogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnBvaW50VHJlZTFbaXRlbV0uY2hpbGRyZW4ubGVuZ3RoICYmIGkgPCA5OyBpKyspIHsvL+acrOadpeaYr+acgOWkmumAiTjkuKrmtYvngrnvvIznlLHkuo7nibnlvoHnmoTlrZjlnKjvvIzmlYXov5nph4zkuLo5CiAgICAgICAgICAgICAgICAgICAgTm93Q2hvc2UucHVzaCh0aGlzLnBvaW50VHJlZTFbaXRlbV0uY2hpbGRyZW5baV0uaWQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCfngrnlh7vlhajpgIknKTsKICAgICAgICAgIC8vIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5wb2ludFRyZWUxWzJdLmNoaWxkcmVuLmxlbmd0aCAmJiBpIDwgOTsgaSsrKSB7CiAgICAgICAgICAvLyAgIE5vd0Nob3NlLnB1c2godGhpcy5wb2ludFRyZWUxWzJdLmNoaWxkcmVuW2ldLmlkKTsKICAgICAgICAgIC8vIH0KICAgICAgICAgIHRoaXMuJHJlZnMucG9pbnRGZWF0dXJlVHJlZTEuc2V0Q2hlY2tlZEtleXMoTm93Q2hvc2UpOwogICAgICAgIH0gIGVsc2UgaWYgKHRoaXMubGFzdENob29zZVBvaW50cy5sZW5ndGggPT0gMCB8fCBkYXRhLmRhdGFUeXBlICE9IHRoaXMubGFzdENob29zZVBvaW50c1swXS5kYXRhVHlwZSkgewogICAgICAgICAgLy8gY29uc29sZS5sb2coJ+WNlemAiScpOwogICAgICAgICAgCiAgICAgICAgICB2YXIgdG1wc3RyaW5nICA9ICcnOwogICAgICAgICAgaWYoZGF0YS5kYXRhVHlwZSA9PSAwKSB7CiAgICAgICAgICAgIHRtcHN0cmluZyA9ICfmjK/liqgt5L2N56e7JzsKICAgICAgICAgIH0gZWxzZSBpZihkYXRhLmRhdGFUeXBlID09IDEpIHsKICAgICAgICAgICAgdG1wc3RyaW5nID0gJ+aMr+WKqC3liqDpgJ/luqYnOwogICAgICAgICAgfSBlbHNlIGlmKGRhdGEuZGF0YVR5cGUgPT0gMikgewogICAgICAgICAgICB0bXBzdHJpbmcgPSAn5oyv5YqoLemAn+W6pic7CiAgICAgICAgICB9CiAgICAgICAgICBmb3IodmFyIGl0ZW0gPSAwOyBpdGVtIDwgdGhpcy5wb2ludFRyZWUxLmxlbmd0aDsgaXRlbSsrKSB7CiAgICAgICAgICAgIGlmKHRtcHN0cmluZyA9PSB0aGlzLnBvaW50VHJlZTFbaXRlbV0uaWQpIHsKICAgICAgICAgICAgICBOb3dDaG9zZSA9IFt0aGlzLnBvaW50VHJlZTFbaXRlbV0uY2hpbGRyZW5bMF0uaWQsIGRhdGEuaWRdOwogICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCfljZXpgIknLCB0aGlzLnBvaW50VHJlZTFbaXRlbV0uY2hpbGRyZW5bMF0uaWQsIGRhdGEuaWQpOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICAKICAgICAgICAgIC8vIE5vd0Nob3NlID0gW3RoaXMucG9pbnRUcmVlMVtkYXRhLmRhdGFUeXBlXS5jaGlsZHJlblswXS5pZCwgZGF0YS5pZF07CiAgICAgICAgICB0aGlzLiRyZWZzLnBvaW50RmVhdHVyZVRyZWUxLnNldENoZWNrZWRLZXlzKE5vd0Nob3NlKTsKICAgICAgICB9CiAgICAgICAgY2hlY2tlZE5vZGVzID0gdGhpcy4kcmVmcy5wb2ludEZlYXR1cmVUcmVlMS5nZXRDaGVja2VkTm9kZXMoKTsKICAgICAgICBjb25zb2xlLmxvZygnY2hlY2tlZE5vZGVzJywgY2hlY2tlZE5vZGVzKTsKICAgICAgICB0aGlzLmxhc3RDaG9vc2VQb2ludHMgPSBbXTsKICAgICAgICBmb3IgKGNvbnN0IGkgaW4gY2hlY2tlZE5vZGVzKSB7CiAgICAgICAgICBpZiAoY2hlY2tlZE5vZGVzW2ldLmlkICE9ICfmjK/liqgt5L2N56e7JyAmJiBjaGVja2VkTm9kZXNbaV0uaWQgIT0gJ+aMr+WKqC3liqDpgJ/luqYnICYmCiAgICAgICAgICAgIGNoZWNrZWROb2Rlc1tpXS5pZCAhPSAn5oyv5YqoLemAn+W6picgJiYgY2hlY2tlZE5vZGVzW2ldLmlkLmluZGV4T2YoJ+eJueW+gScpID09IC0xKSB7CiAgICAgICAgICAgIHRoaXMubGFzdENob29zZVBvaW50cy5wdXNoKGNoZWNrZWROb2Rlc1tpXSkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCByZXR1cm5UcmVlRGF0YSA9IHt9OwogICAgICByZXR1cm5UcmVlRGF0YVsndHJlZVNlbGVjdCddID0gdGhpcy50cmVlU2VsZWN0OwogICAgICByZXR1cm5UcmVlRGF0YVsnY2hlY2tlZE5vZGVzJ10gPSB0aGlzLiRyZWZzLnBvaW50RmVhdHVyZVRyZWUxLmdldEhhbGZDaGVja2VkTm9kZXMoKTsKICAgICAgY2hlY2tlZE5vZGVzID0gY2hlY2tlZE5vZGVzLmZpbHRlcigoaXRlbSkgPT4gewogICAgICAgIHJldHVybiBpdGVtLmlkLmluZGV4T2YoJ+eJueW+gScpID09IC0xOwogICAgICB9KTsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGVja2VkTm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoY2hlY2tlZE5vZGVzW2ldLmxhYmVsID09ICLnibnlvoEiKQogICAgICAgICAgY29udGludWU7CiAgICAgICAgcmV0dXJuVHJlZURhdGFbJ2ZlYXR1cmVTZWxlY3QnXSA9IHRoaXMuZmVhdHVyZVNlbGVjdFtjaGVja2VkTm9kZXNbaV0uZGF0YVR5cGVdOyAvL+acgOWlveimgeaUuQogICAgICAgIHJldHVyblRyZWVEYXRhWydjaGVja2VkTm9kZXMnXS5wdXNoKGNoZWNrZWROb2Rlc1tpXSk7CiAgICAgIH0KICAgICAgaWYgKHJldHVyblRyZWVEYXRhWydjaGVja2VkTm9kZXMnXS5sZW5ndGggPiAxKSB7CiAgICAgICAgcmV0dXJuVHJlZURhdGEuZmVhdHVyZVNlbGVjdCA9IHRoaXMuZmVhdHVyZVNlbGVjdFtyZXR1cm5UcmVlRGF0YVsnY2hlY2tlZE5vZGVzJ11bMV0uZGF0YVR5cGVdOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZygiZ2V0UG9pbnRGZWF0dXJlVHJlZTJEYXRhIiwgcmV0dXJuVHJlZURhdGEpOwogICAgICB0aGlzLiRlbWl0KCdnZXRQb2ludEZlYXR1cmVUcmVlMkRhdGEnLCByZXR1cm5UcmVlRGF0YSk7CiAgICB9LAoKICAgIHBvaW50VHJlZTJDaGVja2VkKGRhdGEpIHsKCiAgICAgIGxldCBjaGVja2VkTm9kZXMgPSB0aGlzLiRyZWZzLnBvaW50RmVhdHVyZVRyZWUyLmdldENoZWNrZWROb2RlcygpOwogICAgICBsZXQgaGFsZkNoZWNrZWROb2RlcyA9IHRoaXMuJHJlZnMucG9pbnRGZWF0dXJlVHJlZTIuZ2V0SGFsZkNoZWNrZWROb2RlcygpOwogICAgICBjb25zb2xlLmxvZyhjaGVja2VkTm9kZXMsICdkYXhpbicpCiAgICAgIC8vIGlmIChoYWxmQ2hlY2tlZE5vZGVzLmxlbmd0aCA+IDIgfHwgY2hlY2tlZE5vZGVzLmxlbmd0aCA+IDcpIHsKICAgICAgLy8gICB0aGlzLiRyZWZzLnBvaW50RmVhdHVyZVRyZWUyLnNldENoZWNrZWROb2RlcyhbZGF0YV0pOwogICAgICAvLyB9CiAgICAgIGlmIChkYXRhICE9IHVuZGVmaW5lZCkgewogICAgICAgIHZhciBuZXdjID0gW10KICAgICAgICB2YXIgZmxhZyA9IC0xOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hlY2tlZE5vZGVzLmxlbmd0aDsgKytpKSB7CiAgICAgICAgICBpZiAoY2hlY2tlZE5vZGVzW2ldLmlkID09IGRhdGEuaWQpIHsKICAgICAgICAgICAgZmxhZyA9IGk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoZmxhZyAhPSAtMSkgewogICAgICAgICAgaWYgKGRhdGEucGlkICE9IHRoaXMuY2ZsYWcpIHsKICAgICAgICAgICAgbmV3Yy5wdXNoKGRhdGEuaWQpOwogICAgICAgICAgICB0aGlzLmNmbGFnID0gZGF0YS5waWQ7CiAgICAgICAgICAgIHRoaXMuJHJlZnMucG9pbnRGZWF0dXJlVHJlZTIuc2V0Q2hlY2tlZEtleXMobmV3YykKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgY2hlY2tlZE5vZGVzID0gdGhpcy4kcmVmcy5wb2ludEZlYXR1cmVUcmVlMi5nZXRDaGVja2VkTm9kZXMoKTsKICAgICAgaGFsZkNoZWNrZWROb2RlcyA9IHRoaXMuJHJlZnMucG9pbnRGZWF0dXJlVHJlZTIuZ2V0SGFsZkNoZWNrZWROb2RlcygpOwogICAgICB2YXIgY2MgPSBbXTsKICAgICAgbGV0IHJldHVyblRyZWVEYXRhID0ge307CiAgICAgIGNvbnNvbGUubG9nKCLmiZPljbDlpYfmgKrnmoTkuJzopb8iLGNoZWNrZWROb2Rlcyk7CiAgICAgIGlmIChjaGVja2VkTm9kZXMubGVuZ3RoID4gMCkgewogICAgICAgIGlmIChjaGVja2VkTm9kZXNbMF0uaWQuaW5kZXhPZign5oyv5YqoJykgIT0gLTEpIHsKICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgY2hlY2tlZE5vZGVzLmxlbmd0aDsgKytpKSB7CiAgICAgICAgICAgIGNjLnB1c2goY2hlY2tlZE5vZGVzW2ldKQogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuVHJlZURhdGFbJ3R5cGUnXSA9IGNoZWNrZWROb2Rlc1swXS5sYWJlbDsKICAgICAgICAgIGNoZWNrZWROb2RlcyA9IGNjOwoKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVyblRyZWVEYXRhWyd0cmVlU2VsZWN0J10gPSB0aGlzLnRyZWVTZWxlY3Q7CiAgICAgIHJldHVyblRyZWVEYXRhWydjaGVja2VkTm9kZXMnXSA9IFtdOwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhhbGZDaGVja2VkTm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoaGFsZkNoZWNrZWROb2Rlc1tpXS5pZC5pbmRleE9mKCLmjK/liqgiKSAhPSAtMSkgewogICAgICAgICAgcmV0dXJuVHJlZURhdGFbJ3R5cGUnXSA9IGhhbGZDaGVja2VkTm9kZXNbaV0ubGFiZWw7CiAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuVHJlZURhdGFbJ2NoZWNrZWROb2RlcyddLnB1c2goaGFsZkNoZWNrZWROb2Rlc1tpXSk7CiAgICAgICAgcmV0dXJuVHJlZURhdGFbJ2NoZWNrZWROb2RlcyddWzBdLnR5cGUgPSByZXR1cm5UcmVlRGF0YVsndHlwZSddOwogICAgICB9CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hlY2tlZE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKGNoZWNrZWROb2Rlc1tpXS5pZC5pbmRleE9mKCLmjK/liqgiKSAhPSAtMSkgewogICAgICAgICAgcmV0dXJuVHJlZURhdGFbJ3R5cGUnXSA9IGNoZWNrZWROb2Rlc1tpXS5sYWJlbDsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KICAgICAgICByZXR1cm5UcmVlRGF0YVsnY2hlY2tlZE5vZGVzJ10ucHVzaChjaGVja2VkTm9kZXNbaV0pOwogICAgICAgIHJldHVyblRyZWVEYXRhWydjaGVja2VkTm9kZXMnXVswXS50eXBlID0gcmV0dXJuVHJlZURhdGFbJ3R5cGUnXTsKICAgICAgfQogICAgICAvLyBjb25zb2xlLmxvZyhyZXR1cm5UcmVlRGF0YSk7CiAgICAgIHRoaXMuJGVtaXQoJ2dldFBvaW50RmVhdHVyZVRyZWUyRGF0YScsIHJldHVyblRyZWVEYXRhKTsKICAgIH0sCgogICAgdHJlZUNoYW5nZSh2YWx1ZSkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgaWYgKHZhbHVlID09ICIwIikgewogICAgICAgICAgdGhpcy5wb2ludFRyZWUxQ2hlY2tlZCgpOwogICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT0gIjEiKSB7CiAgICAgICAgICB0aGlzLnBvaW50VHJlZTJDaGVja2VkKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgcmVuZGVyQ29udGVudChoLCB7bm9kZSwgZGF0YSwgc3RvcmV9KSB7CiAgICAgIGlmIChub2RlLmxhYmVsID09ICfnibnlvoEnKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YS50eXBlKQogICAgICAgIGxldCBkYXRhVHlwZSA9IDA7CiAgICAgICAgbGV0IHRlbXBUeXBlU2VsZWN0ID0gdGhpcy4kc3RvcmUuc3RhdGUuZmVhdHVyZXNbZGF0YS50eXBlXTsKICAgICAgICAvLyBsZXQgdGVtcFR5cGVTZWxlY3QgPSBbXTsKICAgICAgICAvLyBjb25zb2xlLmxvZyhub2RlKQogICAgICAgIGlmIChub2RlLmRhdGEuaWQgPT0gJ+eJueW+gS3kvY3np7snKSB7CiAgICAgICAgICBkYXRhVHlwZSA9IDA7CiAgICAgICAgfSBlbHNlIGlmIChub2RlLmRhdGEuaWQgPT0gJ+eJueW+gS3liqDpgJ/luqYnKSB7CiAgICAgICAgICBkYXRhVHlwZSA9IDE7CiAgICAgICAgfSBlbHNlIGlmIChub2RlLmRhdGEuaWQgPT0gJ+eJueW+gS3pgJ/luqYnKSB7CiAgICAgICAgICBkYXRhVHlwZSA9IDI7CiAgICAgICAgfQogICAgICAgIHJldHVybiBoKAogICAgICAgICAgImRpdiIsIFsKICAgICAgICAgICAgaCgKICAgICAgICAgICAgICAic3BhbiIsIHsKICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTNweCcsCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZmZmZicsCiAgICAgICAgICAgICAgICAgIG1hcmdpblJpZ2h0OiAnNXB4JwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LCAi54m55b6BIgogICAgICAgICAgICApLCBoKAogICAgICAgICAgICAgICJlbC1zZWxlY3QiLCB7CiAgICAgICAgICAgICAgICBjbGFzczogImVsLXNlbGVjdC0tbWluaSBlbC1pbnB1dC0tbWluaSIsCiAgICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgICB3aWR0aDogJzU1JScKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBpbnB1dDogKHZhbHVlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuZmVhdHVyZVNlbGVjdCwgZGF0YVR5cGUsIHZhbHVlKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnBvaW50VHJlZTFDaGVja2VkKCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBwcm9wczogewogICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5mZWF0dXJlU2VsZWN0W2RhdGFUeXBlXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sIFsKICAgICAgICAgICAgICAgIHRlbXBUeXBlU2VsZWN0Lm1hcChpdGVtID0+IHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGgoCiAgICAgICAgICAgICAgICAgICAgImVsLW9wdGlvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6ICcxOHB4JywKICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICcxM3B4JywKICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnMThweCcKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBwcm9wczogewogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGl0ZW0ubGFiZWwKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKQogICAgICAgICAgXQogICAgICAgICk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGgoCiAgICAgICAgICAic3BhbiIsIHsKICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICBmb250U2l6ZTogJzEzcHgnLAogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZmZmZicKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sIG5vZGUubGFiZWwKICAgICAgICApOwogICAgICB9CiAgICB9CiAgfSwKfQo="},{"version":3,"sources":["TrendAnalysisPointTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"TrendAnalysisPointTree.vue","sourceRoot":"src/Analysis","sourcesContent":["\n\n<template>\n  <div>\n    <el-form-item label=\"类型选择:\">\n      <el-select v-model=\"treeSelect\" placeholder=\"请选择类型\" @change=\"treeChange\">\n        <el-option label=\"多通道单特征值\" value=\"0\"></el-option>\n        <el-option label=\"单通道多特征值\" value=\"1\"></el-option>\n      </el-select>\n    </el-form-item>\n    <div class=\"trend-analysis-point-tree\" v-show=\"treeSelect == 0\">\n      <el-tree :data=\"pointTree1\" show-checkbox node-key=\"id\" :default-expanded-keys=\"['振动-位移']\"\n               @check=\"pointTree1Checked\"\n               accordion ref=\"pointFeatureTree1\" :render-content=\"renderContent\"></el-tree>\n    </div>\n    <div class=\"trend-analysis-point-tree\" v-show=\"treeSelect == 1\">\n      <el-tree :data=\"pointTree2\" accordion show-checkbox node-key=\"id\" :default-expanded-keys=\"['振动-位移']\"\n               @check=\"pointTree2Checked\" ref=\"pointFeatureTree2\"></el-tree>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: \"TrendAnalysisPointTree\",\n    data() {\n      return {\n        treeSelect: \"0\",\n        featureSelect: [0, 0, 0],\n        \n        points: [],\n        pointTree1: [],\n        pointTree2: [],\n        cflag: 0,\n        lastChoosePoints: [],\n        defaultProps: {\n          children: 'children',\n          label: 'label',\n          disabled: function (data, node) {\n            if (node.store.getCheckedKeys(true).length >= 8) {\n              return node.store.getCheckedKeys(true).indexOf(data.id) < 0\n            }\n          }\n        },\n      };\n    },\n\n    mounted() {\n      if (this.nodeData[this.equid] != undefined) {\n        this.setPointTree(this.equid);\n      }\n    },\n\n    computed: {\n      nodeData() {\n        return this.$store.state.nodeData;\n      },\n      equid() {\n        return this.$store.state.equid;\n      },\n      nodeNum() {\n        return this.$store.state.nodeNum;\n      },\n      equipmentDetail() {\n        return this.$store.state.equipmentDetail;\n      }\n    },\n\n    watch: {\n      equid: {\n        handler(newEquid) {\n          // console.log(newEquid)\n          this.$nextTick(() => this.setPointTree(newEquid));\n\n          // console.log(this.pointTree1);\n        }\n      },\n      nodeNum: {\n        handler() {\n          this.setPointTree(this.equid);\n          // console.log(this.pointTree1);\n        }\n      }\n    },\n\n    methods: {\n      setPointTree(equid) {\n        let that = this;\n        let newEquid = equid;\n        // console.log(this.equipmentDetail)\n        setTimeout(function () {\n\n          let _data = that.equipmentDetail[newEquid];\n          // console.log(_data);\n          if (_data == undefined)\n            return;\n          that.points = [];\n          for (const i in _data) {\n            if (_data[i].dataType == 1 || _data[i].dataType == 2 || _data[i].dataType == 0) {\n              that.points.push(_data[i]);\n            }\n          }\n          // console.log(that.pointTree1,'-------iii---------')\n          that.setPointTree1();\n          that.setPointTree2();\n          that.$nextTick(() => {\n            for (const i in that.pointTree1) {\n              if (that.pointTree1[i].children.length > 1) {\n                that.$refs.pointFeatureTree1.setCheckedKeys([that.pointTree1[i].children[0].id, that.pointTree1[i].children[1].id]);\n                that.lastChoosePoints = [that.pointTree1[i].children[1]];\n                break;\n              }\n            }\n            for (const i in that.pointTree2) {\n              if (that.pointTree2[i].children.length > 0) {\n                // console.log(i)\n                let tempList = [];\n                this.cflag = that.pointTree2[i].children[0].pid;\n\n                for (const j in that.pointTree2[i].children[0].children) {\n                  tempList.push(that.pointTree2[i].children[0].children[j].id);\n                  if (j > 5) {\n                    break;\n                  }\n                }\n                that.$refs.pointFeatureTree2.setCheckedKeys(tempList);\n\n                break;\n              }\n            }\n            if (that.treeSelect == \"0\") {\n              that.pointTree1Checked();\n            } else {\n              that.pointTree2Checked();\n            }\n            that.$emit('firstdo');\n\n          });\n\n        }, 1000);\n      },\n\n      setPointTree1() {\n        this.pointTree1 = [];\n        // console.log('-------iii---------')\n        let tmpDisplacement = {\n          id: '振动-位移',\n          label: '振动-位移',\n          children: []\n        };\n        let tmpAcceleration = {\n          id: '振动-加速度',\n          label: '振动-加速度',\n          children: []\n        };\n        let tmpSpeed = {\n          id: '振动-速度',\n          label: '振动-速度',\n          children: []\n        };\n        let tmp2 = {\n          id: '特征-位移',\n          label: '特征',\n          disabled: true,\n          type: 113,\n        };\n        let tmp3 = {\n          id: '特征-加速度',\n          label: '特征',\n          disabled: true,\n          type: 113,\n        };\n        let tmp4 = {\n          id: '特征-速度',\n          label: '特征',\n          disabled: true,\n          type: 113,\n        };\n        tmpDisplacement['children'].push(tmp2);\n        tmpAcceleration['children'].push(tmp3);\n        tmpSpeed['children'].push(tmp4);\n        // console.log('-------iii---------')\n        let that = this;\n        let flag1 = 0, flag2 = 0, flag3 = 0;\n        for (const i in this.points) {\n          let tmp1 = {\n            id: that.points[i].pointId,\n            label: that.points[i].pointName,\n            pointUuid: that.points[i].pointUuid,\n            dataType: that.points[i].dataType,\n          };\n          if (that.points[i].dataType == 0) {\n            tmpDisplacement['children'].push(tmp1);\n            if (flag1 == 0) {\n              tmpDisplacement['children'][0].type = that.points[i].type;\n              flag1 = 1;\n            }\n          } else if (that.points[i].dataType == 1) {\n            tmpAcceleration['children'].push(tmp1);\n            if (flag2 == 0) {\n              tmpAcceleration['children'][0].type = that.points[i].type;\n              flag2 = 1;\n            }\n          } else if (that.points[i].dataType == 2) {\n            tmpSpeed['children'].push(tmp1);\n            if (flag3 == 0) {\n              tmpSpeed['children'][0].type = that.points[i].type;\n              flag3 = 1;\n            }\n          }\n        }\n        // console.log('-------iii---------')\n        if (tmpDisplacement.children.length > 1)\n          this.pointTree1.push(tmpDisplacement);\n        if (tmpAcceleration.children.length > 1)\n          this.pointTree1.push(tmpAcceleration);\n        if (tmpSpeed.children.length > 1)\n          this.pointTree1.push(tmpSpeed);\n      },\n\n      setPointTree2() {\n        this.pointTree2 = [];\n        let tmpDisplacement = {\n          id: '振动-位移',\n          label: '振动-位移',\n          xid: '振动-位移',\n          disabled: true,\n          children: []\n        };\n        let tmpAcceleration = {\n          id: '振动-加速度',\n          label: '振动-加速度',\n          xid: '振动-加速度',\n          disabled: true,\n          children: []\n        };\n        let tmpSpeed = {\n          id: '振动-速度',\n          label: '振动-速度',\n          xid: '振动-速度',\n          disabled: true,\n          children: []\n        };\n        for (const i in this.points) {\n          let tmp1 = {\n            id: this.points[i].pointId,\n            pointUuid: this.points[i].pointUuid,\n            label: this.points[i].pointName,\n            xid: this.points[i].pointId,\n            children: [],\n            pid: this.points[i].pointId,\n          };\n          let type = this.points[i].type;\n          if (type != 113 && type != 114) {\n            // console.log(this.points[i].pointName)\n          }\n          for (const j in this.$store.state.features[type]) {\n            let tmp2 = {\n              id: tmp1['id'] + j.toString(),\n              pointUuid: tmp1['pointUuid'],\n              label: this.$store.state.features[type][j].label,\n              xid: j.toString(),\n              pid: tmp1['id']\n            };\n            tmp1['children'].push(tmp2);\n          }\n          if (this.points[i].dataType == 0) {\n            tmpDisplacement['children'].push(tmp1);\n          } else if (this.points[i].dataType == 1) {\n            tmpAcceleration['children'].push(tmp1);\n          } else if (this.points[i].dataType == 2) {\n            tmpSpeed['children'].push(tmp1);\n          }\n        }\n        if (tmpDisplacement.children.length > 0)\n          this.pointTree2.push(tmpDisplacement);\n        if (tmpAcceleration.children.length > 0)\n          this.pointTree2.push(tmpAcceleration);\n        if (tmpSpeed.children.length > 0)\n          this.pointTree2.push(tmpSpeed);\n        // console.log(this.pointTree2);\n      },\n\n      pointTree1Checked(data) {\n        let checkedNodes = this.$refs.pointFeatureTree1.getCheckedNodes() || [];\n        if (data) {\n          console.log('pointTree1', this.pointTree1);\n          console.log('mydata', data);\n          let NowChose = [];\n          if (data.id == '振动-位移') {\n            // console.log('点击全选');\n            for(var item = 0; item < this.pointTree1.length; item++) {\n              if(this.pointTree1[item].id == '振动-位移') {\n                  for (var i = 0; i < this.pointTree1[item].children.length && i < 9; i++) {//本来是最多选8个测点，由于特征的存在，故这里为9\n                      NowChose.push(this.pointTree1[item].children[i].id);\n                  }\n                  break;\n              }\n            }\n            \n            this.$refs.pointFeatureTree1.setCheckedKeys(NowChose);\n          } else if (data.id == '振动-加速度') {\n            // console.log('点击全选');\n            for(var item = 0; item < this.pointTree1.length; item++) {\n              if(this.pointTree1[item].id == '振动-加速度') {\n                  for (var i = 0; i < this.pointTree1[item].children.length && i < 9; i++) {//本来是最多选8个测点，由于特征的存在，故这里为9\n                      NowChose.push(this.pointTree1[item].children[i].id);\n                  }\n                  break;\n              }\n            }\n            // for (var i = 0; i < this.pointTree1[1].children.length && i < 9; i++) {\n            //   NowChose.push(this.pointTree1[1].children[i].id);\n            // }\n            this.$refs.pointFeatureTree1.setCheckedKeys(NowChose);\n          } else if (data.id == '振动-速度') {\n            for(var item = 0; item < this.pointTree1.length; item++) {\n              if(this.pointTree1[item].id == '振动-速度') {\n                  for (var i = 0; i < this.pointTree1[item].children.length && i < 9; i++) {//本来是最多选8个测点，由于特征的存在，故这里为9\n                      NowChose.push(this.pointTree1[item].children[i].id);\n                  }\n                  break;\n              }\n            }\n            // console.log('点击全选');\n            // for (var i = 0; i < this.pointTree1[2].children.length && i < 9; i++) {\n            //   NowChose.push(this.pointTree1[2].children[i].id);\n            // }\n            this.$refs.pointFeatureTree1.setCheckedKeys(NowChose);\n          }  else if (this.lastChoosePoints.length == 0 || data.dataType != this.lastChoosePoints[0].dataType) {\n            // console.log('单选');\n            \n            var tmpstring  = '';\n            if(data.dataType == 0) {\n              tmpstring = '振动-位移';\n            } else if(data.dataType == 1) {\n              tmpstring = '振动-加速度';\n            } else if(data.dataType == 2) {\n              tmpstring = '振动-速度';\n            }\n            for(var item = 0; item < this.pointTree1.length; item++) {\n              if(tmpstring == this.pointTree1[item].id) {\n                NowChose = [this.pointTree1[item].children[0].id, data.id];\n                // console.log('单选', this.pointTree1[item].children[0].id, data.id);\n                break;\n              }\n            }\n            \n            // NowChose = [this.pointTree1[data.dataType].children[0].id, data.id];\n            this.$refs.pointFeatureTree1.setCheckedKeys(NowChose);\n          }\n          checkedNodes = this.$refs.pointFeatureTree1.getCheckedNodes();\n          console.log('checkedNodes', checkedNodes);\n          this.lastChoosePoints = [];\n          for (const i in checkedNodes) {\n            if (checkedNodes[i].id != '振动-位移' && checkedNodes[i].id != '振动-加速度' &&\n              checkedNodes[i].id != '振动-速度' && checkedNodes[i].id.indexOf('特征') == -1) {\n              this.lastChoosePoints.push(checkedNodes[i])\n            }\n          }\n        }\n\n        let returnTreeData = {};\n        returnTreeData['treeSelect'] = this.treeSelect;\n        returnTreeData['checkedNodes'] = this.$refs.pointFeatureTree1.getHalfCheckedNodes();\n        checkedNodes = checkedNodes.filter((item) => {\n          return item.id.indexOf('特征') == -1;\n        });\n        for (let i = 0; i < checkedNodes.length; i++) {\n          if (checkedNodes[i].label == \"特征\")\n            continue;\n          returnTreeData['featureSelect'] = this.featureSelect[checkedNodes[i].dataType]; //最好要改\n          returnTreeData['checkedNodes'].push(checkedNodes[i]);\n        }\n        if (returnTreeData['checkedNodes'].length > 1) {\n          returnTreeData.featureSelect = this.featureSelect[returnTreeData['checkedNodes'][1].dataType];\n        }\n\n        console.log(\"getPointFeatureTree2Data\", returnTreeData);\n        this.$emit('getPointFeatureTree2Data', returnTreeData);\n      },\n\n      pointTree2Checked(data) {\n\n        let checkedNodes = this.$refs.pointFeatureTree2.getCheckedNodes();\n        let halfCheckedNodes = this.$refs.pointFeatureTree2.getHalfCheckedNodes();\n        console.log(checkedNodes, 'daxin')\n        // if (halfCheckedNodes.length > 2 || checkedNodes.length > 7) {\n        //   this.$refs.pointFeatureTree2.setCheckedNodes([data]);\n        // }\n        if (data != undefined) {\n          var newc = []\n          var flag = -1;\n          for (var i = 0; i < checkedNodes.length; ++i) {\n            if (checkedNodes[i].id == data.id) {\n              flag = i;\n              break;\n            }\n          }\n          if (flag != -1) {\n            if (data.pid != this.cflag) {\n              newc.push(data.id);\n              this.cflag = data.pid;\n              this.$refs.pointFeatureTree2.setCheckedKeys(newc)\n            }\n          }\n        }\n        checkedNodes = this.$refs.pointFeatureTree2.getCheckedNodes();\n        halfCheckedNodes = this.$refs.pointFeatureTree2.getHalfCheckedNodes();\n        var cc = [];\n        let returnTreeData = {};\n        console.log(\"打印奇怪的东西\",checkedNodes);\n        if (checkedNodes.length > 0) {\n          if (checkedNodes[0].id.indexOf('振动') != -1) {\n            for (var i = 1; i < checkedNodes.length; ++i) {\n              cc.push(checkedNodes[i])\n            }\n            returnTreeData['type'] = checkedNodes[0].label;\n            checkedNodes = cc;\n\n          }\n        }\n\n        returnTreeData['treeSelect'] = this.treeSelect;\n        returnTreeData['checkedNodes'] = [];\n        for (let i = 0; i < halfCheckedNodes.length; i++) {\n          if (halfCheckedNodes[i].id.indexOf(\"振动\") != -1) {\n            returnTreeData['type'] = halfCheckedNodes[i].label;\n            continue;\n          }\n          returnTreeData['checkedNodes'].push(halfCheckedNodes[i]);\n          returnTreeData['checkedNodes'][0].type = returnTreeData['type'];\n        }\n        for (let i = 0; i < checkedNodes.length; i++) {\n          if (checkedNodes[i].id.indexOf(\"振动\") != -1) {\n            returnTreeData['type'] = checkedNodes[i].label;\n            continue;\n          }\n          returnTreeData['checkedNodes'].push(checkedNodes[i]);\n          returnTreeData['checkedNodes'][0].type = returnTreeData['type'];\n        }\n        // console.log(returnTreeData);\n        this.$emit('getPointFeatureTree2Data', returnTreeData);\n      },\n\n      treeChange(value) {\n        this.$nextTick(() => {\n          if (value == \"0\") {\n            this.pointTree1Checked();\n          } else if (value == \"1\") {\n            this.pointTree2Checked();\n          }\n        });\n      },\n\n      renderContent(h, {node, data, store}) {\n        if (node.label == '特征') {\n          // console.log(data.type)\n          let dataType = 0;\n          let tempTypeSelect = this.$store.state.features[data.type];\n          // let tempTypeSelect = [];\n          // console.log(node)\n          if (node.data.id == '特征-位移') {\n            dataType = 0;\n          } else if (node.data.id == '特征-加速度') {\n            dataType = 1;\n          } else if (node.data.id == '特征-速度') {\n            dataType = 2;\n          }\n          return h(\n            \"div\", [\n              h(\n                \"span\", {\n                  style: {\n                    fontSize: '13px',\n                    color: '#ffffff',\n                    marginRight: '5px'\n                  },\n                }, \"特征\"\n              ), h(\n                \"el-select\", {\n                  class: \"el-select--mini el-input--mini\",\n                  style: {\n                    width: '55%'\n                  },\n                  on: {\n                    input: (value) => {\n                      this.$set(this.featureSelect, dataType, value);\n                      this.pointTree1Checked();\n                    }\n                  },\n                  props: {\n                    value: this.featureSelect[dataType]\n                  }\n                }, [\n                  tempTypeSelect.map(item => {\n                    return h(\n                      \"el-option\", {\n                        style: {\n                          lineHeight: '18px',\n                          fontSize: '13px',\n                          height: '18px'\n                        },\n                        props: {\n                          value: item.id,\n                          label: item.label\n                        }\n                      }\n                    );\n                  })\n                ]\n              )\n            ]\n          );\n        } else {\n          return h(\n            \"span\", {\n              style: {\n                fontSize: '13px',\n                color: '#ffffff'\n              },\n            }, node.label\n          );\n        }\n      }\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  .trend-analysis-point-tree {\n    height: 250px;\n    overflow: auto;\n    background-color: #3C455B;\n    margin-bottom: 7px;\n\n    .el-select {\n      width: 70%;\n    }\n\n    .el-tree {\n      background: #3C455B;\n\n      .el-input {\n        font-size: 12px;\n      }\n\n      .el-tree-node > .el-tree-node__content {\n        background-color: #3C455B !important;\n      }\n\n      .el-tree-node.is-current > .el-tree-node__content {\n        background-color: #3C455B !important;\n      }\n\n      .el-tree-node__content {\n        height: 60%;\n      }\n\n      .el-tree-node__content > .el-tree-node__expand-icon {\n        padding: 2px;\n      }\n\n      .el-checkbox {\n        font-size: 13px;\n      }\n\n      .el-tree-node__label {\n        font-size: 13px;\n        color: white;\n      }\n\n      .el-checkbox__input.is-disabled.is-indeterminate .el-checkbox__inner {\n        background-color: #409EFF;\n        border-color: #409EFF;\n      }\n    }\n\n  }\n</style>\n"]}]}